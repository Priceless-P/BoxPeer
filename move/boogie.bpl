
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var mid_left_vec: Vec ($1_aggregator_Aggregator);
    var mid_right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, e: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aptos_coin_AptosCoin`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aptos_coin_AptosCoin''(v1: Vec ($1_aptos_coin_AptosCoin), v2: Vec ($1_aptos_coin_AptosCoin)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aptos_coin_AptosCoin''(v: Vec ($1_aptos_coin_AptosCoin), prefix: Vec ($1_aptos_coin_AptosCoin)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aptos_coin_AptosCoin''(v: Vec ($1_aptos_coin_AptosCoin), suffix: Vec ($1_aptos_coin_AptosCoin)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aptos_coin_AptosCoin''(v: Vec ($1_aptos_coin_AptosCoin)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aptos_coin_AptosCoin'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin): int;
axiom (forall v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin:: {$IndexOfVec'$1_aptos_coin_AptosCoin'(v, e)}
    (var i := $IndexOfVec'$1_aptos_coin_AptosCoin'(v, e);
     if (!$ContainsVec'$1_aptos_coin_AptosCoin'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aptos_coin_AptosCoin'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aptos_coin_AptosCoin'(): Vec ($1_aptos_coin_AptosCoin) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aptos_coin_AptosCoin'() returns (v: Vec ($1_aptos_coin_AptosCoin)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aptos_coin_AptosCoin'(): Vec ($1_aptos_coin_AptosCoin) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), val: $1_aptos_coin_AptosCoin) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), val: $1_aptos_coin_AptosCoin): Vec ($1_aptos_coin_AptosCoin) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin))) returns (e: $1_aptos_coin_AptosCoin, m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var v: Vec ($1_aptos_coin_AptosCoin);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), other: Vec ($1_aptos_coin_AptosCoin)) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin))) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), other: Vec ($1_aptos_coin_AptosCoin)) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), new_len: int) returns (v: (Vec ($1_aptos_coin_AptosCoin)), m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), new_len: int) returns (v: (Vec ($1_aptos_coin_AptosCoin)), m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), left: int, right: int) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    var v: Vec ($1_aptos_coin_AptosCoin);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var v: Vec ($1_aptos_coin_AptosCoin);
    var len: int;
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_left_vec: Vec ($1_aptos_coin_AptosCoin);
    var mid_right_vec: Vec ($1_aptos_coin_AptosCoin);
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int, e: $1_aptos_coin_AptosCoin) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin))) {
    var left_vec: Vec ($1_aptos_coin_AptosCoin);
    var right_vec: Vec ($1_aptos_coin_AptosCoin);
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int) returns (dst: $1_aptos_coin_AptosCoin) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int): $1_aptos_coin_AptosCoin {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), index: int)
returns (dst: $Mutation ($1_aptos_coin_AptosCoin), m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int): $1_aptos_coin_AptosCoin {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int, j: int) returns (m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var v: Vec ($1_aptos_coin_AptosCoin);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), i: int, j: int): Vec ($1_aptos_coin_AptosCoin) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int) returns (e: $1_aptos_coin_AptosCoin, m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var v: Vec ($1_aptos_coin_AptosCoin);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aptos_coin_AptosCoin'(m: $Mutation (Vec ($1_aptos_coin_AptosCoin)), i: int) returns (e: $1_aptos_coin_AptosCoin, m': $Mutation (Vec ($1_aptos_coin_AptosCoin)))
{
    var len: int;
    var v: Vec ($1_aptos_coin_AptosCoin);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin) returns (res: bool)  {
    res := $ContainsVec'$1_aptos_coin_AptosCoin'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aptos_coin_AptosCoin'(v: Vec ($1_aptos_coin_AptosCoin), e: $1_aptos_coin_AptosCoin) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aptos_coin_AptosCoin'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_function_info_FunctionInfo`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_function_info_FunctionInfo''(v1: Vec ($1_function_info_FunctionInfo), v2: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), prefix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), suffix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_function_info_FunctionInfo'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): int;
axiom (forall v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo:: {$IndexOfVec'$1_function_info_FunctionInfo'(v, e)}
    (var i := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
     if (!$ContainsVec'$1_function_info_FunctionInfo'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_function_info_FunctionInfo'() returns (v: Vec ($1_function_info_FunctionInfo)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), val: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), val: $1_function_info_FunctionInfo): Vec ($1_function_info_FunctionInfo) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, right: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), rot: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var mid_left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, e: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int) returns (dst: $1_function_info_FunctionInfo) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), index: int)
returns (dst: $Mutation ($1_function_info_FunctionInfo), m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, j: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int, j: int): Vec ($1_function_info_FunctionInfo) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var len: int;
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res: bool)  {
    res := $ContainsVec'$1_function_info_FunctionInfo'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_BurnRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_BurnRef''(v1: Vec ($1_fungible_asset_BurnRef), v2: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef), prefix: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef), suffix: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_BurnRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef): int;
axiom (forall v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef:: {$IndexOfVec'$1_fungible_asset_BurnRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_BurnRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_BurnRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_BurnRef'(): Vec ($1_fungible_asset_BurnRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_BurnRef'() returns (v: Vec ($1_fungible_asset_BurnRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_BurnRef'(): Vec ($1_fungible_asset_BurnRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), val: $1_fungible_asset_BurnRef) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), val: $1_fungible_asset_BurnRef): Vec ($1_fungible_asset_BurnRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef))) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var v: Vec ($1_fungible_asset_BurnRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), other: Vec ($1_fungible_asset_BurnRef)) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef))) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), other: Vec ($1_fungible_asset_BurnRef)) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_BurnRef)), m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_BurnRef)), m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var v: Vec ($1_fungible_asset_BurnRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int, e: $1_fungible_asset_BurnRef) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int) returns (dst: $1_fungible_asset_BurnRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int): $1_fungible_asset_BurnRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_BurnRef), m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int): $1_fungible_asset_BurnRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int, j: int): Vec ($1_fungible_asset_BurnRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_BurnRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_BurnRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_BurnRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_FungibleStore`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_FungibleStore''(v1: Vec ($1_fungible_asset_FungibleStore), v2: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), prefix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), suffix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_FungibleStore'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): int;
axiom (forall v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore:: {$IndexOfVec'$1_fungible_asset_FungibleStore'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
     if (!$ContainsVec'$1_fungible_asset_FungibleStore'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_FungibleStore'() returns (v: Vec ($1_fungible_asset_FungibleStore)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), val: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), val: $1_fungible_asset_FungibleStore): Vec ($1_fungible_asset_FungibleStore) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, e: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int) returns (dst: $1_fungible_asset_FungibleStore) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), index: int)
returns (dst: $Mutation ($1_fungible_asset_FungibleStore), m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int, j: int): Vec ($1_fungible_asset_FungibleStore) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_FungibleStore'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_MintRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_MintRef''(v1: Vec ($1_fungible_asset_MintRef), v2: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef), prefix: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef), suffix: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_MintRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef): int;
axiom (forall v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef:: {$IndexOfVec'$1_fungible_asset_MintRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_MintRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_MintRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_MintRef'(): Vec ($1_fungible_asset_MintRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_MintRef'() returns (v: Vec ($1_fungible_asset_MintRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_MintRef'(): Vec ($1_fungible_asset_MintRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), val: $1_fungible_asset_MintRef) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), val: $1_fungible_asset_MintRef): Vec ($1_fungible_asset_MintRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef))) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var v: Vec ($1_fungible_asset_MintRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), other: Vec ($1_fungible_asset_MintRef)) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef))) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), other: Vec ($1_fungible_asset_MintRef)) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_MintRef)), m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_MintRef)), m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var v: Vec ($1_fungible_asset_MintRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var mid_left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int, e: $1_fungible_asset_MintRef) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int) returns (dst: $1_fungible_asset_MintRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int): $1_fungible_asset_MintRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_MintRef), m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int): $1_fungible_asset_MintRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int, j: int): Vec ($1_fungible_asset_MintRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_MintRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_MintRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_MintRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_TransferRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_TransferRef''(v1: Vec ($1_fungible_asset_TransferRef), v2: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef), prefix: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef), suffix: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_TransferRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef): int;
axiom (forall v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef:: {$IndexOfVec'$1_fungible_asset_TransferRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_TransferRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_TransferRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_TransferRef'(): Vec ($1_fungible_asset_TransferRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_TransferRef'() returns (v: Vec ($1_fungible_asset_TransferRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_TransferRef'(): Vec ($1_fungible_asset_TransferRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), val: $1_fungible_asset_TransferRef) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), val: $1_fungible_asset_TransferRef): Vec ($1_fungible_asset_TransferRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef))) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var v: Vec ($1_fungible_asset_TransferRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), other: Vec ($1_fungible_asset_TransferRef)) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef))) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), other: Vec ($1_fungible_asset_TransferRef)) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_TransferRef)), m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_TransferRef)), m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var v: Vec ($1_fungible_asset_TransferRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int, e: $1_fungible_asset_TransferRef) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int) returns (dst: $1_fungible_asset_TransferRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int): $1_fungible_asset_TransferRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_TransferRef), m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int): $1_fungible_asset_TransferRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int, j: int): Vec ($1_fungible_asset_TransferRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_TransferRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_TransferRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_TransferRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_object_Object'$1_fungible_asset_Metadata'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v1: Vec ($1_object_Object'$1_fungible_asset_Metadata'), v2: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), prefix: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), suffix: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata'): int;
axiom (forall v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata':: {$IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e)}
    (var i := $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
     if (!$ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_object_Object'$1_fungible_asset_Metadata''(): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_object_Object'$1_fungible_asset_Metadata''() returns (v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_object_Object'$1_fungible_asset_Metadata''(): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), val: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), val: $1_object_Object'$1_fungible_asset_Metadata'): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), other: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), other: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), new_len: int) returns (v: (Vec ($1_object_Object'$1_fungible_asset_Metadata')), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), new_len: int) returns (v: (Vec ($1_object_Object'$1_fungible_asset_Metadata')), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), left: int, right: int) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), rot: int) returns (n: int, m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var len: int;
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int, e: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int) returns (dst: $1_object_Object'$1_fungible_asset_Metadata') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), index: int)
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int, j: int) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int, j: int): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var len: int;
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata') returns (res: bool)  {
    res := $ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var mid_left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, e: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, e: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(v1: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), v2: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), prefix: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), suffix: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(ReadVec(v, i), e))
}

function $IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content): int;
axiom (forall v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content:: {$IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v, e)}
    (var i := $IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v, e);
     if (!$ContainsVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'() returns (v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), val: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), val: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) returns (e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), other: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), other: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), new_len: int) returns (v: (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), new_len: int) returns (v: (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), left: int, right: int) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var mid_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), rot: int) returns (n: int, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var len: int;
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var mid_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var mid_left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var mid_right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), i: int, e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))) {
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), i: int) returns (dst: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), i: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), index: int)
returns (dst: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)))
{
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), i: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), i: int, j: int) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)))
{
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), i: int, j: int): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), i: int) returns (e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)))
{
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)), i: int) returns (e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)))
{
    var len: int;
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) returns (res: bool)  {
    res := $ContainsVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(v1: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), v2: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), prefix: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), suffix: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(ReadVec(v, i), e))
}

function $IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee): int;
axiom (forall v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee:: {$IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v, e)}
    (var i := $IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v, e);
     if (!$ContainsVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'() returns (v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), val: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), val: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) returns (e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), other: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), other: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), new_len: int) returns (v: (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), new_len: int) returns (v: (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), left: int, right: int) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var mid_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), rot: int) returns (n: int, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var len: int;
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var mid_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var mid_left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var mid_right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), i: int, e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))) {
    var left_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var right_vec: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), i: int) returns (dst: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), i: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), index: int)
returns (dst: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)))
{
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), i: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), i: int, j: int) returns (m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)))
{
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), i: int, j: int): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), i: int) returns (e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)))
{
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(m: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)), i: int) returns (e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee, m': $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)))
{
    var len: int;
    var v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) returns (res: bool)  {
    res := $ContainsVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee), e: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u128''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u128''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u128''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u128''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u128'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e))
}

function $IndexOfVec'u128'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u128'(v, e)}
    (var i := $IndexOfVec'u128'(v, e);
     if (!$ContainsVec'u128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u128'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u128'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u128'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u128'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u128'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u128'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u128'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u128'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u128'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u128'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u128'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u128'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u128'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u128'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u128'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u128'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u128'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u128'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u128'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u128'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv128''(v1: Vec (bv128), v2: Vec (bv128)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv128''(v: Vec (bv128), prefix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv128''(v: Vec (bv128), suffix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv128''(v: Vec (bv128)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv128'(v: Vec (bv128), e: bv128): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e))
}

function $IndexOfVec'bv128'(v: Vec (bv128), e: bv128): int;
axiom (forall v: Vec (bv128), e: bv128:: {$IndexOfVec'bv128'(v, e)}
    (var i := $IndexOfVec'bv128'(v, e);
     if (!$ContainsVec'bv128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv128'(v: Vec (bv128)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv128'() returns (v: Vec (bv128)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv128'(v: Vec (bv128)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv128'(m: $Mutation (Vec (bv128)), val: bv128) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv128'(v: Vec (bv128), val: bv128): Vec (bv128) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv128'(m: $Mutation (Vec (bv128))) returns (e: bv128, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv128'(m: $Mutation (Vec (bv128))) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, right: int) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv128'(m: $Mutation (Vec (bv128)), rot: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var mid_left_vec: Vec (bv128);
    var mid_right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv128'(m: $Mutation (Vec (bv128)), i: int, e: bv128) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv128'(v: Vec (bv128)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv128'(v: Vec (bv128)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv128'(v: Vec (bv128), i: int) returns (dst: bv128) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv128'(m: $Mutation (Vec (bv128)), index: int)
returns (dst: $Mutation (bv128), m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv128'(v: Vec (bv128)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv128'(m: $Mutation (Vec (bv128)), i: int, j: int) returns (m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv128'(v: Vec (bv128), i: int, j: int): Vec (bv128) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var len: int;
    var v: Vec (bv128);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv128'(v: Vec (bv128), e: bv128) returns (res: bool)  {
    res := $ContainsVec'bv128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv128'(v: Vec (bv128), e: bv128) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_type_info_TypeInfo`

function $EncodeKey'$1_type_info_TypeInfo'(k: $1_type_info_TypeInfo): int;
axiom (
  forall k1, k2: $1_type_info_TypeInfo :: {$EncodeKey'$1_type_info_TypeInfo'(k1), $EncodeKey'$1_type_info_TypeInfo'(k2)}
    $IsEqual'$1_type_info_TypeInfo'(k1, k2) <==> $EncodeKey'$1_type_info_TypeInfo'(k1) == $EncodeKey'$1_type_info_TypeInfo'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_type_info_TypeInfo,$1_object_Object'$1_fungible_asset_Metadata')`

function $IsEqual'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(t1: Table int ($1_object_Object'$1_fungible_asset_Metadata'), t2: Table int ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''() returns (v: Table int ($1_object_Object'$1_fungible_asset_Metadata')) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata')) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
}
procedure {:inline 2} $1_table_add'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo)
returns (v: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo) returns (v: $1_object_Object'$1_fungible_asset_Metadata') {
    var enc_k: int;
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo)
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, default: $1_object_Object'$1_fungible_asset_Metadata')
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var t': Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_spec_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo): bool {
    ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_set'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata'): Table int ($1_object_Object'$1_fungible_asset_Metadata') {
    (var enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo): Table int ($1_object_Object'$1_fungible_asset_Metadata') {
    RemoveTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_get'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo): $1_object_Object'$1_fungible_asset_Metadata' {
    GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int)
}
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));




// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u128''(b1), $1_from_bcs_deserializable'vec'u128''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<object::Object<fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<BoxPeer::Content>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b1), $1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<BoxPeer::ContentFee>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(b1), $1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u128''(b1), $1_from_bcs_deserializable'$1_option_Option'u128''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<object::Object<fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_features_Features'(b1), $1_from_bcs_deserializable'$1_features_Features'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <table::Table<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<BoxPeer::Content>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_SignerCapability'(b1), $1_from_bcs_deserializable'$1_account_SignerCapability'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserializable'$1_aggregator_Aggregator'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_DeriveRef'(b1), $1_from_bcs_deserializable'$1_object_DeriveRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Object<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Object<fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TombStone'(b1), $1_from_bcs_deserializable'$1_object_TombStone'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Transfer'(b1), $1_from_bcs_deserializable'$1_object_Transfer'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Untransferable'(b1), $1_from_bcs_deserializable'$1_object_Untransferable'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Supply'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_DepositEvent'(b1), $1_from_bcs_deserializable'$1_coin_DepositEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinConversionMap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinConversionMap'(b1), $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinDeposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinDeposit'(b1), $1_from_bcs_deserializable'$1_coin_CoinDeposit'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinWithdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinWithdraw'(b1), $1_from_bcs_deserializable'$1_coin_CoinWithdraw'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::MigrationFlag>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_MigrationFlag'(b1), $1_from_bcs_deserializable'$1_coin_MigrationFlag'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::PairCreation>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairCreation'(b1), $1_from_bcs_deserializable'$1_coin_PairCreation'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::PairedCoinType>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairedCoinType'(b1), $1_from_bcs_deserializable'$1_coin_PairedCoinType'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::PairedFungibleAssetRefs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(b1), $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <BoxPeer::Content>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(b1), $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <BoxPeer::ContentFee>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(b1), $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <BoxPeer::ContentRegistry>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(b1), $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <BoxPeer::ContractSigner>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(b1), $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <BoxPeer::GlobalContentRegistry>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(b1), $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <BoxPeer::PurchaserAddedEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(b1), $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u128''($1_from_bcs_deserialize'vec'u128''(b1), $1_from_bcs_deserialize'vec'u128''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<object::Object<fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_TransferRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_BurnRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_MintRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<BoxPeer::Content>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b1), $1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<BoxPeer::ContentFee>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''($1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(b1), $1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u128''($1_from_bcs_deserialize'$1_option_Option'u128''(b1), $1_from_bcs_deserialize'$1_option_Option'u128''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<object::Object<fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <table::Table<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<BoxPeer::Content>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($1_from_bcs_deserialize'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u64''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u128''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_DeriveRef'($1_from_bcs_deserialize'$1_object_DeriveRef'(b1), $1_from_bcs_deserialize'$1_object_DeriveRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Object<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Object<fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TombStone'($1_from_bcs_deserialize'$1_object_TombStone'(b1), $1_from_bcs_deserialize'$1_object_TombStone'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Transfer'($1_from_bcs_deserialize'$1_object_Transfer'(b1), $1_from_bcs_deserialize'$1_object_Transfer'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Untransferable'($1_from_bcs_deserialize'$1_object_Untransferable'(b1), $1_from_bcs_deserialize'$1_object_Untransferable'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_function_info_FunctionInfo'($1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_TransferRef'($1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Untransferable'($1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_BurnRef'($1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentSupply'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Deposit'($1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_DispatchFunctionStore'($1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleAsset'($1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleStore'($1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Metadata'($1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_MintRef'($1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Supply'($1_from_bcs_deserialize'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Supply'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Withdraw'($1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'($1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_primary_fungible_store_DeriveRefPod'($1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinConversionMap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinConversionMap'($1_from_bcs_deserialize'$1_coin_CoinConversionMap'(b1), $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinDeposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinDeposit'($1_from_bcs_deserialize'$1_coin_CoinDeposit'(b1), $1_from_bcs_deserialize'$1_coin_CoinDeposit'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinWithdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinWithdraw'($1_from_bcs_deserialize'$1_coin_CoinWithdraw'(b1), $1_from_bcs_deserialize'$1_coin_CoinWithdraw'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::MigrationFlag>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_MigrationFlag'($1_from_bcs_deserialize'$1_coin_MigrationFlag'(b1), $1_from_bcs_deserialize'$1_coin_MigrationFlag'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::PairCreation>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairCreation'($1_from_bcs_deserialize'$1_coin_PairCreation'(b1), $1_from_bcs_deserialize'$1_coin_PairCreation'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::PairedCoinType>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairedCoinType'($1_from_bcs_deserialize'$1_coin_PairedCoinType'(b1), $1_from_bcs_deserialize'$1_coin_PairedCoinType'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::PairedFungibleAssetRefs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairedFungibleAssetRefs'($1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(b1), $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <BoxPeer::Content>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(b1), $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <BoxPeer::ContentFee>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'($1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(b1), $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <BoxPeer::ContentRegistry>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'($1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(b1), $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <BoxPeer::ContractSigner>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'($1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(b1), $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <BoxPeer::GlobalContentRegistry>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'($1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(b1), $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <BoxPeer::PurchaserAddedEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'($1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(b1), $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'u128'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u128'(self), 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'address'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'address'(self), 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(self: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(self), 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsEqual'u64'($1_vector_$length'$1_object_Object'$1_fungible_asset_Metadata''(self), 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(self: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(self), 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_OptionalAggregator'(self: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_OptionalAggregator'(self), 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_function_info_FunctionInfo'(self: Vec ($1_function_info_FunctionInfo)): bool {
    $IsEqual'u64'($1_vector_$length'$1_function_info_FunctionInfo'(self), 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'u128'(): $1_option_Option'u128' {
    $1_option_Option'u128'($EmptyVec'u128'())
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'address'(): $1_option_Option'address' {
    $1_option_Option'address'($EmptyVec'address'())
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$1_object_Object'$1_fungible_asset_Metadata''(): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''($EmptyVec'$1_object_Object'$1_fungible_asset_Metadata''())
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$1_function_info_FunctionInfo'(): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($EmptyVec'$1_function_info_FunctionInfo'())
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'address'(e: int): $1_option_Option'address' {
    $1_option_Option'address'(MakeVec1(e))
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_object_Object'$1_fungible_asset_Metadata''(e: $1_object_Object'$1_fungible_asset_Metadata'): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''(MakeVec1(e))
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_fungible_asset_TransferRef'(e: $1_fungible_asset_TransferRef): $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'(MakeVec1(e))
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_fungible_asset_BurnRef'(e: $1_fungible_asset_BurnRef): $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'(MakeVec1(e))
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_fungible_asset_MintRef'(e: $1_fungible_asset_MintRef): $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'(MakeVec1(e))
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'u128'(self: $1_option_Option'u128'): bool {
    $1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'address'(self: $1_option_Option'address'): bool {
    $1_vector_$is_empty'address'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'u128'(self: $1_option_Option'u128'): bool {
    !$1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    !$1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'(self: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_OptionalAggregator'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    !$1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'u128'(self: $1_option_Option'u128'): int {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_optional_aggregator_OptionalAggregator'(self: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_optional_aggregator_OptionalAggregator {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): $1_function_info_FunctionInfo {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+154
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'(self->$vec, 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+154
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'(self->$vec, 0)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+101
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+101
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+102
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+102
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// struct option::Option<u128> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'u128' {
    $1_option_Option'u128'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u128''_vec(s: $1_option_Option'u128', x: Vec (int)): $1_option_Option'u128' {
    $1_option_Option'u128'(x)
}
function $IsValid'$1_option_Option'u128''(s: $1_option_Option'u128'): bool {
    $IsValid'vec'u128''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u128''(s1: $1_option_Option'u128', s2: $1_option_Option'u128'): bool {
    $IsEqual'vec'u128''(s1->$vec, s2->$vec)}

// struct option::Option<address> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'address' {
    $1_option_Option'address'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''(s1->$vec, s2->$vec)}

// struct option::Option<aggregator::Aggregator> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator))
}
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''(s1->$vec, s2->$vec)}

// struct option::Option<object::Object<fungible_asset::Metadata>> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''($vec: Vec ($1_object_Object'$1_fungible_asset_Metadata'))
}
function {:inline} $Update'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''_vec(s: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'', x: Vec ($1_object_Object'$1_fungible_asset_Metadata')): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''(x)
}
function $IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(s: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(s1: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'', s2: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''(s1->$vec, s2->$vec)}

// struct option::Option<optional_aggregator::Integer> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''(s1->$vec, s2->$vec)}

// struct option::Option<optional_aggregator::OptionalAggregator> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(s1->$vec, s2->$vec)}

// struct option::Option<function_info::FunctionInfo> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($vec: Vec ($1_function_info_FunctionInfo))
}
function {:inline} $Update'$1_option_Option'$1_function_info_FunctionInfo''_vec(s: $1_option_Option'$1_function_info_FunctionInfo', x: Vec ($1_function_info_FunctionInfo)): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'(x)
}
function $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsValid'vec'$1_function_info_FunctionInfo''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1: $1_option_Option'$1_function_info_FunctionInfo', s2: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsEqual'vec'$1_function_info_FunctionInfo''(s1->$vec, s2->$vec)}

// struct option::Option<fungible_asset::TransferRef> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'($vec: Vec ($1_fungible_asset_TransferRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_TransferRef''_vec(s: $1_option_Option'$1_fungible_asset_TransferRef', x: Vec ($1_fungible_asset_TransferRef)): $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_TransferRef''(s: $1_option_Option'$1_fungible_asset_TransferRef'): bool {
    $IsValid'vec'$1_fungible_asset_TransferRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''(s1: $1_option_Option'$1_fungible_asset_TransferRef', s2: $1_option_Option'$1_fungible_asset_TransferRef'): bool {
    $IsEqual'vec'$1_fungible_asset_TransferRef''(s1->$vec, s2->$vec)}

// struct option::Option<fungible_asset::BurnRef> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'($vec: Vec ($1_fungible_asset_BurnRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_BurnRef''_vec(s: $1_option_Option'$1_fungible_asset_BurnRef', x: Vec ($1_fungible_asset_BurnRef)): $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_BurnRef''(s: $1_option_Option'$1_fungible_asset_BurnRef'): bool {
    $IsValid'vec'$1_fungible_asset_BurnRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''(s1: $1_option_Option'$1_fungible_asset_BurnRef', s2: $1_option_Option'$1_fungible_asset_BurnRef'): bool {
    $IsEqual'vec'$1_fungible_asset_BurnRef''(s1->$vec, s2->$vec)}

// struct option::Option<fungible_asset::MintRef> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'($vec: Vec ($1_fungible_asset_MintRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_MintRef''_vec(s: $1_option_Option'$1_fungible_asset_MintRef', x: Vec ($1_fungible_asset_MintRef)): $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_MintRef''(s: $1_option_Option'$1_fungible_asset_MintRef'): bool {
    $IsValid'vec'$1_fungible_asset_MintRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''(s1: $1_option_Option'$1_fungible_asset_MintRef', s2: $1_option_Option'$1_fungible_asset_MintRef'): bool {
    $IsEqual'vec'$1_fungible_asset_MintRef''(s1->$vec, s2->$vec)}

// fun option::borrow_mut<u128> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+174
procedure {:inline 1} $1_option_borrow_mut'u128'(_$t0: $Mutation ($1_option_Option'u128')) returns ($ret0: $Mutation (int), $ret1: $Mutation ($1_option_Option'u128'))
{
    // declare local variables
    var $t1: $1_option_Option'u128';
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (Vec (int));
    var $t6: int;
    var $t7: $Mutation (int);
    var $t0: $Mutation ($1_option_Option'u128');
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'u128': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(12,5933,5934)"} true;
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // $t1 := read_ref($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:25+4
    assume {:print "$at(12,6032,6036)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'u128'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // if ($t2) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L0:

    // pack_ref_deep($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;

    // drop($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39

    // $t3 := 262145 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:32+15
    $t3 := 262145;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    assume {:print "$track_abort(1,1):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    $t4 := $t3;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:33+4
    assume {:print "$at(12,6089,6093)"} true;
L2:

    // $t5 := borrow_field<option::Option<#0>>.vec($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:28+13
    assume {:print "$at(12,6084,6097)"} true;
    $t5 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t6 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:43+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := vector::borrow_mut<#0>($t5, $t6) on_abort goto L4 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    call $t7,$t5 := $1_vector_borrow_mut'u128'($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(12,6065,6101)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(1,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'u128' := $Dereference($t7);
    assume {:print "$track_return(1,1,0):", $temp_0'u128'} $temp_0'u128' == $temp_0'u128';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
L3:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $ret0 := $t7;
    $ret1 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L4:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<aggregator::Aggregator> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+174
procedure {:inline 1} $1_option_borrow_mut'$1_aggregator_Aggregator'(_$t0: $Mutation ($1_option_Option'$1_aggregator_Aggregator')) returns ($ret0: $Mutation ($1_aggregator_Aggregator), $ret1: $Mutation ($1_option_Option'$1_aggregator_Aggregator'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_aggregator_Aggregator';
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (Vec ($1_aggregator_Aggregator));
    var $t6: int;
    var $t7: $Mutation ($1_aggregator_Aggregator);
    var $t0: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_option_Option'$1_aggregator_Aggregator'': $1_option_Option'$1_aggregator_Aggregator';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(12,5933,5934)"} true;
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // $t1 := read_ref($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:25+4
    assume {:print "$at(12,6032,6036)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_aggregator_Aggregator'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // if ($t2) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L0:

    // pack_ref_deep($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;

    // drop($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39

    // $t3 := 262145 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:32+15
    $t3 := 262145;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    assume {:print "$track_abort(1,1):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    $t4 := $t3;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:33+4
    assume {:print "$at(12,6089,6093)"} true;
L2:

    // $t5 := borrow_field<option::Option<#0>>.vec($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:28+13
    assume {:print "$at(12,6084,6097)"} true;
    $t5 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t6 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:43+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := vector::borrow_mut<#0>($t5, $t6) on_abort goto L4 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    call $t7,$t5 := $1_vector_borrow_mut'$1_aggregator_Aggregator'($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(12,6065,6101)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(1,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_aggregator_Aggregator' := $Dereference($t7);
    assume {:print "$track_return(1,1,0):", $temp_0'$1_aggregator_Aggregator'} $temp_0'$1_aggregator_Aggregator' == $temp_0'$1_aggregator_Aggregator';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
L3:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $ret0 := $t7;
    $ret1 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L4:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<optional_aggregator::Integer> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+174
procedure {:inline 1} $1_option_borrow_mut'$1_optional_aggregator_Integer'(_$t0: $Mutation ($1_option_Option'$1_optional_aggregator_Integer')) returns ($ret0: $Mutation ($1_optional_aggregator_Integer), $ret1: $Mutation ($1_option_Option'$1_optional_aggregator_Integer'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_Integer';
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (Vec ($1_optional_aggregator_Integer));
    var $t6: int;
    var $t7: $Mutation ($1_optional_aggregator_Integer);
    var $t0: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $temp_0'$1_option_Option'$1_optional_aggregator_Integer'': $1_option_Option'$1_optional_aggregator_Integer';
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(12,5933,5934)"} true;
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // $t1 := read_ref($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:25+4
    assume {:print "$at(12,6032,6036)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_optional_aggregator_Integer'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // if ($t2) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L0:

    // pack_ref_deep($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;

    // drop($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39

    // $t3 := 262145 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:32+15
    $t3 := 262145;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    assume {:print "$track_abort(1,1):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    $t4 := $t3;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:33+4
    assume {:print "$at(12,6089,6093)"} true;
L2:

    // $t5 := borrow_field<option::Option<#0>>.vec($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:28+13
    assume {:print "$at(12,6084,6097)"} true;
    $t5 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t6 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:43+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := vector::borrow_mut<#0>($t5, $t6) on_abort goto L4 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    call $t7,$t5 := $1_vector_borrow_mut'$1_optional_aggregator_Integer'($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(12,6065,6101)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(1,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t7);
    assume {:print "$track_return(1,1,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
L3:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $ret0 := $t7;
    $ret1 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L4:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<optional_aggregator::OptionalAggregator> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+174
procedure {:inline 1} $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'(_$t0: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator')) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator), $ret1: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator));
    var $t6: int;
    var $t7: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t0: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(12,5933,5934)"} true;
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t1 := read_ref($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:25+4
    assume {:print "$at(12,6032,6036)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // if ($t2) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L0:

    // pack_ref_deep($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;

    // drop($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39

    // $t3 := 262145 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:32+15
    $t3 := 262145;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    assume {:print "$track_abort(1,1):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    $t4 := $t3;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:33+4
    assume {:print "$at(12,6089,6093)"} true;
L2:

    // $t5 := borrow_field<option::Option<#0>>.vec($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:28+13
    assume {:print "$at(12,6084,6097)"} true;
    $t5 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t6 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:43+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := vector::borrow_mut<#0>($t5, $t6) on_abort goto L4 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    call $t7,$t5 := $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(12,6065,6101)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(1,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t7);
    assume {:print "$track_return(1,1,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
L3:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $ret0 := $t7;
    $ret1 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L4:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// struct string::String at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:13:5+70
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::length [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:5+81
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:5+1
    assume {:print "$at(14,1307,1308)"} true;
    assume {:print "$track_local(2,10,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:24+11
    assume {:print "$at(14,1370,1381)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:9+27
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(14,1355,1382)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(2,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:9+27
    assume {:print "$track_return(2,10,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1387,1388)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1387,1388)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1387,1388)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::bytes [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:5+72
procedure {:inline 1} $1_string_bytes(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:5+1
    assume {:print "$at(14,1039,1040)"} true;
    assume {:print "$track_local(2,2,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:9+11
    assume {:print "$at(14,1094,1105)"} true;
    $t1 := $t0->$bytes;

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:9+11
    assume {:print "$track_return(2,2,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:35:5+1
    assume {:print "$at(14,1110,1111)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:35:5+1
    assume {:print "$at(14,1110,1111)"} true;
    $ret0 := $t1;
    return;

}

// fun string::utf8 [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+133
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_string_String;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+1
    assume {:print "$at(14,573,574)"} true;
    assume {:print "$track_local(2,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume {:print "$at(14,634,661)"} true;

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27

    // if ($t1) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(14,626,677)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
L0:

    // $t2 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
    assume {:print "$at(14,663,676)"} true;
    $t2 := 1;
    assume $IsValid'u64'($t2);

    // trace_abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(14,626,677)"} true;
    assume {:print "$track_abort(2,13):", $t2} $t2 == $t2;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:16+5
    assume {:print "$at(14,694,699)"} true;
L2:

    // $t3 := pack string::String($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$at(14,687,700)"} true;
    $t3 := $1_string_String($t0);

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$track_return(2,13,0):", $t3} $t3 == $t3;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
L3:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
    $ret0 := $t3;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
L4:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+1
    assume {:print "$at(13,395,396)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:10+17
    assume {:print "$at(13,449,466)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(13,449,466)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,471,472)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,471,472)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
L2:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,471,472)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::aborted [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:3+57
procedure {:inline 1} $1_error_aborted(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:3+1
    assume {:print "$at(9,3525,3526)"} true;
    assume {:print "$track_local(4,0,0):", $t0} $t0 == $t0;

    // $t1 := 7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:47+7
    $t1 := 7;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume {:print "$at(9,3559,3580)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume {:print "$track_return(4,0,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:59+1
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:59+1
    assume {:print "$at(9,3581,3582)"} true;
    $ret0 := $t3;
    return;

}

// fun error::already_exists [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+1
    assume {:print "$at(9,3585,3586)"} true;
    assume {:print "$track_local(4,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$at(9,3626,3654)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$track_return(4,1,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
    assume {:print "$at(9,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(9,3082,3083)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(9,3126,3156)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(4,4,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(9,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(9,3232,3233)"} true;
    assume {:print "$track_local(4,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(9,3273,3300)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(4,5,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(9,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(9,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(9,3497,3520)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(9,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+1
    assume {:print "$at(9,3161,3162)"} true;
    assume {:print "$track_local(4,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$at(9,3201,3227)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$track_return(4,8,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
    assume {:print "$at(9,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(9,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(9,3425,3456)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(9,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.spec.move:59:10+40
function  $1_features_spec_is_enabled(feature: int): bool;
axiom (forall feature: int ::
(var $$res := $1_features_spec_is_enabled(feature);
$IsValid'bool'($$res)));

// struct features::Features at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:613:5+61
datatype $1_features_Features {
    $1_features_Features($features: Vec (bv8))
}
function {:inline} $Update'$1_features_Features'_features(s: $1_features_Features, x: Vec (bv8)): $1_features_Features {
    $1_features_Features(x)
}
function $IsValid'$1_features_Features'(s: $1_features_Features): bool {
    $IsValid'vec'bv8''(s->$features)
}
function {:inline} $IsEqual'$1_features_Features'(s1: $1_features_Features, s2: $1_features_Features): bool {
    $IsEqual'vec'bv8''(s1->$features, s2->$features)}
var $1_features_Features_$memory: $Memory $1_features_Features;

// fun features::coin_to_fungible_asset_migration_feature_enabled [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:491:5+146
procedure {:inline 1} $1_features_coin_to_fungible_asset_migration_feature_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 60 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:492:20+32
    assume {:print "$at(7,17963,17995)"} true;
    $t0 := 60;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:492:9+44

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:492:9+44
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:492:9+44
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:492:9+44

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:492:9+44
    assume {:print "$track_return(5,17,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:493:5+1
    assume {:print "$at(7,18001,18002)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:493:5+1
    assume {:print "$at(7,18001,18002)"} true;
    $ret0 := $t1;
    return;

}

// fun features::concurrent_fungible_assets_enabled [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:409:5+126
procedure {:inline 1} $1_features_concurrent_fungible_assets_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 50 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:20+26
    assume {:print "$at(7,14950,14976)"} true;
    $t0 := 50;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38
    assume {:print "$track_return(5,21,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:411:5+1
    assume {:print "$at(7,14982,14983)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:411:5+1
    assume {:print "$at(7,14982,14983)"} true;
    $ret0 := $t1;
    return;

}

// fun features::default_to_concurrent_fungible_balance_enabled [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:569:5+150
procedure {:inline 1} $1_features_default_to_concurrent_fungible_balance_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 68 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:20+38
    assume {:print "$at(7,20879,20917)"} true;
    $t0 := 68;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50
    assume {:print "$track_return(5,26,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:571:5+1
    assume {:print "$at(7,20923,20924)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:571:5+1
    assume {:print "$at(7,20923,20924)"} true;
    $ret0 := $t1;
    return;

}

// fun features::dispatchable_fungible_asset_enabled [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:530:5+128
procedure {:inline 1} $1_features_dispatchable_fungible_asset_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 63 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:20+27
    assume {:print "$at(7,19347,19374)"} true;
    $t0 := 63;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39
    assume {:print "$track_return(5,30,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:532:5+1
    assume {:print "$at(7,19380,19381)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:532:5+1
    assume {:print "$at(7,19380,19381)"} true;
    $ret0 := $t1;
    return;

}

// fun features::module_event_migration_enabled [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:468:5+118
procedure {:inline 1} $1_features_module_event_migration_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 57 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:20+22
    assume {:print "$at(7,17041,17063)"} true;
    $t0 := 57;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34
    assume {:print "$track_return(5,89,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:470:5+1
    assume {:print "$at(7,17069,17070)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:470:5+1
    assume {:print "$at(7,17069,17070)"} true;
    $ret0 := $t1;
    return;

}

// fun features::new_accounts_default_to_fa_apt_store_enabled [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:539:5+146
procedure {:inline 1} $1_features_new_accounts_default_to_fa_apt_store_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 64 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:540:20+36
    assume {:print "$at(7,19690,19726)"} true;
    $t0 := 64;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:540:9+48

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:540:9+48
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:540:9+48
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:540:9+48

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:540:9+48
    assume {:print "$track_return(5,94,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:541:5+1
    assume {:print "$at(7,19732,19733)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:541:5+1
    assume {:print "$at(7,19732,19733)"} true;
    $ret0 := $t1;
    return;

}

// struct type_info::TypeInfo at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:16:5+145
datatype $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int))
}
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, s->$module_name, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, x, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, s->$module_name, x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'(s->$account_address)
      && $IsValid'vec'u8''(s->$module_name)
      && $IsValid'vec'u8''(s->$struct_name)
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'(s1->$account_address, s2->$account_address)
    && $IsEqual'vec'u8''(s1->$module_name, s2->$module_name)
    && $IsEqual'vec'u8''(s1->$struct_name, s2->$struct_name)}

// struct guid::GUID at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:7:5+50
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:12:5+209
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    assume {:print "$at(145,836,837)"} true;
    assume {:print "$track_local(13,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$at(145,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:24:13+12
    assume {:print "$track_local(13,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:25:44+1
    assume {:print "$at(145,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:25:42+1
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(145,1000,1001)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(13,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack guid::ID($t3, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:27:17+70
    assume {:print "$at(145,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack guid::GUID($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$at(145,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$track_return(13,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(145,1121,1122)"} true;
L1:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(145,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
L2:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(145,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u128''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u128''(bytes);
$IsValid'vec'u128''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): Vec ($1_object_Object'$1_fungible_asset_Metadata');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): Vec ($1_function_info_FunctionInfo);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'vec'$1_function_info_FunctionInfo''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(bytes: Vec (int)): Vec ($1_fungible_asset_TransferRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(bytes);
$IsValid'vec'$1_fungible_asset_TransferRef''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(bytes: Vec (int)): Vec ($1_fungible_asset_BurnRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(bytes);
$IsValid'vec'$1_fungible_asset_BurnRef''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): Vec ($1_fungible_asset_FungibleStore);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'vec'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(bytes: Vec (int)): Vec ($1_fungible_asset_MintRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(bytes);
$IsValid'vec'$1_fungible_asset_MintRef''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): Vec ($1_aptos_coin_AptosCoin);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'vec'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes: Vec (int)): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes);
$IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(bytes: Vec (int)): Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(bytes);
$IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u128''(bytes: Vec (int)): $1_option_Option'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u128''(bytes);
$IsValid'$1_option_Option'u128''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): $1_option_Option'$1_function_info_FunctionInfo';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'$1_option_Option'$1_function_info_FunctionInfo''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_TransferRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_TransferRef''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_BurnRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_BurnRef''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_MintRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_MintRef''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_features_Features'(bytes: Vec (int)): $1_features_Features;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_features_Features'(bytes);
$IsValid'$1_features_Features'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): Table int ($1_object_Object'$1_fungible_asset_Metadata');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes: Vec (int)): $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes);
$IsValid'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u64''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u128''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes: Vec (int)): $1_object_DeriveRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes);
$IsValid'$1_object_DeriveRef'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_FungibleStore';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_Metadata';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_Metadata''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TombStone'(bytes: Vec (int)): $1_object_TombStone;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TombStone'(bytes);
$IsValid'$1_object_TombStone'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Transfer'(bytes: Vec (int)): $1_object_Transfer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Transfer'(bytes);
$IsValid'$1_object_Transfer'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Untransferable'(bytes: Vec (int)): $1_object_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Untransferable'(bytes);
$IsValid'$1_object_Untransferable'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes: Vec (int)): $1_function_info_FunctionInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes);
$IsValid'$1_function_info_FunctionInfo'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes: Vec (int)): $1_fungible_asset_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes);
$IsValid'$1_fungible_asset_TransferRef'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes: Vec (int)): $1_fungible_asset_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes);
$IsValid'$1_fungible_asset_Untransferable'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes: Vec (int)): $1_fungible_asset_BurnRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes);
$IsValid'$1_fungible_asset_BurnRef'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): $1_fungible_asset_ConcurrentFungibleBalance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): $1_fungible_asset_ConcurrentSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'$1_fungible_asset_ConcurrentSupply'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes: Vec (int)): $1_fungible_asset_Deposit;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes);
$IsValid'$1_fungible_asset_Deposit'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): $1_fungible_asset_DispatchFunctionStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'$1_fungible_asset_DispatchFunctionStore'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): $1_fungible_asset_FungibleAsset;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'$1_fungible_asset_FungibleAsset'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): $1_fungible_asset_FungibleStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'$1_fungible_asset_FungibleStore'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes: Vec (int)): $1_fungible_asset_Metadata;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes);
$IsValid'$1_fungible_asset_Metadata'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes: Vec (int)): $1_fungible_asset_MintRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes);
$IsValid'$1_fungible_asset_MintRef'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes: Vec (int)): $1_fungible_asset_Supply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes);
$IsValid'$1_fungible_asset_Supply'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes: Vec (int)): $1_fungible_asset_Withdraw;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes);
$IsValid'$1_fungible_asset_Withdraw'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): $1_dispatchable_fungible_asset_TransferRefStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): $1_primary_fungible_store_DeriveRefPod;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'$1_primary_fungible_store_DeriveRefPod'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes: Vec (int)): $1_coin_DepositEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes);
$IsValid'$1_coin_DepositEvent'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes: Vec (int)): $1_coin_WithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes);
$IsValid'$1_coin_WithdrawEvent'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Coin'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(bytes: Vec (int)): $1_coin_CoinConversionMap;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(bytes);
$IsValid'$1_coin_CoinConversionMap'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinDeposit'(bytes: Vec (int)): $1_coin_CoinDeposit;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinDeposit'(bytes);
$IsValid'$1_coin_CoinDeposit'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinWithdraw'(bytes: Vec (int)): $1_coin_CoinWithdraw;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinWithdraw'(bytes);
$IsValid'$1_coin_CoinWithdraw'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_MigrationFlag'(bytes: Vec (int)): $1_coin_MigrationFlag;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_MigrationFlag'(bytes);
$IsValid'$1_coin_MigrationFlag'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairCreation'(bytes: Vec (int)): $1_coin_PairCreation;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairCreation'(bytes);
$IsValid'$1_coin_PairCreation'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairedCoinType'(bytes: Vec (int)): $1_coin_PairedCoinType;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairedCoinType'(bytes);
$IsValid'$1_coin_PairedCoinType'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(bytes: Vec (int)): $1_coin_PairedFungibleAssetRefs;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(bytes);
$IsValid'$1_coin_PairedFungibleAssetRefs'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): $1_aptos_coin_AptosCoin;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'$1_aptos_coin_AptosCoin'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(bytes: Vec (int)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(bytes);
$IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(bytes: Vec (int)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(bytes);
$IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(bytes: Vec (int)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(bytes);
$IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(bytes: Vec (int)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(bytes);
$IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(bytes: Vec (int)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(bytes);
$IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(bytes: Vec (int)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(bytes);
$IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_features_Features'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_features_Features'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TombStone'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TombStone'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Transfer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Transfer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinDeposit'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinDeposit'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinWithdraw'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinWithdraw'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_MigrationFlag'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_MigrationFlag'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairCreation'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairCreation'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairedCoinType'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairedCoinType'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// struct event::EventHandle<account::CoinRegisterEvent> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<account::KeyRotationEvent> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<object::TransferEvent> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::DepositEvent> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::WithdrawEvent> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<BoxPeer::Content> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content' {
    $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''_counter(s: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content', x: int): $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content' {
    $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''_guid(s: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content', x: $1_guid_GUID): $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content' {
    $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s1: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content', s2: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'): bool {
    s1 == s2
}

// fun event::new_event_handle<account::CoinRegisterEvent> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_CoinRegisterEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_CoinRegisterEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+1
    assume {:print "$at(135,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:45:22+1
    assume {:print "$at(135,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$at(135,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_account_CoinRegisterEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<account::KeyRotationEvent> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_KeyRotationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_KeyRotationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+1
    assume {:print "$at(135,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:45:22+1
    assume {:print "$at(135,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$at(135,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_account_KeyRotationEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<object::TransferEvent> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+1
    assume {:print "$at(135,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:45:22+1
    assume {:print "$at(135,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$at(135,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<BoxPeer::Content> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'': $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+1
    assume {:print "$at(135,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:45:22+1
    assume {:print "$at(135,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$at(135,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t1, $t0);

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:581:10+77
function  $1_account_spec_create_resource_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_account_spec_create_resource_address(source, seed);
$IsValid'address'($$res)));

// struct account::Account at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:34:5+401
datatype $1_account_Account {
    $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability')
}
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, x, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, x, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, x, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, x, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, x, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''(s->$authentication_key)
      && $IsValid'u64'(s->$sequence_number)
      && $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s->$coin_register_events)
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s->$key_rotation_events)
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s->$rotation_capability_offer)
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s->$signer_capability_offer)
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''(s1->$authentication_key, s2->$authentication_key)
    && $IsEqual'u64'(s1->$sequence_number, s2->$sequence_number)
    && $IsEqual'u64'(s1->$guid_creation_num, s2->$guid_creation_num)
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1->$coin_register_events, s2->$coin_register_events)
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1->$key_rotation_events, s2->$key_rotation_events)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1->$rotation_capability_offer, s2->$rotation_capability_offer)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1->$signer_capability_offer, s2->$signer_capability_offer)}
var $1_account_Account_$memory: $Memory $1_account_Account;

// struct account::CapabilityOffer<account::RotationCapability> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:53:5+68
datatype $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CapabilityOffer<account::SignerCapability> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:53:5+68
datatype $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CoinRegisterEvent at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:49:5+77
datatype $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::KeyRotationEvent at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:44:5+135
datatype $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, s->$new_authentication_key)
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(s->$old_authentication_key, x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''(s->$old_authentication_key)
      && $IsValid'vec'u8''(s->$new_authentication_key)
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''(s1->$old_authentication_key, s2->$old_authentication_key)
    && $IsEqual'vec'u8''(s1->$new_authentication_key, s2->$new_authentication_key)}

// struct account::RotationCapability at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:55:5+62
datatype $1_account_RotationCapability {
    $1_account_RotationCapability($account: int)
}
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:57:5+60
datatype $1_account_SignerCapability {
    $1_account_SignerCapability($account: int)
}
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::new_event_handle<BoxPeer::Content> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:791:5+157
procedure {:inline 1} $1_account_new_event_handle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'': $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:639:9+39
    assume {:print "$at(82,31909,31948)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:640:9+36
    assume {:print "$at(82,31957,31993)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:791:5+1
    assume {:print "$at(81,41679,41680)"} true;
    assume {:print "$track_local(18,21,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:623:9+46
    assume {:print "$at(82,31276,31322)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:639:9+39
    assume {:print "$at(82,31909,31948)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:640:9+36
    assume {:print "$at(82,31957,31993)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:792:33+20
    assume {:print "$at(81,41809,41829)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(81,41809,41829)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:792:9+45
    call $t8 := $1_event_new_event_handle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t6);
    if ($abort_flag) {
        assume {:print "$at(81,41785,41830)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:792:9+45
    assume {:print "$track_return(18,21,0):", $t8} $t8 == $t8;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:793:5+1
    assume {:print "$at(81,41835,41836)"} true;
L1:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:793:5+1
    assume {:print "$at(81,41835,41836)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:793:5+1
L2:

    // abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:793:5+1
    assume {:print "$at(81,41835,41836)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::create_account_unchecked [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:210:5+1182
procedure {:inline 1} $1_account_create_account_unchecked(_$t0: int) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t3: int;
    var $t4: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t5: $signer;
    var $t6: Vec (int);
    var $t7: $signer;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: $Mutation (int);
    var $t17: $1_guid_GUID;
    var $t18: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t19: $Mutation (int);
    var $t20: $1_guid_GUID;
    var $t21: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t22: int;
    var $t23: int;
    var $t24: $1_option_Option'address';
    var $t25: $1_account_CapabilityOffer'$1_account_RotationCapability';
    var $t26: $1_option_Option'address';
    var $t27: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t28: $1_account_Account;
    var $t0: int;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t6, bcs::$to_bytes<address>($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t6 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[new_address]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:210:5+1
    assume {:print "$at(81,10610,10611)"} true;
    assume {:print "$track_local(18,3,0):", $t0} $t0 == $t0;

    // $t7 := opaque begin: create_signer::create_signer($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26
    assume {:print "$at(81,10697,10723)"} true;

    // assume WellFormed($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($t7->$addr);

    // assume Eq<address>(signer::$address_of($t7), $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26
    assume $IsEqual'address'($1_signer_$address_of($t7), $t0);

    // $t7 := opaque end: create_signer::create_signer($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26

    // trace_local[new_account]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:211:13+11
    assume {:print "$track_local(18,3,5):", $t7} $t7 == $t7;

    // $t8 := bcs::to_bytes<address>($t0) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:212:34+27
    assume {:print "$at(81,10758,10785)"} true;
    call $t8 := $1_bcs_to_bytes'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(81,10758,10785)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[authentication_key]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:212:13+18
    assume {:print "$track_local(18,3,1):", $t8} $t8 == $t8;

    // $t10 := vector::length<u8>($t8) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:214:13+35
    assume {:print "$at(81,10816,10851)"} true;
    call $t10 := $1_vector_length'u8'($t8);
    if ($abort_flag) {
        assume {:print "$at(81,10816,10851)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t11 := 32 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:214:52+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:214:49+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    assume {:print "$at(81,10795,10935)"} true;
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    assume {:print "$at(81,10795,10935)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:215:37+29
    assume {:print "$at(81,10895,10924)"} true;
L0:

    // $t13 := 4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:215:37+29
    assume {:print "$at(81,10895,10924)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:215:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(81,10871,10925)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    assume {:print "$at(81,10795,10935)"} true;
    assume {:print "$track_abort(18,3):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    $t9 := $t14;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:218:33+1
    assume {:print "$at(81,10970,10971)"} true;
L2:

    // $t15 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:218:33+1
    assume {:print "$at(81,10970,10971)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t3 := $t15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:218:13+17
    $t3 := $t15;

    // trace_local[guid_creation_num]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:218:13+17
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t16 := borrow_local($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:220:55+22
    assume {:print "$at(81,11028,11050)"} true;
    $t16 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t17 := guid::create($t0, $t16) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:220:29+49
    call $t17,$t16 := $1_guid_create($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(81,11002,11051)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:220:29+49
    $t3 := $Dereference($t16);

    // trace_local[guid_creation_num]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:220:29+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t18 := event::new_event_handle<account::CoinRegisterEvent>($t17) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:221:36+57
    assume {:print "$at(81,11088,11145)"} true;
    call $t18 := $1_event_new_event_handle'$1_account_CoinRegisterEvent'($t17);
    if ($abort_flag) {
        assume {:print "$at(81,11088,11145)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[coin_register_events]($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:221:13+20
    assume {:print "$track_local(18,3,2):", $t18} $t18 == $t18;

    // $t19 := borrow_local($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:223:59+22
    assume {:print "$at(81,11206,11228)"} true;
    $t19 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t20 := guid::create($t0, $t19) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:223:33+49
    call $t20,$t19 := $1_guid_create($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(81,11180,11229)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:223:33+49
    $t3 := $Dereference($t19);

    // trace_local[guid_creation_num]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:223:33+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t21 := event::new_event_handle<account::KeyRotationEvent>($t20) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:224:35+60
    assume {:print "$at(81,11265,11325)"} true;
    call $t21 := $1_event_new_event_handle'$1_account_KeyRotationEvent'($t20);
    if ($abort_flag) {
        assume {:print "$at(81,11265,11325)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[key_rotation_events]($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:224:13+19
    assume {:print "$track_local(18,3,4):", $t21} $t21 == $t21;

    // $t22 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:230:34+1
    assume {:print "$at(81,11462,11463)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:231:17+17
    assume {:print "$at(81,11481,11498)"} true;
    $t23 := $t3;

    // $t24 := opaque begin: option::none<address>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14
    assume {:print "$at(81,11641,11655)"} true;

    // assume And(WellFormed($t24), Le(Len<address>(select option::Option.vec($t24)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14
    assume ($IsValid'$1_option_Option'address''($t24) && (LenVec($t24->$vec) <= 1));

    // assume Eq<option::Option<address>>($t24, option::spec_none<address>()) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14
    assume $IsEqual'$1_option_Option'address''($t24, $1_option_spec_none'address'());

    // $t24 := opaque end: option::none<address>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14

    // $t25 := pack account::CapabilityOffer<account::RotationCapability>($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:234:44+39
    $t25 := $1_account_CapabilityOffer'$1_account_RotationCapability'($t24);

    // $t26 := opaque begin: option::none<address>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14
    assume {:print "$at(81,11723,11737)"} true;

    // assume And(WellFormed($t26), Le(Len<address>(select option::Option.vec($t26)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14
    assume ($IsValid'$1_option_Option'address''($t26) && (LenVec($t26->$vec) <= 1));

    // assume Eq<option::Option<address>>($t26, option::spec_none<address>()) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14
    assume $IsEqual'$1_option_Option'address''($t26, $1_option_spec_none'address'());

    // $t26 := opaque end: option::none<address>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14

    // $t27 := pack account::CapabilityOffer<account::SignerCapability>($t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:235:42+39
    $t27 := $1_account_CapabilityOffer'$1_account_SignerCapability'($t26);

    // $t28 := pack account::Account($t8, $t22, $t23, $t18, $t21, $t25, $t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:228:13+371
    assume {:print "$at(81,11383,11754)"} true;
    $t28 := $1_account_Account($t8, $t22, $t23, $t18, $t21, $t25, $t27);

    // move_to<account::Account>($t28, $t7) on_abort goto L4 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:226:9+7
    assume {:print "$at(81,11336,11343)"} true;
    if ($ResourceExists($1_account_Account_$memory, $t7->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t7->$addr, $t28);
    }
    if ($abort_flag) {
        assume {:print "$at(81,11336,11343)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:239:9+11
    assume {:print "$at(81,11775,11786)"} true;
    assume {:print "$track_return(18,3,0):", $t7} $t7 == $t7;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
    assume {:print "$at(81,11791,11792)"} true;
L3:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
    assume {:print "$at(81,11791,11792)"} true;
    $ret0 := $t7;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
L4:

    // abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
    assume {:print "$at(81,11791,11792)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun account::create_guid [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:776:5+436
procedure {:inline 1} $1_account_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: $Mutation ($1_account_Account);
    var $t2: int;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: int;
    var $t6: $1_account_Account;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_account_Account);
    var $t10: $Mutation (int);
    var $t11: $1_guid_GUID;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t0: $signer;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:623:9+46
    assume {:print "$at(82,31276,31322)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:639:9+39
    assume {:print "$at(82,31909,31948)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<account::Account>($t5)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:640:9+36
    assume {:print "$at(82,31957,31993)"} true;
    assume ($t6 == $ResourceValue($1_account_Account_$memory, $t5));

    // trace_local[account_signer]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:776:5+1
    assume {:print "$at(81,41043,41044)"} true;
    assume {:print "$track_local(18,6,0):", $t0} $t0 == $t0;

    // $t7 := signer::address_of($t0) on_abort goto L4 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:777:20+34
    assume {:print "$at(81,41141,41175)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(81,41141,41175)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[addr]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:777:13+4
    assume {:print "$track_local(18,6,2):", $t7} $t7 == $t7;

    // $t9 := borrow_global<account::Account>($t7) on_abort goto L4 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:778:23+17
    assume {:print "$at(81,41199,41216)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(81,41199,41216)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[account]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:778:13+7
    $temp_0'$1_account_Account' := $Dereference($t9);
    assume {:print "$track_local(18,6,1):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t10 := borrow_field<account::Account>.guid_creation_num($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:779:39+30
    assume {:print "$at(81,41271,41301)"} true;
    $t10 := $ChildMutation($t9, 2, $Dereference($t9)->$guid_creation_num);

    // $t11 := guid::create($t7, $t10) on_abort goto L4 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:779:20+50
    call $t11,$t10 := $1_guid_create($t7, $t10);
    if ($abort_flag) {
        assume {:print "$at(81,41252,41302)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // write_back[Reference($t9).guid_creation_num (u64)]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:779:20+50
    $t9 := $UpdateMutation($t9, $Update'$1_account_Account'_guid_creation_num($Dereference($t9), $Dereference($t10)));

    // trace_local[guid]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:779:13+4
    assume {:print "$track_local(18,6,3):", $t11} $t11 == $t11;

    // $t12 := get_field<account::Account>.guid_creation_num($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:781:13+25
    assume {:print "$at(81,41333,41358)"} true;
    $t12 := $Dereference($t9)->$guid_creation_num;

    // pack_ref_deep($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:781:13+25

    // write_back[account::Account@]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:781:13+25
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t13 := 1125899906842624 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:781:41+21
    $t13 := 1125899906842624;
    assume $IsValid'u64'($t13);

    // $t14 := <($t12, $t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:781:39+1
    call $t14 := $Lt($t12, $t13);

    // if ($t14) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:780:9+147
    assume {:print "$at(81,41312,41459)"} true;
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:780:9+147
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:780:9+147
    assume {:print "$at(81,41312,41459)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:782:33+31
    assume {:print "$at(81,41416,41447)"} true;
L0:

    // $t15 := 20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:782:33+31
    assume {:print "$at(81,41416,41447)"} true;
    $t15 := 20;
    assume $IsValid'u64'($t15);

    // $t16 := error::out_of_range($t15) on_abort goto L4 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:782:13+52
    call $t16 := $1_error_out_of_range($t15);
    if ($abort_flag) {
        assume {:print "$at(81,41396,41448)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_abort($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:780:9+147
    assume {:print "$at(81,41312,41459)"} true;
    assume {:print "$track_abort(18,6):", $t16} $t16 == $t16;

    // $t8 := move($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:780:9+147
    $t8 := $t16;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:780:9+147
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:784:9+4
    assume {:print "$at(81,41469,41473)"} true;
L2:

    // trace_return[0]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:784:9+4
    assume {:print "$at(81,41469,41473)"} true;
    assume {:print "$track_return(18,6,0):", $t11} $t11 == $t11;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:785:5+1
    assume {:print "$at(81,41478,41479)"} true;
L3:

    // return $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:785:5+1
    assume {:print "$at(81,41478,41479)"} true;
    $ret0 := $t11;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:785:5+1
L4:

    // abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:785:5+1
    assume {:print "$at(81,41478,41479)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun account::create_resource_account [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:724:5+1378
procedure {:inline 1} $1_account_create_resource_account(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: $signer;
    var $t4: $1_account_Account;
    var $t5: $Mutation ($1_account_Account);
    var $t6: $signer;
    var $t7: int;
    var $t8: $1_account_SignerCapability;
    var $t9: int;
    var $t10: int;
    var $t11: $1_account_Account;
    var $t12: Vec (int);
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_account_Account;
    var $t18: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t19: $1_option_Option'address';
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: Vec (int);
    var $t29: Vec (int);
    var $t30: int;
    var $t31: $Mutation ($1_account_Account);
    var $t32: $1_option_Option'address';
    var $t33: $Mutation ($1_account_CapabilityOffer'$1_account_SignerCapability');
    var $t34: $Mutation ($1_option_Option'address');
    var $t35: $1_account_SignerCapability;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t9, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:584:9+45
    assume {:print "$at(82,29592,29637)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, account::spec_create_resource_address($t9, $t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:585:9+68
    assume {:print "$at(82,29646,29714)"} true;
    assume ($t10 == $1_account_spec_create_resource_address($t9, $t1));

    // assume Identical($t11, global<account::Account>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:659:9+45
    assume {:print "$at(82,32663,32708)"} true;
    assume ($t11 == $ResourceValue($1_account_Account_$memory, $t10));

    // assume Identical($t12, bcs::$to_bytes<address>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t12 == $1_bcs_$to_bytes'address'($t10));

    // trace_local[source]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:724:5+1
    assume {:print "$at(81,38738,38739)"} true;
    assume {:print "$track_local(18,7,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:724:5+1
    assume {:print "$track_local(18,7,1):", $t1} $t1 == $t1;

    // $t13 := signer::address_of($t0) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:725:54+26
    assume {:print "$at(81,38908,38934)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(81,38908,38934)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t15 := opaque begin: account::create_resource_address($t13, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58

    // assume WellFormed($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58
    assume $IsValid'address'($t15);

    // assume Eq<address>($t15, account::spec_create_resource_address($t13, $t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58
    assume $IsEqual'address'($t15, $1_account_spec_create_resource_address($t13, $t1));

    // assume Neq<address>($t13, $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58
    assume !$IsEqual'address'($t13, $t15);

    // $t15 := opaque end: account::create_resource_address($t13, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58

    // trace_local[resource_addr]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:725:13+13
    assume {:print "$track_local(18,7,7):", $t15} $t15 == $t15;

    // $t16 := account::exists_at($t15) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:726:28+24
    assume {:print "$at(81,38970,38994)"} true;
    call $t16 := $1_account_exists_at($t15);
    if ($abort_flag) {
        assume {:print "$at(81,38970,38994)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // if ($t16) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:726:24+532
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:727:50+13
    assume {:print "$at(81,39047,39060)"} true;
L1:

    // $t17 := get_global<account::Account>($t15) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:727:27+13
    assume {:print "$at(81,39024,39037)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $ResourceValue($1_account_Account_$memory, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(81,39024,39037)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:727:17+7
    assume {:print "$track_local(18,7,4):", $t17} $t17 == $t17;

    // $t18 := get_field<account::Account>.signer_capability_offer($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:729:34+31
    assume {:print "$at(81,39117,39148)"} true;
    $t18 := $t17->$signer_capability_offer;

    // $t19 := get_field<account::CapabilityOffer<account::SignerCapability>>.for($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:729:33+36
    $t19 := $t18->$for;

    // $t20 := opaque begin: option::is_none<address>($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53

    // assume WellFormed($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, option::spec_is_none<address>($t19)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53
    assume $IsEqual'bool'($t20, $1_option_spec_is_none'address'($t19));

    // $t20 := opaque end: option::is_none<address>($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53

    // if ($t20) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    assume {:print "$at(81,39075,39234)"} true;
    if ($t20) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
L3:

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    assume {:print "$at(81,39075,39234)"} true;
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
L2:

    // $t21 := 15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:730:39+25
    assume {:print "$at(81,39193,39218)"} true;
    $t21 := 15;
    assume $IsValid'u64'($t21);

    // $t22 := error::already_exists($t21) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:730:17+48
    call $t22 := $1_error_already_exists($t21);
    if ($abort_flag) {
        assume {:print "$at(81,39171,39219)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    assume {:print "$at(81,39075,39234)"} true;
    assume {:print "$track_abort(18,7):", $t22} $t22 == $t22;

    // $t14 := move($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    $t14 := $t22;

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    goto L10;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:733:17+7
    assume {:print "$at(81,39273,39280)"} true;
L4:

    // $t23 := get_field<account::Account>.sequence_number($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:733:17+23
    assume {:print "$at(81,39273,39296)"} true;
    $t23 := $t17->$sequence_number;

    // $t24 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:733:44+1
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := ==($t23, $t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:733:41+2
    $t25 := $IsEqual'u64'($t23, $t24);

    // if ($t25) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    assume {:print "$at(81,39248,39377)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
L6:

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    assume {:print "$at(81,39248,39377)"} true;
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:734:38+21
    assume {:print "$at(81,39340,39361)"} true;
L5:

    // $t26 := 16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:734:38+21
    assume {:print "$at(81,39340,39361)"} true;
    $t26 := 16;
    assume $IsValid'u64'($t26);

    // $t27 := error::invalid_state($t26) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:734:17+43
    call $t27 := $1_error_invalid_state($t26);
    if ($abort_flag) {
        assume {:print "$at(81,39319,39362)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    assume {:print "$at(81,39248,39377)"} true;
    assume {:print "$track_abort(18,7):", $t27} $t27 == $t27;

    // $t14 := move($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    $t14 := $t27;

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    goto L10;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:736:27+13
    assume {:print "$at(81,39405,39418)"} true;
L7:

    // $t3 := opaque begin: create_signer::create_signer($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28
    assume {:print "$at(81,39391,39419)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28
    assume $IsEqual'address'($1_signer_$address_of($t3), $t15);

    // $t3 := opaque end: create_signer::create_signer($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28

    // goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:726:24+532
    assume {:print "$at(81,38966,39498)"} true;
    goto L8;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:738:38+13
    assume {:print "$at(81,39474,39487)"} true;
L0:

    // assume Identical($t28, bcs::$to_bytes<address>($t15)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t28 == $1_bcs_$to_bytes'address'($t15));

    // $t3 := account::create_account_unchecked($t15) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:738:13+39
    assume {:print "$at(81,39449,39488)"} true;
    call $t3 := $1_account_create_account_unchecked($t15);
    if ($abort_flag) {
        assume {:print "$at(81,39449,39488)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:726:24+532
    assume {:print "$at(81,38966,39498)"} true;
L8:

    // trace_local[resource]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:726:13+8
    assume {:print "$at(81,38955,38963)"} true;
    assume {:print "$track_local(18,7,6):", $t3} $t3 == $t3;

    // $t29 := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:744:55+13
    assume {:print "$at(81,39853,39866)"} true;
    $t29 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0));
    assume $IsValid'vec'u8''($t29);

    // assume Identical($t30, signer::$address_of($t3)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:197:9+39
    assume {:print "$at(82,10157,10196)"} true;
    assume ($t30 == $1_signer_$address_of($t3));

    // account::rotate_authentication_key_internal($t3, $t29) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:744:9+60
    assume {:print "$at(81,39807,39867)"} true;
    call $1_account_rotate_authentication_key_internal($t3, $t29);
    if ($abort_flag) {
        assume {:print "$at(81,39807,39867)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t31 := borrow_global<account::Account>($t15) on_abort goto L10 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:746:23+17
    assume {:print "$at(81,39892,39909)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t31 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t15));
    }
    if ($abort_flag) {
        assume {:print "$at(81,39892,39909)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account#3]($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:746:13+7
    $temp_0'$1_account_Account' := $Dereference($t31);
    assume {:print "$track_local(18,7,5):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t32 := opaque begin: option::some<address>($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27
    assume {:print "$at(81,39981,40008)"} true;

    // assume And(WellFormed($t32), Le(Len<address>(select option::Option.vec($t32)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27
    assume ($IsValid'$1_option_Option'address''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<option::Option<address>>($t32, option::spec_some<address>($t15)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27
    assume $IsEqual'$1_option_Option'address''($t32, $1_option_spec_some'address'($t15));

    // $t32 := opaque end: option::some<address>($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27

    // $t33 := borrow_field<account::Account>.signer_capability_offer($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+31
    $t33 := $ChildMutation($t31, 6, $Dereference($t31)->$signer_capability_offer);

    // $t34 := borrow_field<account::CapabilityOffer<account::SignerCapability>>.for($t33) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+35
    $t34 := $ChildMutation($t33, 0, $Dereference($t33)->$for);

    // write_ref($t34, $t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $t34 := $UpdateMutation($t34, $t32);

    // write_back[Reference($t33).for (option::Option<address>)]($t34) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $t33 := $UpdateMutation($t33, $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for($Dereference($t33), $Dereference($t34)));

    // write_back[Reference($t31).signer_capability_offer (account::CapabilityOffer<account::SignerCapability>)]($t33) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $t31 := $UpdateMutation($t31, $Update'$1_account_Account'_signer_capability_offer($Dereference($t31), $Dereference($t33)));

    // pack_ref_deep($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65

    // write_back[account::Account@]($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t31),
        $Dereference($t31));

    // $t35 := pack account::SignerCapability($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:748:26+43
    assume {:print "$at(81,40035,40078)"} true;
    $t35 := $1_account_SignerCapability($t15);

    // trace_local[signer_cap]($t35) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:748:13+10
    assume {:print "$track_local(18,7,8):", $t35} $t35 == $t35;

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:749:9+22
    assume {:print "$at(81,40088,40110)"} true;
    assume {:print "$track_return(18,7,0):", $t3} $t3 == $t3;

    // trace_return[1]($t35) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:749:9+22
    assume {:print "$track_return(18,7,1):", $t35} $t35 == $t35;

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
    assume {:print "$at(81,40115,40116)"} true;
L9:

    // return ($t3, $t35) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
    assume {:print "$at(81,40115,40116)"} true;
    $ret0 := $t3;
    $ret1 := $t35;
    return;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
L10:

    // abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
    assume {:print "$at(81,40115,40116)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_signer_with_capability [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:829:5+156
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account<account::SignerCapability>($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:653:9+30
    assume {:print "$at(82,32485,32515)"} true;
    assume ($t1 == $t0->$account);

    // trace_local[capability]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:829:5+1
    assume {:print "$at(81,43284,43285)"} true;
    assume {:print "$track_local(18,9,0):", $t0} $t0 == $t0;

    // $t2 := get_field<account::SignerCapability>.account($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:830:20+19
    assume {:print "$at(81,43385,43404)"} true;
    $t2 := $t0->$account;

    // $t3 := opaque begin: create_signer::create_signer($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume {:print "$at(81,43414,43434)"} true;

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // $t3 := opaque end: create_signer::create_signer($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume {:print "$track_return(18,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:832:5+1
    assume {:print "$at(81,43439,43440)"} true;
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:832:5+1
    assume {:print "$at(81,43439,43440)"} true;
    $ret0 := $t3;
    return;

}

// fun account::exists_at [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:243:5+79
procedure {:inline 1} $1_account_exists_at(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:243:5+1
    assume {:print "$at(81,11810,11811)"} true;
    assume {:print "$track_local(18,10,0):", $t0} $t0 == $t0;

    // $t1 := exists<account::Account>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:244:9+6
    assume {:print "$at(81,11862,11868)"} true;
    $t1 := $ResourceExists($1_account_Account_$memory, $t0);

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:244:9+21
    assume {:print "$track_return(18,10,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:245:5+1
    assume {:print "$at(81,11888,11889)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:245:5+1
    assume {:print "$at(81,11888,11889)"} true;
    $ret0 := $t1;
    return;

}

// fun account::rotate_authentication_key_internal [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:278:5+516
procedure {:inline 1} $1_account_rotate_authentication_key_internal(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_account_Account);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_account_Account);
    var $t16: $Mutation (Vec (int));
    var $t0: $signer;
    var $t1: Vec (int);
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:197:9+39
    assume {:print "$at(82,10157,10196)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // trace_local[account]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:278:5+1
    assume {:print "$at(81,13114,13115)"} true;
    assume {:print "$track_local(18,31,0):", $t0} $t0 == $t0;

    // trace_local[new_auth_key]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:278:5+1
    assume {:print "$track_local(18,31,1):", $t1} $t1 == $t1;

    // $t5 := signer::address_of($t0) on_abort goto L7 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:279:20+27
    assume {:print "$at(81,13250,13277)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(81,13250,13277)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[addr]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:279:13+4
    assume {:print "$track_local(18,31,3):", $t5} $t5 == $t5;

    // $t7 := account::exists_at($t5) on_abort goto L7 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:17+15
    assume {:print "$at(81,13295,13310)"} true;
    call $t7 := $1_account_exists_at($t5);
    if ($abort_flag) {
        assume {:print "$at(81,13295,13310)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t7) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    assume {:print "$at(81,13287,13354)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:51+23
L0:

    // $t8 := 2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:51+23
    assume {:print "$at(81,13329,13352)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L7 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:34+41
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(81,13312,13353)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    assume {:print "$at(81,13287,13354)"} true;
    assume {:print "$track_abort(18,31):", $t9} $t9 == $t9;

    // $t6 := move($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    $t6 := $t9;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:282:28+13
    assume {:print "$at(81,13400,13413)"} true;
L2:

    // $t10 := vector::length<u8>($t1) on_abort goto L7 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:282:13+29
    assume {:print "$at(81,13385,13414)"} true;
    call $t10 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(81,13385,13414)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t11 := 32 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:282:46+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:282:43+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    assume {:print "$at(81,13364,13498)"} true;
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    assume {:print "$at(81,13364,13498)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:283:37+29
    assume {:print "$at(81,13458,13487)"} true;
L3:

    // $t13 := 4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:283:37+29
    assume {:print "$at(81,13458,13487)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L7 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:283:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(81,13434,13488)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    assume {:print "$at(81,13364,13498)"} true;
    assume {:print "$track_abort(18,31):", $t14} $t14 == $t14;

    // $t6 := move($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    $t6 := $t14;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:285:59+4
    assume {:print "$at(81,13558,13562)"} true;
L5:

    // $t15 := borrow_global<account::Account>($t5) on_abort goto L7 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:285:32+17
    assume {:print "$at(81,13531,13548)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(81,13531,13548)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[account_resource]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:285:13+16
    $temp_0'$1_account_Account' := $Dereference($t15);
    assume {:print "$track_local(18,31,2):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t16 := borrow_field<account::Account>.authentication_key($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+35
    assume {:print "$at(81,13573,13608)"} true;
    $t16 := $ChildMutation($t15, 0, $Dereference($t15)->$authentication_key);

    // write_ref($t16, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50
    $t16 := $UpdateMutation($t16, $t1);

    // write_back[Reference($t15).authentication_key (vector<u8>)]($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50
    $t15 := $UpdateMutation($t15, $Update'$1_account_Account'_authentication_key($Dereference($t15), $Dereference($t16)));

    // pack_ref_deep($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50

    // write_back[account::Account@]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
    assume {:print "$at(81,13629,13630)"} true;
L6:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
    assume {:print "$at(81,13629,13630)"} true;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
L7:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
    assume {:print "$at(81,13629,13630)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct aggregator_v2::Aggregator<u64> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:52:5+111
datatype $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_max_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u64''(s: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsValid'u64'(s->$value)
      && $IsValid'u64'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): bool {
    s1 == s2
}

// struct aggregator_v2::Aggregator<u128> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:52:5+111
datatype $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_max_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u128''(s: $1_aggregator_v2_Aggregator'u128'): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128'): bool {
    s1 == s2
}

// fun aggregator_v2::add<u64> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:109:5+182
procedure {:inline 1} $1_aggregator_v2_add'u64'(_$t0: $Mutation ($1_aggregator_v2_Aggregator'u64'), _$t1: int) returns ($ret0: $Mutation ($1_aggregator_v2_Aggregator'u64'))
{
    // declare local variables
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t0: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u64'': $1_aggregator_v2_Aggregator'u64';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:109:5+1
    assume {:print "$at(89,5345,5346)"} true;
    $temp_0'$1_aggregator_v2_Aggregator'u64'' := $Dereference($t0);
    assume {:print "$track_local(21,0,0):", $temp_0'$1_aggregator_v2_Aggregator'u64''} $temp_0'$1_aggregator_v2_Aggregator'u64'' == $temp_0'$1_aggregator_v2_Aggregator'u64'';

    // trace_local[value]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:109:5+1
    assume {:print "$track_local(21,0,1):", $t1} $t1 == $t1;

    // $t2 := opaque begin: aggregator_v2::try_add<#0>($t0, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume {:print "$at(89,5450,5476)"} true;

    // $t3 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
L7:

    // trace_abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume {:print "$at(89,5450,5476)"} true;
    assume {:print "$track_abort(21,0):", $t4} $t4 == $t4;

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    goto L5;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
L6:

    // $t0 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume {:print "$at(89,5450,5476)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u64'';
    $t0 := $UpdateMutation($t0, $temp_0'$1_aggregator_v2_Aggregator'u64'');

    // assume WellFormed($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($Dereference($t0));

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume $IsValid'bool'($t2);

    // $t2 := opaque end: aggregator_v2::try_add<#0>($t0, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26

    // if ($t2) goto L1 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    if ($t2) { goto L1; } else { goto L3; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    assume {:print "$at(89,5442,5520)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:65+20
L0:

    // $t5 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:65+20
    assume {:print "$at(89,5498,5518)"} true;
    $t5 := 1;
    assume $IsValid'u64'($t5);

    // $t6 := error::out_of_range($t5) on_abort goto L5 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:45+41
    call $t6 := $1_error_out_of_range($t5);
    if ($abort_flag) {
        assume {:print "$at(89,5478,5519)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(21,0):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    assume {:print "$at(89,5442,5520)"} true;
    assume {:print "$track_abort(21,0):", $t6} $t6 == $t6;

    // $t4 := move($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    $t4 := $t6;

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    goto L5;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:87+1
L2:

    // trace_local[aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:87+1
    assume {:print "$at(89,5520,5521)"} true;
    $temp_0'$1_aggregator_v2_Aggregator'u64'' := $Dereference($t0);
    assume {:print "$track_local(21,0,0):", $temp_0'$1_aggregator_v2_Aggregator'u64''} $temp_0'$1_aggregator_v2_Aggregator'u64'' == $temp_0'$1_aggregator_v2_Aggregator'u64'';

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:87+1
    goto L4;

    // label L3 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L3:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L0 at <internal>:1:1+10
    goto L0;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
    assume {:print "$at(89,5526,5527)"} true;
L4:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
    assume {:print "$at(89,5526,5527)"} true;
    $ret0 := $t0;
    return;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
L5:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
    assume {:print "$at(89,5526,5527)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:52:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:52:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:52:10+50
function  $1_object_spec_exists_at'$1_coin_PairedCoinType'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_coin_PairedCoinType'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:552:10+75
function  $1_object_spec_create_object_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_object_spec_create_object_address(source, seed);
$IsValid'address'($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:554:10+92
function  $1_object_spec_create_user_derived_object_address(source: int, derive_from: int): int;
axiom (forall source: int, derive_from: int ::
(var $$res := $1_object_spec_create_user_derived_object_address(source, derive_from);
$IsValid'address'($$res)));

// struct object::ConstructorRef at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:135:5+167
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::DeriveRef at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:164:5+63
datatype $1_object_DeriveRef {
    $1_object_DeriveRef($self: int)
}
function {:inline} $Update'$1_object_DeriveRef'_self(s: $1_object_DeriveRef, x: int): $1_object_DeriveRef {
    $1_object_DeriveRef(x)
}
function $IsValid'$1_object_DeriveRef'(s: $1_object_DeriveRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_DeriveRef'(s1: $1_object_DeriveRef, s2: $1_object_DeriveRef): bool {
    s1 == s2
}

// struct object::Object<fungible_asset::FungibleStore> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:130:5+78
datatype $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_FungibleStore''_inner(s: $1_object_Object'$1_fungible_asset_FungibleStore', x: int): $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''(s: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''(s1: $1_object_Object'$1_fungible_asset_FungibleStore', s2: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    s1 == s2
}

// struct object::Object<fungible_asset::Metadata> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:130:5+78
datatype $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_Metadata''_inner(s: $1_object_Object'$1_fungible_asset_Metadata', x: int): $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(s1: $1_object_Object'$1_fungible_asset_Metadata', s2: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    s1 == s2
}

// struct object::ObjectCore at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:99:5+551
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TombStone at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:113:5+170
datatype $1_object_TombStone {
    $1_object_TombStone($original_owner: int)
}
function {:inline} $Update'$1_object_TombStone'_original_owner(s: $1_object_TombStone, x: int): $1_object_TombStone {
    $1_object_TombStone(x)
}
function $IsValid'$1_object_TombStone'(s: $1_object_TombStone): bool {
    $IsValid'address'(s->$original_owner)
}
function {:inline} $IsEqual'$1_object_TombStone'(s1: $1_object_TombStone, s2: $1_object_TombStone): bool {
    s1 == s2
}
var $1_object_TombStone_$memory: $Memory $1_object_TombStone;

// struct object::Transfer at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:177:5+108
datatype $1_object_Transfer {
    $1_object_Transfer($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_Transfer'_object(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_from(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_to(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, s->$from, x)
}
function $IsValid'$1_object_Transfer'(s: $1_object_Transfer): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_Transfer'(s1: $1_object_Transfer, s2: $1_object_Transfer): bool {
    s1 == s2
}

// struct object::TransferEvent at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:169:5+113
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferRef at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:152:5+65
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// struct object::Untransferable at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:120:5+32
datatype $1_object_Untransferable {
    $1_object_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_object_Untransferable'_dummy_field(s: $1_object_Untransferable, x: bool): $1_object_Untransferable {
    $1_object_Untransferable(x)
}
function $IsValid'$1_object_Untransferable'(s: $1_object_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_object_Untransferable'(s1: $1_object_Untransferable, s2: $1_object_Untransferable): bool {
    s1 == s2
}
var $1_object_Untransferable_$memory: $Memory $1_object_Untransferable;

// fun object::address_to_object<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:194:5+278
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_FungibleStore'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:194:5+1
    assume {:print "$at(155,8249,8250)"} true;
    assume {:print "$track_local(24,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:17+6
    assume {:print "$at(155,8332,8338)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    assume {:print "$at(155,8324,8401)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:62+22
L0:

    // $t2 := 2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:62+22
    assume {:print "$at(155,8377,8399)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(155,8360,8400)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    assume {:print "$at(155,8324,8401)"} true;
    assume {:print "$track_abort(24,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    $t4 := $t3;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:30+6
    assume {:print "$at(155,8432,8438)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20
    assume {:print "$at(155,8419,8439)"} true;

    // assume WellFormed($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20

    // if ($t5) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    assume {:print "$at(155,8411,8484)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:56+24
L3:

    // $t6 := 7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:56+24
    assume {:print "$at(155,8458,8482)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(155,8441,8483)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    assume {:print "$at(155,8411,8484)"} true;
    assume {:print "$track_abort(24,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    $t4 := $t7;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:197:28+6
    assume {:print "$at(155,8513,8519)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:197:9+27
    assume {:print "$at(155,8494,8521)"} true;
    $t8 := $1_object_Object'$1_fungible_asset_FungibleStore'($t0);

    // trace_return[0]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:197:9+27
    assume {:print "$track_return(24,3,0):", $t8} $t8 == $t8;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
    assume {:print "$at(155,8526,8527)"} true;
L6:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
    assume {:print "$at(155,8526,8527)"} true;
    $ret0 := $t8;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
L7:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
    assume {:print "$at(155,8526,8527)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:194:5+278
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_Metadata'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:194:5+1
    assume {:print "$at(155,8249,8250)"} true;
    assume {:print "$track_local(24,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:17+6
    assume {:print "$at(155,8332,8338)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    assume {:print "$at(155,8324,8401)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:62+22
L0:

    // $t2 := 2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:62+22
    assume {:print "$at(155,8377,8399)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(155,8360,8400)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    assume {:print "$at(155,8324,8401)"} true;
    assume {:print "$track_abort(24,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    $t4 := $t3;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+77
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:30+6
    assume {:print "$at(155,8432,8438)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20
    assume {:print "$at(155,8419,8439)"} true;

    // assume WellFormed($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$1_fungible_asset_Metadata'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:17+20

    // if ($t5) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    assume {:print "$at(155,8411,8484)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:56+24
L3:

    // $t6 := 7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:56+24
    assume {:print "$at(155,8458,8482)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(155,8441,8483)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    assume {:print "$at(155,8411,8484)"} true;
    assume {:print "$track_abort(24,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    $t4 := $t7;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:196:9+73
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:197:28+6
    assume {:print "$at(155,8513,8519)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:197:9+27
    assume {:print "$at(155,8494,8521)"} true;
    $t8 := $1_object_Object'$1_fungible_asset_Metadata'($t0);

    // trace_return[0]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:197:9+27
    assume {:print "$track_return(24,3,0):", $t8} $t8 == $t8;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
    assume {:print "$at(155,8526,8527)"} true;
L6:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
    assume {:print "$at(155,8526,8527)"} true;
    $ret0 := $t8;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
L7:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:198:5+1
    assume {:print "$at(155,8526,8527)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::can_generate_delete_ref [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:384:5+93
procedure {:inline 1} $1_object_can_generate_delete_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:384:5+1
    assume {:print "$at(155,16905,16906)"} true;
    assume {:print "$track_local(24,5,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.can_delete($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:385:9+14
    assume {:print "$at(155,16978,16992)"} true;
    $t1 := $t0->$can_delete;

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:385:9+14
    assume {:print "$track_return(24,5,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:386:5+1
    assume {:print "$at(155,16997,16998)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:386:5+1
    assume {:print "$at(155,16997,16998)"} true;
    $ret0 := $t1;
    return;

}

// fun object::convert<fungible_asset::Metadata, fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:248:5+115
procedure {:inline 1} $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:248:5+1
    assume {:print "$at(155,10638,10639)"} true;
    assume {:print "$track_local(24,6,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:249:30+12
    assume {:print "$at(155,10734,10746)"} true;
    $t1 := $t0->$inner;

    // $t2 := object::address_to_object<#1>($t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:249:9+34
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(155,10713,10747)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(24,6):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:249:9+34
    assume {:print "$track_return(24,6,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:250:5+1
    assume {:print "$at(155,10752,10753)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:250:5+1
    assume {:print "$at(155,10752,10753)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:250:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:250:5+1
    assume {:print "$at(155,10752,10753)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:254:5+284
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:154:9+50
    assume {:print "$at(156,6577,6627)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, object::spec_create_object_address($t4, $t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:155:9+65
    assume {:print "$at(156,6636,6701)"} true;
    assume ($t5 == $1_object_spec_create_object_address($t4, $t1));

    // trace_local[creator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:254:5+1
    assume {:print "$at(155,10959,10960)"} true;
    assume {:print "$track_local(24,9,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:254:5+1
    assume {:print "$track_local(24,9,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:255:31+27
    assume {:print "$at(155,11074,11101)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(155,11074,11101)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[creator_address]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:255:13+15
    assume {:print "$track_local(24,9,2):", $t6} $t6 == $t6;

    // $t8 := opaque begin: object::create_object_address($t6, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:256:24+45
    assume {:print "$at(155,11126,11171)"} true;

    // assume WellFormed($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:256:24+45
    assume $IsValid'address'($t8);

    // assume Eq<address>($t8, object::spec_create_object_address($t6, $t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:256:24+45
    assume $IsEqual'address'($t8, $1_object_spec_create_object_address($t6, $t1));

    // $t8 := opaque end: object::create_object_address($t6, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:256:24+45

    // trace_local[obj_addr]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:256:13+8
    assume {:print "$track_local(24,9,3):", $t8} $t8 == $t8;

    // $t9 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:257:59+5
    assume {:print "$at(155,11231,11236)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := object::create_object_internal($t6, $t8, $t9) on_abort goto L2 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:257:9+56
    call $t10 := $1_object_create_object_internal($t6, $t8, $t9);
    if ($abort_flag) {
        assume {:print "$at(155,11181,11237)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:257:9+56
    assume {:print "$track_return(24,9,0):", $t10} $t10 == $t10;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:258:5+1
    assume {:print "$at(155,11242,11243)"} true;
L1:

    // return $t10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:258:5+1
    assume {:print "$at(155,11242,11243)"} true;
    $ret0 := $t10;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:258:5+1
L2:

    // abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:258:5+1
    assume {:print "$at(155,11242,11243)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:321:5+766
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: int;
    var $t4: $signer;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $signer;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t14: $1_guid_GUID;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_event_EventHandle'$1_object_TransferEvent';
    var $t18: $1_object_ObjectCore;
    var $t19: $1_object_ConstructorRef;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:321:5+1
    assume {:print "$at(155,14497,14498)"} true;
    assume {:print "$track_local(24,15,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:321:5+1
    assume {:print "$track_local(24,15,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:321:5+1
    assume {:print "$track_local(24,15,2):", $t2} $t2 == $t2;

    // $t6 := exists<object::ObjectCore>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:18+6
    assume {:print "$at(155,14651,14657)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // $t7 := !($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:17+1
    call $t7 := $Not($t6);

    // if ($t7) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:9+75
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:9+75
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:9+75
    assume {:print "$at(155,14642,14717)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:68+14
L0:

    // $t8 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:68+14
    assume {:print "$at(155,14701,14715)"} true;
    $t8 := 1;
    assume $IsValid'u64'($t8);

    // $t9 := error::already_exists($t8) on_abort goto L4 with $t10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:46+37
    call $t9 := $1_error_already_exists($t8);
    if ($abort_flag) {
        assume {:print "$at(155,14679,14716)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:9+75
    assume {:print "$at(155,14642,14717)"} true;
    assume {:print "$track_abort(24,15):", $t9} $t9 == $t9;

    // $t10 := move($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:9+75
    $t10 := $t9;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:326:9+75
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:328:43+6
    assume {:print "$at(155,14762,14768)"} true;
L2:

    // $t11 := opaque begin: create_signer::create_signer($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:328:29+21
    assume {:print "$at(155,14748,14769)"} true;

    // assume WellFormed($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:328:29+21
    assume $IsValid'signer'($t11) && $1_signer_is_txn_signer($t11) && $1_signer_is_txn_signer_addr($t11->$addr);

    // assume Eq<address>(signer::$address_of($t11), $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:328:29+21
    assume $IsEqual'address'($1_signer_$address_of($t11), $t1);

    // $t11 := opaque end: create_signer::create_signer($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:328:29+21

    // trace_local[object_signer]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:328:13+13
    assume {:print "$track_local(24,15,4):", $t11} $t11 == $t11;

    // $t12 := 1125899906842624 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:329:33+22
    assume {:print "$at(155,14803,14825)"} true;
    $t12 := 1125899906842624;
    assume $IsValid'u64'($t12);

    // $t3 := $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:329:13+17
    $t3 := $t12;

    // trace_local[guid_creation_num]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:329:13+17
    assume {:print "$track_local(24,15,3):", $t3} $t3 == $t3;

    // $t13 := borrow_local($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:330:57+22
    assume {:print "$at(155,14883,14905)"} true;
    $t13 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t14 := guid::create($t1, $t13) on_abort goto L4 with $t10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:330:36+44
    call $t14,$t13 := $1_guid_create($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(155,14862,14906)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:330:36+44
    $t3 := $Dereference($t13);

    // trace_local[guid_creation_num]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:330:36+44
    assume {:print "$track_local(24,15,3):", $t3} $t3 == $t3;

    // trace_local[transfer_events_guid]($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:330:13+20
    assume {:print "$track_local(24,15,5):", $t14} $t14 == $t14;

    // $t15 := move($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:335:17+17
    assume {:print "$at(155,14995,15012)"} true;
    $t15 := $t3;

    // $t16 := true at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:337:41+4
    assume {:print "$at(155,15094,15098)"} true;
    $t16 := true;
    assume $IsValid'bool'($t16);

    // $t17 := event::new_event_handle<object::TransferEvent>($t14) on_abort goto L4 with $t10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:338:34+45
    assume {:print "$at(155,15133,15178)"} true;
    call $t17 := $1_event_new_event_handle'$1_object_TransferEvent'($t14);
    if ($abort_flag) {
        assume {:print "$at(155,15133,15178)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t18 := pack object::ObjectCore($t15, $t0, $t16, $t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:334:13+227
    assume {:print "$at(155,14966,15193)"} true;
    $t18 := $1_object_ObjectCore($t15, $t0, $t16, $t17);

    // move_to<object::ObjectCore>($t18, $t11) on_abort goto L4 with $t10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:332:9+7
    assume {:print "$at(155,14917,14924)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t11->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t11->$addr, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(155,14917,14924)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t19 := pack object::ConstructorRef($t1, $t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:341:9+43
    assume {:print "$at(155,15214,15257)"} true;
    $t19 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:341:9+43
    assume {:print "$track_return(24,15,0):", $t19} $t19 == $t19;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:342:5+1
    assume {:print "$at(155,15262,15263)"} true;
L3:

    // return $t19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:342:5+1
    assume {:print "$at(155,15262,15263)"} true;
    $ret0 := $t19;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:342:5+1
L4:

    // abort($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:342:5+1
    assume {:print "$at(155,15262,15263)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun object::create_sticky_object_at_address [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:283:5+215
procedure {:inline 1} $1_object_create_sticky_object_at_address(_$t0: int, _$t1: int) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_object_ConstructorRef;
    var $t4: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_address]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:283:5+1
    assume {:print "$at(155,12655,12656)"} true;
    assume {:print "$track_local(24,17,0):", $t0} $t0 == $t0;

    // trace_local[object_address]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:283:5+1
    assume {:print "$track_local(24,17,1):", $t1} $t1 == $t1;

    // $t2 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:287:63+5
    assume {:print "$at(155,12858,12863)"} true;
    $t2 := false;
    assume $IsValid'bool'($t2);

    // $t3 := object::create_object_internal($t0, $t1, $t2) on_abort goto L2 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:287:9+60
    call $t3 := $1_object_create_object_internal($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(155,12804,12864)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,17):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:287:9+60
    assume {:print "$track_return(24,17,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:288:5+1
    assume {:print "$at(155,12869,12870)"} true;
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:288:5+1
    assume {:print "$at(155,12869,12870)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:288:5+1
L2:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:288:5+1
    assume {:print "$at(155,12869,12870)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::object_address<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+91
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+1
    assume {:print "$at(155,10501,10502)"} true;
    assume {:print "$track_local(24,37,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:244:9+12
    assume {:print "$at(155,10574,10586)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:244:9+12
    assume {:print "$track_return(24,37,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:245:5+1
    assume {:print "$at(155,10591,10592)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:245:5+1
    assume {:print "$at(155,10591,10592)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_address<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+91
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+1
    assume {:print "$at(155,10501,10502)"} true;
    assume {:print "$track_local(24,37,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:244:9+12
    assume {:print "$at(155,10574,10586)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:244:9+12
    assume {:print "$track_return(24,37,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:245:5+1
    assume {:print "$at(155,10591,10592)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:245:5+1
    assume {:print "$at(155,10591,10592)"} true;
    $ret0 := $t1;
    return;

}

// fun object::create_user_derived_object [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:262:5+277
procedure {:inline 1} $1_object_create_user_derived_object(_$t0: int, _$t1: $1_object_DeriveRef) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_object_ConstructorRef;
    var $t8: int;
    var $t0: int;
    var $t1: $1_object_DeriveRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<object::DeriveRef>($t1))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:177:9+89
    assume {:print "$at(156,7509,7598)"} true;
    assume ($t3 == $1_object_spec_create_user_derived_object_address($t0, $t1->$self));

    // trace_local[creator_address]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:262:5+1
    assume {:print "$at(155,11429,11430)"} true;
    assume {:print "$track_local(24,18,0):", $t0} $t0 == $t0;

    // trace_local[derive_ref]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:262:5+1
    assume {:print "$track_local(24,18,1):", $t1} $t1 == $t1;

    // $t4 := get_field<object::DeriveRef>.self($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:263:76+15
    assume {:print "$at(155,11618,11633)"} true;
    $t4 := $t1->$self;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:263:24+68

    // assume WellFormed($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:263:24+68
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t4)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:263:24+68
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t4));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:263:24+68

    // trace_local[obj_addr]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:263:13+8
    assume {:print "$track_local(24,18,2):", $t5} $t5 == $t5;

    // $t6 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:264:59+5
    assume {:print "$at(155,11694,11699)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t7 := object::create_object_internal($t0, $t5, $t6) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:264:9+56
    call $t7 := $1_object_create_object_internal($t0, $t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(155,11644,11700)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(24,18):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:264:9+56
    assume {:print "$track_return(24,18,0):", $t7} $t7 == $t7;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:265:5+1
    assume {:print "$at(155,11705,11706)"} true;
L1:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:265:5+1
    assume {:print "$at(155,11705,11706)"} true;
    $ret0 := $t7;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:265:5+1
L2:

    // abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:265:5+1
    assume {:print "$at(155,11705,11706)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun object::disable_ungated_transfer [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:448:5+191
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:448:5+1
    assume {:print "$at(155,18930,18931)"} true;
    assume {:print "$track_local(24,22,0):", $t0} $t0 == $t0;

    // $t2 := get_field<object::TransferRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:449:52+8
    assume {:print "$at(155,19058,19066)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<object::ObjectCore>($t2) on_abort goto L2 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:449:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(155,19028,19045)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,22):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:449:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(24,22,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:450:41+5
    assume {:print "$at(155,19109,19114)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<object::ObjectCore>.allow_ungated_transfer($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:450:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:450:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:450:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[object::ObjectCore@]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:450:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:451:5+1
    assume {:print "$at(155,19120,19121)"} true;
L1:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:451:5+1
    assume {:print "$at(155,19120,19121)"} true;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:451:5+1
L2:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:451:5+1
    assume {:print "$at(155,19120,19121)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_derive_ref [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:364:5+108
procedure {:inline 1} $1_object_generate_derive_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_DeriveRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_DeriveRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:364:5+1
    assume {:print "$at(155,16209,16210)"} true;
    assume {:print "$track_local(24,26,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:365:27+8
    assume {:print "$at(155,16301,16309)"} true;
    $t1 := $t0->$self;

    // $t2 := pack object::DeriveRef($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:365:9+28
    $t2 := $1_object_DeriveRef($t1);

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:365:9+28
    assume {:print "$track_return(24,26,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:366:5+1
    assume {:print "$at(155,16316,16317)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:366:5+1
    assume {:print "$at(155,16316,16317)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_signer [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:369:5+96
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:369:5+1
    assume {:print "$at(155,16370,16371)"} true;
    assume {:print "$track_local(24,29,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:370:23+8
    assume {:print "$at(155,16451,16459)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:370:9+23

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:370:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:370:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // $t2 := opaque end: create_signer::create_signer($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:370:9+23

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:370:9+23
    assume {:print "$track_return(24,29,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:371:5+1
    assume {:print "$at(155,16465,16466)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:371:5+1
    assume {:print "$at(155,16465,16466)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:358:5+219
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:358:5+1
    assume {:print "$at(155,15869,15870)"} true;
    assume {:print "$track_local(24,31,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:41+8
    assume {:print "$at(155,15979,15987)"} true;
    $t1 := $t0->$self;

    // $t2 := exists<object::Untransferable>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:18+6
    $t2 := $ResourceExists($1_object_Untransferable_$memory, $t1);

    // $t3 := !($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:17+1
    call $t3 := $Not($t2);

    // if ($t3) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+95
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+95
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+95
    assume {:print "$at(155,15947,16042)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+95
L0:

    // $t4 := 9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:77+25
    assume {:print "$at(155,16015,16040)"} true;
    $t4 := 9;
    assume $IsValid'u64'($t4);

    // $t5 := error::permission_denied($t4) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:52+51
    call $t5 := $1_error_permission_denied($t4);
    if ($abort_flag) {
        assume {:print "$at(155,15990,16041)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(24,31):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+95
    assume {:print "$at(155,15947,16042)"} true;
    assume {:print "$track_abort(24,31):", $t5} $t5 == $t5;

    // $t6 := move($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+95
    $t6 := $t5;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+95
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:360:29+3
    assume {:print "$at(155,16072,16075)"} true;
L2:

    // $t7 := get_field<object::ConstructorRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:360:29+8
    assume {:print "$at(155,16072,16080)"} true;
    $t7 := $t0->$self;

    // $t8 := pack object::TransferRef($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:360:9+30
    $t8 := $1_object_TransferRef($t7);

    // trace_return[0]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:360:9+30
    assume {:print "$track_return(24,31,0):", $t8} $t8 == $t8;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:361:5+1
    assume {:print "$at(155,16087,16088)"} true;
L3:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:361:5+1
    assume {:print "$at(155,16087,16088)"} true;
    $ret0 := $t8;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:361:5+1
L4:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:361:5+1
    assume {:print "$at(155,16087,16088)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun object::is_burnt<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:189:5+100
procedure {:inline 1} $1_object_is_burnt'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:189:5+1
    assume {:print "$at(155,8068,8069)"} true;
    assume {:print "$track_local(24,32,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:190:27+12
    assume {:print "$at(155,8149,8161)"} true;
    $t1 := $t0->$inner;

    // $t2 := exists<object::TombStone>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:190:9+6
    $t2 := $ResourceExists($1_object_TombStone_$memory, $t1);

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:190:9+31
    assume {:print "$track_return(24,32,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:191:5+1
    assume {:print "$at(155,8167,8168)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:191:5+1
    assume {:print "$at(155,8167,8168)"} true;
    $ret0 := $t2;
    return;

}

// fun object::object_exists<coin::PairedCoinType> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:206:5+122
procedure {:inline 1} $1_object_object_exists'$1_coin_PairedCoinType'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:206:5+1
    assume {:print "$at(155,8766,8767)"} true;
    assume {:print "$track_local(24,38,0):", $t0} $t0 == $t0;

    // $t2 := exists<object::ObjectCore>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+6
    assume {:print "$at(155,8832,8838)"} true;
    $t2 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t2) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+50
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:52+6
L1:

    // $t1 := opaque begin: object::exists_at<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:39+20
    assume {:print "$at(155,8862,8882)"} true;

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:39+20
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, object::spec_exists_at<#0>($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:39+20
    assume $IsEqual'bool'($t1, $1_object_spec_exists_at'$1_coin_PairedCoinType'($t0));

    // $t1 := opaque end: object::exists_at<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:39+20

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+50
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+50
L0:

    // $t3 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+50
    assume {:print "$at(155,8832,8882)"} true;
    $t3 := false;
    assume $IsValid'bool'($t3);

    // $t1 := $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+50
    $t1 := $t3;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+50
L2:

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:207:9+50
    assume {:print "$at(155,8832,8882)"} true;
    assume {:print "$track_return(24,38,0):", $t1} $t1 == $t1;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:208:5+1
    assume {:print "$at(155,8887,8888)"} true;
L3:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:208:5+1
    assume {:print "$at(155,8887,8888)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_from_constructor_ref<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16691,16692)"} true;
    assume {:print "$track_local(24,39,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:380:30+8
    assume {:print "$at(155,16802,16810)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:380:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(155,16781,16811)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(24,39):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:380:9+30
    assume {:print "$track_return(24,39,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
    assume {:print "$at(155,16816,16817)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
    assume {:print "$at(155,16816,16817)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
    assume {:print "$at(155,16816,16817)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16691,16692)"} true;
    assume {:print "$track_local(24,39,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:380:30+8
    assume {:print "$at(155,16802,16810)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:380:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(155,16781,16811)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(24,39):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:380:9+30
    assume {:print "$track_return(24,39,0):", $t2} $t2 == $t2;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
    assume {:print "$at(155,16816,16817)"} true;
L1:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
    assume {:print "$at(155,16816,16817)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:381:5+1
    assume {:print "$at(155,16816,16817)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::owns<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:661:5+892
procedure {:inline 1} $1_object_owns'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: int) returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_ObjectCore;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: $1_object_ObjectCore;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: bool;
    var $t25: bool;
    var $t26: $1_object_ObjectCore;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: bool;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, select object::Object.inner<object::Object<#0>>($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:540:9+37
    assume {:print "$at(156,21560,21597)"} true;
    assume ($t5 == $t0->$inner);

    // assume Identical($t6, global<object::ObjectCore>($t5)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:541:9+53
    assume {:print "$at(156,21606,21659)"} true;
    assume ($t6 == $ResourceValue($1_object_ObjectCore_$memory, $t5));

    // assume Identical($t7, select object::ObjectCore.owner<object::ObjectCore>($t6)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:542:9+37
    assume {:print "$at(156,21668,21705)"} true;
    assume ($t7 == $t6->$owner);

    // trace_local[object]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:661:5+1
    assume {:print "$at(155,27346,27347)"} true;
    assume {:print "$track_local(24,42,0):", $t0} $t0 == $t0;

    // trace_local[owner]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:661:5+1
    assume {:print "$track_local(24,42,1):", $t1} $t1 == $t1;

    // $t8 := object::object_address<#0>($t0) on_abort goto L16 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:662:31+23
    assume {:print "$at(155,27463,27486)"} true;
    call $t8 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(155,27463,27486)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_local[current_address]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:662:13+15
    assume {:print "$track_local(24,42,3):", $t8} $t8 == $t8;

    // $t10 := ==($t8, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:663:29+2
    assume {:print "$at(155,27516,27518)"} true;
    $t10 := $IsEqual'address'($t8, $t1);

    // if ($t10) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:663:9+65
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:664:20+4
    assume {:print "$at(155,27547,27551)"} true;
L1:

    // $t11 := true at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:664:20+4
    assume {:print "$at(155,27547,27551)"} true;
    $t11 := true;
    assume $IsValid'bool'($t11);

    // trace_return[0]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:664:13+11
    assume {:print "$track_return(24,42,0):", $t11} $t11 == $t11;

    // $t12 := move($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:664:13+11
    $t12 := $t11;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:664:13+11
    goto L15;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:668:32+15
    assume {:print "$at(155,27612,27627)"} true;
L0:

    // $t13 := exists<object::ObjectCore>($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:668:13+6
    assume {:print "$at(155,27593,27599)"} true;
    $t13 := $ResourceExists($1_object_ObjectCore_$memory, $t8);

    // if ($t13) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:667:9+121
    assume {:print "$at(155,27572,27693)"} true;
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:667:9+121
L3:

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:667:9+121
    assume {:print "$at(155,27572,27693)"} true;
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:669:30+22
    assume {:print "$at(155,27659,27681)"} true;
L2:

    // $t14 := 2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:669:30+22
    assume {:print "$at(155,27659,27681)"} true;
    $t14 := 2;
    assume $IsValid'u64'($t14);

    // $t15 := error::not_found($t14) on_abort goto L16 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:669:13+40
    call $t15 := $1_error_not_found($t14);
    if ($abort_flag) {
        assume {:print "$at(155,27642,27682)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_abort($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:667:9+121
    assume {:print "$at(155,27572,27693)"} true;
    assume {:print "$track_abort(24,42):", $t15} $t15 == $t15;

    // $t9 := move($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:667:9+121
    $t9 := $t15;

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:667:9+121
    goto L16;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:672:48+15
    assume {:print "$at(155,27743,27758)"} true;
L4:

    // $t16 := get_global<object::ObjectCore>($t8) on_abort goto L16 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:672:22+13
    assume {:print "$at(155,27717,27730)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $ResourceValue($1_object_ObjectCore_$memory, $t8);
    }
    if ($abort_flag) {
        assume {:print "$at(155,27717,27730)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // $t17 := get_field<object::ObjectCore>.owner($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:673:31+12
    assume {:print "$at(155,27791,27803)"} true;
    $t17 := $t16->$owner;

    // trace_local[current_address#2]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:673:13+15
    assume {:print "$track_local(24,42,4):", $t17} $t17 == $t17;

    // $t18 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:675:21+1
    assume {:print "$at(155,27826,27827)"} true;
    $t18 := 0;
    assume $IsValid'u8'($t18);

    // trace_local[count]($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:675:13+5
    assume {:print "$track_local(24,42,2):", $t18} $t18 == $t18;

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume {:print "$at(155,27844,27849)"} true;
L13:

    // $t2 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume {:print "$at(155,27844,27849)"} true;
    havoc $t2;

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'u8'($t2);

    // $t4 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t4;

    // assume WellFormed($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'address'($t4);

    // $t19 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t19;

    // assume WellFormed($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'bool'($t19);

    // $t20 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t20;

    // assume WellFormed($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'u8'($t20);

    // $t21 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t21;

    // assume WellFormed($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'u8'($t21);

    // $t22 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t22;

    // assume WellFormed($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'u8'($t22);

    // $t23 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t23;

    // assume WellFormed($t23) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'bool'($t23);

    // $t24 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t24;

    // assume WellFormed($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'bool'($t24);

    // $t25 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t25;

    // assume WellFormed($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'bool'($t25);

    // $t26 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t26;

    // assume WellFormed($t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'$1_object_ObjectCore'($t26);

    // $t27 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    havoc $t27;

    // assume WellFormed($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume $IsValid'address'($t27);

    // trace_local[count]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume {:print "$info(): enter loop, variable(s) count, current_address#2 havocked and reassigned"} true;
    assume {:print "$track_local(24,42,2):", $t2} $t2 == $t2;

    // trace_local[current_address#2]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume {:print "$track_local(24,42,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:16+5
    assume !$abort_flag;

    // $t19 := !=($t1, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:22+2
    $t19 := !$IsEqual'address'($t1, $t4);

    // if ($t19) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:9+381
    if ($t19) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:676:9+381
L6:

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:677:21+5
    assume {:print "$at(155,27892,27897)"} true;
L7:

    // $t20 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:677:29+1
    assume {:print "$at(155,27900,27901)"} true;
    $t20 := 1;
    assume $IsValid'u8'($t20);

    // $t21 := +($t2, $t20) on_abort goto L16 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:677:27+1
    call $t21 := $AddU8($t2, $t20);
    if ($abort_flag) {
        assume {:print "$at(155,27898,27899)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_local[count]($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:677:13+5
    assume {:print "$track_local(24,42,2):", $t21} $t21 == $t21;

    // $t22 := 8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:29+22
    assume {:print "$at(155,27931,27953)"} true;
    $t22 := 8;
    assume $IsValid'u8'($t22);

    // $t23 := <($t21, $t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:27+1
    call $t23 := $Lt($t21, $t22);

    // if ($t23) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:13+78
    if ($t23) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:13+78
L9:

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:13+78
    assume {:print "$at(155,27915,27993)"} true;
    goto L10;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:73+16
L8:

    // $t28 := 6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:73+16
    assume {:print "$at(155,27975,27991)"} true;
    $t28 := 6;
    assume $IsValid'u64'($t28);

    // $t29 := error::out_of_range($t28) on_abort goto L16 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:53+37
    call $t29 := $1_error_out_of_range($t28);
    if ($abort_flag) {
        assume {:print "$at(155,27955,27992)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_abort($t29) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:13+78
    assume {:print "$at(155,27915,27993)"} true;
    assume {:print "$track_abort(24,42):", $t29} $t29 == $t29;

    // $t9 := move($t29) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:13+78
    $t9 := $t29;

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:678:13+78
    goto L16;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:679:37+15
    assume {:print "$at(155,28031,28046)"} true;
L10:

    // $t24 := exists<object::ObjectCore>($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:679:18+6
    assume {:print "$at(155,28012,28018)"} true;
    $t24 := $ResourceExists($1_object_ObjectCore_$memory, $t4);

    // $t25 := !($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:679:17+1
    call $t25 := $Not($t24);

    // if ($t25) goto L12 else goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:679:13+86
    if ($t25) { goto L12; } else { goto L11; }

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:680:24+5
    assume {:print "$at(155,28074,28079)"} true;
L12:

    // $t30 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:680:24+5
    assume {:print "$at(155,28074,28079)"} true;
    $t30 := false;
    assume $IsValid'bool'($t30);

    // trace_return[0]($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:680:17+12
    assume {:print "$track_return(24,42,0):", $t30} $t30 == $t30;

    // $t12 := move($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:680:17+12
    $t12 := $t30;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:680:17+12
    goto L15;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:683:52+15
    assume {:print "$at(155,28147,28162)"} true;
L11:

    // $t26 := get_global<object::ObjectCore>($t4) on_abort goto L16 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:683:26+13
    assume {:print "$at(155,28121,28134)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t26 := $ResourceValue($1_object_ObjectCore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(155,28121,28134)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // $t27 := get_field<object::ObjectCore>.owner($t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:684:31+12
    assume {:print "$at(155,28195,28207)"} true;
    $t27 := $t26->$owner;

    // trace_local[current_address#2]($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:684:13+15
    assume {:print "$track_local(24,42,4):", $t27} $t27 == $t27;

    // goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:684:43+1
    goto L14;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:686:9+4
    assume {:print "$at(155,28228,28232)"} true;
L5:

    // $t31 := true at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:686:9+4
    assume {:print "$at(155,28228,28232)"} true;
    $t31 := true;
    assume $IsValid'bool'($t31);

    // trace_return[0]($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:686:9+4
    assume {:print "$track_return(24,42,0):", $t31} $t31 == $t31;

    // $t12 := move($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:686:9+4
    $t12 := $t31;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:686:9+4
    goto L15;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:686:9+4
    // Loop invariant checking block for the loop started with header: L13
L14:

    // stop() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:686:9+4
    assume {:print "$at(155,28228,28232)"} true;
    assume false;
    return;

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:687:5+1
    assume {:print "$at(155,28237,28238)"} true;
L15:

    // return $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:687:5+1
    assume {:print "$at(155,28237,28238)"} true;
    $ret0 := $t12;
    return;

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:687:5+1
L16:

    // abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:687:5+1
    assume {:print "$at(155,28237,28238)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun object::set_untransferable [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:454:5+290
procedure {:inline 1} $1_object_set_untransferable(_$t0: $1_object_ConstructorRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: $signer;
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: bool;
    var $t7: $Mutation (bool);
    var $t8: $signer;
    var $t9: bool;
    var $t10: $1_object_Untransferable;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:454:5+1
    assume {:print "$at(155,19164,19165)"} true;
    assume {:print "$track_local(24,44,0):", $t0} $t0 == $t0;

    // $t3 := get_field<object::ConstructorRef>.self($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:455:52+8
    assume {:print "$at(155,19289,19297)"} true;
    $t3 := $t0->$self;

    // $t4 := borrow_global<object::ObjectCore>($t3) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:455:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $Mutation($Global($t3), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t3));
    }
    if ($abort_flag) {
        assume {:print "$at(155,19259,19276)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(24,44):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:455:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t4);
    assume {:print "$track_local(24,44,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t6 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:456:41+5
    assume {:print "$at(155,19340,19345)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t7 := borrow_field<object::ObjectCore>.allow_ungated_transfer($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:456:9+29
    $t7 := $ChildMutation($t4, 2, $Dereference($t4)->$allow_ungated_transfer);

    // write_ref($t7, $t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:456:9+37
    $t7 := $UpdateMutation($t7, $t6);

    // write_back[Reference($t4).allow_ungated_transfer (bool)]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:456:9+37
    $t4 := $UpdateMutation($t4, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t4), $Dereference($t7)));

    // write_back[object::ObjectCore@]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:456:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t4),
        $Dereference($t4));

    // $t8 := object::generate_signer($t0) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:457:29+20
    assume {:print "$at(155,19375,19395)"} true;
    call $t8 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(155,19375,19395)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(24,44):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object_signer]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:457:13+13
    assume {:print "$track_local(24,44,2):", $t8} $t8 == $t8;

    // $t9 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:458:33+17
    assume {:print "$at(155,19429,19446)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := pack object::Untransferable($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:458:33+17
    $t10 := $1_object_Untransferable($t9);

    // move_to<object::Untransferable>($t10, $t8) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:458:9+7
    if ($ResourceExists($1_object_Untransferable_$memory, $t8->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_Untransferable_$memory := $ResourceUpdate($1_object_Untransferable_$memory, $t8->$addr, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(155,19405,19412)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(24,44):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:459:5+1
    assume {:print "$at(155,19453,19454)"} true;
L1:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:459:5+1
    assume {:print "$at(155,19453,19454)"} true;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:459:5+1
L2:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:459:5+1
    assume {:print "$at(155,19453,19454)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::unburn<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:624:5+553
procedure {:inline 1} $1_object_unburn'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_TombStone;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_object_TombStone;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($1_object_ObjectCore);
    var $t21: int;
    var $t22: bool;
    var $t23: bool;
    var $t24: int;
    var $t25: $1_object_Transfer;
    var $t26: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t27: int;
    var $t28: $1_object_TransferEvent;
    var $t29: $Mutation (int);
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t7, select object::Object.inner<object::Object<#0>>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:492:9+34
    assume {:print "$at(156,19326,19360)"} true;
    assume ($t7 == $t1->$inner);

    // assume Identical($t8, global<object::TombStone>($t7)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:495:9+58
    assume {:print "$at(156,19461,19519)"} true;
    assume ($t8 == $ResourceValue($1_object_TombStone_$memory, $t7));

    // trace_local[original_owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:624:5+1
    assume {:print "$at(155,25814,25815)"} true;
    assume {:print "$track_local(24,50,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:624:5+1
    assume {:print "$track_local(24,50,1):", $t1} $t1 == $t1;

    // $t9 := get_field<object::Object<#0>>.inner($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:628:27+12
    assume {:print "$at(155,25972,25984)"} true;
    $t9 := $t1->$inner;

    // trace_local[object_addr]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:628:13+11
    assume {:print "$track_local(24,50,3):", $t9} $t9 == $t9;

    // $t10 := exists<object::TombStone>($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:17+6
    assume {:print "$at(155,26002,26008)"} true;
    $t10 := $ResourceExists($1_object_TombStone_$memory, $t9);

    // if ($t10) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:9+83
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:9+83
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:9+83
    assume {:print "$at(155,25994,26077)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:9+83
L0:

    // $t11 := 8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:73+17
    assume {:print "$at(155,26058,26075)"} true;
    $t11 := 8;
    assume $IsValid'u64'($t11);

    // $t12 := error::invalid_argument($t11) on_abort goto L12 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:49+42
    call $t12 := $1_error_invalid_argument($t11);
    if ($abort_flag) {
        assume {:print "$at(155,26034,26076)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // trace_abort($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:9+83
    assume {:print "$at(155,25994,26077)"} true;
    assume {:print "$track_abort(24,50):", $t12} $t12 == $t12;

    // $t13 := move($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:9+83
    $t13 := $t12;

    // goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:629:9+83
    goto L12;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:631:86+11
    assume {:print "$at(155,26165,26176)"} true;
L2:

    // $t14 := move_from<object::TombStone>($t9) on_abort goto L12 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:631:65+9
    assume {:print "$at(155,26144,26153)"} true;
    if (!$ResourceExists($1_object_TombStone_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($1_object_TombStone_$memory, $t9);
        $1_object_TombStone_$memory := $ResourceRemove($1_object_TombStone_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(155,26144,26153)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // $t15 := unpack object::TombStone($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:631:13+49
    $t15 := $t14->$original_owner;

    // trace_local[original_owner_addr]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:631:41+19
    assume {:print "$track_local(24,50,5):", $t15} $t15 == $t15;

    // $t16 := signer::address_of($t0) on_abort goto L12 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:40+34
    assume {:print "$at(155,26218,26252)"} true;
    call $t16 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(155,26218,26252)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // $t17 := ==($t15, $t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:37+2
    $t17 := $IsEqual'address'($t15, $t16);

    // if ($t17) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:9+111
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:9+111
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:9+111
    assume {:print "$at(155,26187,26298)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:101+17
L3:

    // $t18 := 4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:101+17
    assume {:print "$at(155,26279,26296)"} true;
    $t18 := 4;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L12 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:76+43
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(155,26254,26297)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // trace_abort($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:9+111
    assume {:print "$at(155,26187,26298)"} true;
    assume {:print "$track_abort(24,50):", $t19} $t19 == $t19;

    // $t13 := move($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:9+111
    $t13 := $t19;

    // goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:632:9+111
    goto L12;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:633:28+11
    assume {:print "$at(155,26327,26338)"} true;
L5:

    // trace_local[to#558]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:546:52+2
    assume {:print "$at(155,22795,22797)"} true;
    assume {:print "$track_local(24,50,6):", $t15} $t15 == $t15;

    // trace_local[object#557]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:546:35+6
    assume {:print "$track_local(24,50,2):", $t9} $t9 == $t9;

    // $t20 := borrow_global<object::ObjectCore>($t9) on_abort goto L12 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:547:27+17
    assume {:print "$at(155,22856,22873)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(155,22856,22873)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // trace_local[object_core#559]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:547:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t20);
    assume {:print "$track_local(24,50,4):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t21 := get_field<object::ObjectCore>.owner($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:548:13+17
    assume {:print "$at(155,22907,22924)"} true;
    $t21 := $Dereference($t20)->$owner;

    // $t22 := !=($t21, $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:548:31+2
    $t22 := !$IsEqual'address'($t21, $t15);

    // if ($t22) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:548:9+613
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:549:17+47
    assume {:print "$at(155,22950,22997)"} true;
L7:

    // $t23 := features::module_event_migration_enabled() on_abort goto L12 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:549:17+47
    assume {:print "$at(155,22950,22997)"} true;
    call $t23 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(155,22950,22997)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // if ($t23) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:549:13+279
    if ($t23) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:552:25+6
    assume {:print "$at(155,23085,23091)"} true;
L9:

    // $t24 := get_field<object::ObjectCore>.owner($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:553:31+17
    assume {:print "$at(155,23123,23140)"} true;
    $t24 := $Dereference($t20)->$owner;

    // $t25 := pack object::Transfer($t9, $t24, $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:551:21+141
    assume {:print "$at(155,23050,23191)"} true;
    $t25 := $1_object_Transfer($t9, $t24, $t15);

    // opaque begin: event::emit<object::Transfer>($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:550:17+193
    assume {:print "$at(155,23017,23210)"} true;

    // opaque end: event::emit<object::Transfer>($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:550:17+193

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:559:22+11
    assume {:print "$at(155,23279,23290)"} true;
L8:

    // $t26 := borrow_field<object::ObjectCore>.transfer_events($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:559:17+32
    assume {:print "$at(155,23274,23306)"} true;
    $t26 := $ChildMutation($t20, 3, $Dereference($t20)->$transfer_events);

    // $t27 := get_field<object::ObjectCore>.owner($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:562:27+17
    assume {:print "$at(155,23394,23411)"} true;
    $t27 := $Dereference($t20)->$owner;

    // $t28 := pack object::TransferEvent($t9, $t27, $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:560:17+130
    assume {:print "$at(155,23324,23454)"} true;
    $t28 := $1_object_TransferEvent($t9, $t27, $t15);

    // opaque begin: event::emit_event<object::TransferEvent>($t26, $t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:558:13+230
    assume {:print "$at(155,23239,23469)"} true;

    // opaque end: event::emit_event<object::TransferEvent>($t26, $t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:558:13+230

    // write_back[Reference($t20).transfer_events (event::EventHandle<object::TransferEvent>)]($t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:558:13+230
    $t20 := $UpdateMutation($t20, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t20), $Dereference($t26)));

    // $t29 := borrow_field<object::ObjectCore>.owner($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:566:13+17
    assume {:print "$at(155,23483,23500)"} true;
    $t29 := $ChildMutation($t20, 1, $Dereference($t20)->$owner);

    // write_ref($t29, $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:566:13+22
    $t29 := $UpdateMutation($t29, $t15);

    // write_back[Reference($t20).owner (address)]($t29) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:566:13+22
    $t20 := $UpdateMutation($t20, $Update'$1_object_ObjectCore'_owner($Dereference($t20), $Dereference($t29)));

    // write_back[object::ObjectCore@]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:566:13+22
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:566:35+1
    goto L10;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:548:9+613
    assume {:print "$at(155,22903,23516)"} true;
L6:

    // drop($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:548:9+613
    assume {:print "$at(155,22903,23516)"} true;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:633:61+1
    assume {:print "$at(155,26360,26361)"} true;
L10:

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:634:5+1
    assume {:print "$at(155,26366,26367)"} true;
L11:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:634:5+1
    assume {:print "$at(155,26366,26367)"} true;
    return;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:634:5+1
L12:

    // abort($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.move:634:5+1
    assume {:print "$at(155,26366,26367)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.spec.move:188:10+323
function {:inline} $1_optional_aggregator_optional_aggregator_value(optional_aggregator: $1_optional_aggregator_OptionalAggregator): int {
    (if ($1_optional_aggregator_$is_parallelizable(optional_aggregator)) then ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'(optional_aggregator->$aggregator))) else ($1_option_$borrow'$1_optional_aggregator_Integer'(optional_aggregator->$integer)->$value))
}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:190:5+141
function {:inline} $1_optional_aggregator_$is_parallelizable(optional_aggregator: $1_optional_aggregator_OptionalAggregator): bool {
    $1_option_$is_some'$1_aggregator_Aggregator'(optional_aggregator->$aggregator)
}

// struct optional_aggregator::Integer at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:20:5+74
datatype $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value: int, $limit: int)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, s->$limit)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(s->$value, x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$limit)
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:64:5+175
datatype $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer')
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, s->$integer)
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(s->$aggregator, x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s->$aggregator)
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s->$integer)
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1->$aggregator, s2->$aggregator)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1->$integer, s2->$integer)}

// fun optional_aggregator::add [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:157:5+427
procedure {:inline 1} $1_optional_aggregator_add(_$t0: $Mutation ($1_optional_aggregator_OptionalAggregator), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator))
{
    // declare local variables
    var $t2: $1_option_Option'$1_aggregator_Aggregator';
    var $t3: bool;
    var $t4: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: $1_aggregator_Aggregator;
    var $t8: bool;
    var $t9: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $t10: $Mutation ($1_optional_aggregator_Integer);
    var $t0: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t1: int;
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:157:5+1
    assume {:print "$at(87,5818,5819)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,0,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[value]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:157:5+1
    assume {:print "$track_local(25,0,1):", $t1} $t1 == $t1;

    // $t2 := get_field<optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:29+31
    assume {:print "$at(87,5922,5953)"} true;
    $t2 := $Dereference($t0)->$aggregator;

    // $t3 := opaque begin: option::is_some<aggregator::Aggregator>($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:13+48

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:13+48
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_some<aggregator::Aggregator>($t2)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:13+48
    assume $IsEqual'bool'($t3, $1_option_spec_is_some'$1_aggregator_Aggregator'($t2));

    // $t3 := opaque end: option::is_some<aggregator::Aggregator>($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:13+48

    // if ($t3) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:9+337
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:159:54+19
    assume {:print "$at(87,6011,6030)"} true;
L1:

    // $t4 := borrow_field<optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:159:49+35
    assume {:print "$at(87,6006,6041)"} true;
    $t4 := $ChildMutation($t0, 0, $Dereference($t0)->$aggregator);

    // $t5 := option::borrow_mut<aggregator::Aggregator>($t4) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:159:30+55
    call $t5,$t4 := $1_option_borrow_mut'$1_aggregator_Aggregator'($t4);
    if ($abort_flag) {
        assume {:print "$at(87,5987,6042)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,0):", $t6} $t6 == $t6;
        goto L4;
    }

    // opaque begin: aggregator::add($t5, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    assume {:print "$at(87,6056,6090)"} true;

    // $t7 := read_ref($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    $t7 := $Dereference($t5);

    // assume Identical($t8, Or(Gt(Add(aggregator::spec_aggregator_get_val($t5), $t1), aggregator::spec_get_limit($t5)), Gt(Add(aggregator::spec_aggregator_get_val($t5), $t1), 340282366920938463463374607431768211455))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    assume ($t8 == ((($1_aggregator_spec_aggregator_get_val($Dereference($t5)) + $t1) > $1_aggregator_spec_get_limit($Dereference($t5))) || (($1_aggregator_spec_aggregator_get_val($Dereference($t5)) + $t1) > 340282366920938463463374607431768211455)));

    // if ($t8) goto L7 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    if ($t8) { goto L7; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
L6:

    // trace_abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    assume {:print "$at(87,6056,6090)"} true;
    assume {:print "$track_abort(25,0):", $t6} $t6 == $t6;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    goto L4;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
L5:

    // $t5 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    assume {:print "$at(87,6056,6090)"} true;
    havoc $temp_0'$1_aggregator_Aggregator';
    $t5 := $UpdateMutation($t5, $temp_0'$1_aggregator_Aggregator');

    // assume WellFormed($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    assume $IsValid'$1_aggregator_Aggregator'($Dereference($t5));

    // assume Eq<u128>(aggregator::spec_get_limit($t5), aggregator::spec_get_limit($t7)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    assume $IsEqual'u128'($1_aggregator_spec_get_limit($Dereference($t5)), $1_aggregator_spec_get_limit($t7));

    // assume Eq<aggregator::Aggregator>(Freeze(false)($t5), aggregator::spec_aggregator_set_val($t7, Add(aggregator::spec_aggregator_get_val($t7), $t1))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    assume $IsEqual'$1_aggregator_Aggregator'($Dereference($t5), $1_aggregator_spec_aggregator_set_val($t7, ($1_aggregator_spec_aggregator_get_val($t7) + $t1)));

    // opaque end: aggregator::add($t5, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34

    // write_back[Reference($t4).vec (vector<aggregator::Aggregator>)/[]]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    $t4 := $UpdateMutation($t4, (var $$sel0 := $Dereference($t4)->$vec; $Update'$1_option_Option'$1_aggregator_Aggregator''_vec($Dereference($t4), UpdateVec($$sel0, ReadVec($t5->p, LenVec($t4->p) + 1), $Dereference($t5)))));

    // write_back[Reference($t0).aggregator (option::Option<aggregator::Aggregator>)]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_aggregator($Dereference($t0), $Dereference($t4)));

    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:160:13+34
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,0,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:9+337
    assume {:print "$at(87,5902,6239)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:162:51+19
    assume {:print "$at(87,6159,6178)"} true;
L0:

    // $t9 := borrow_field<optional_aggregator::OptionalAggregator>.integer($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:162:46+32
    assume {:print "$at(87,6154,6186)"} true;
    $t9 := $ChildMutation($t0, 1, $Dereference($t0)->$integer);

    // $t10 := option::borrow_mut<optional_aggregator::Integer>($t9) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:162:27+52
    call $t10,$t9 := $1_option_borrow_mut'$1_optional_aggregator_Integer'($t9);
    if ($abort_flag) {
        assume {:print "$at(87,6135,6187)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,0):", $t6} $t6 == $t6;
        goto L4;
    }

    // optional_aggregator::add_integer($t10, $t1) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:163:13+27
    assume {:print "$at(87,6201,6228)"} true;
    call $t10 := $1_optional_aggregator_add_integer($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(87,6201,6228)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,0):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t9).vec (vector<optional_aggregator::Integer>)/[]]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:163:13+27
    $t9 := $UpdateMutation($t9, (var $$sel0 := $Dereference($t9)->$vec; $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec($Dereference($t9), UpdateVec($$sel0, ReadVec($t10->p, LenVec($t9->p) + 1), $Dereference($t10)))));

    // write_back[Reference($t0).integer (option::Option<optional_aggregator::Integer>)]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:163:13+27
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_integer($Dereference($t0), $Dereference($t9)));

    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:163:13+27
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,0,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:9+337
    assume {:print "$at(87,5902,6239)"} true;
L2:

    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:9+337
    assume {:print "$at(87,5902,6239)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,0,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // pack_ref_deep($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:158:9+337

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:165:5+1
    assume {:print "$at(87,6244,6245)"} true;
L3:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:165:5+1
    assume {:print "$at(87,6244,6245)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:165:5+1
L4:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:165:5+1
    assume {:print "$at(87,6244,6245)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

    // label L7 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L7:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t4) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

}

// fun optional_aggregator::sub [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:168:5+427
procedure {:inline 1} $1_optional_aggregator_sub(_$t0: $Mutation ($1_optional_aggregator_OptionalAggregator), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator))
{
    // declare local variables
    var $t2: $1_option_Option'$1_aggregator_Aggregator';
    var $t3: bool;
    var $t4: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: $1_aggregator_Aggregator;
    var $t8: bool;
    var $t9: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $t10: $Mutation ($1_optional_aggregator_Integer);
    var $t0: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t1: int;
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:168:5+1
    assume {:print "$at(87,6333,6334)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,12,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[value]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:168:5+1
    assume {:print "$track_local(25,12,1):", $t1} $t1 == $t1;

    // $t2 := get_field<optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:29+31
    assume {:print "$at(87,6437,6468)"} true;
    $t2 := $Dereference($t0)->$aggregator;

    // $t3 := opaque begin: option::is_some<aggregator::Aggregator>($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:13+48

    // assume WellFormed($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:13+48
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_some<aggregator::Aggregator>($t2)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:13+48
    assume $IsEqual'bool'($t3, $1_option_spec_is_some'$1_aggregator_Aggregator'($t2));

    // $t3 := opaque end: option::is_some<aggregator::Aggregator>($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:13+48

    // if ($t3) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:9+337
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:170:54+19
    assume {:print "$at(87,6526,6545)"} true;
L1:

    // $t4 := borrow_field<optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:170:49+35
    assume {:print "$at(87,6521,6556)"} true;
    $t4 := $ChildMutation($t0, 0, $Dereference($t0)->$aggregator);

    // $t5 := option::borrow_mut<aggregator::Aggregator>($t4) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:170:30+55
    call $t5,$t4 := $1_option_borrow_mut'$1_aggregator_Aggregator'($t4);
    if ($abort_flag) {
        assume {:print "$at(87,6502,6557)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,12):", $t6} $t6 == $t6;
        goto L4;
    }

    // opaque begin: aggregator::sub($t5, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    assume {:print "$at(87,6571,6605)"} true;

    // $t7 := read_ref($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    $t7 := $Dereference($t5);

    // assume Identical($t8, Lt(aggregator::spec_aggregator_get_val($t5), $t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    assume ($t8 == ($1_aggregator_spec_aggregator_get_val($Dereference($t5)) < $t1));

    // if ($t8) goto L7 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    if ($t8) { goto L7; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
L6:

    // trace_abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    assume {:print "$at(87,6571,6605)"} true;
    assume {:print "$track_abort(25,12):", $t6} $t6 == $t6;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    goto L4;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
L5:

    // $t5 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    assume {:print "$at(87,6571,6605)"} true;
    havoc $temp_0'$1_aggregator_Aggregator';
    $t5 := $UpdateMutation($t5, $temp_0'$1_aggregator_Aggregator');

    // assume WellFormed($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    assume $IsValid'$1_aggregator_Aggregator'($Dereference($t5));

    // assume Eq<u128>(aggregator::spec_get_limit($t5), aggregator::spec_get_limit($t7)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    assume $IsEqual'u128'($1_aggregator_spec_get_limit($Dereference($t5)), $1_aggregator_spec_get_limit($t7));

    // assume Eq<aggregator::Aggregator>(Freeze(false)($t5), aggregator::spec_aggregator_set_val($t7, Sub(aggregator::spec_aggregator_get_val($t7), $t1))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    assume $IsEqual'$1_aggregator_Aggregator'($Dereference($t5), $1_aggregator_spec_aggregator_set_val($t7, ($1_aggregator_spec_aggregator_get_val($t7) - $t1)));

    // opaque end: aggregator::sub($t5, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34

    // write_back[Reference($t4).vec (vector<aggregator::Aggregator>)/[]]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    $t4 := $UpdateMutation($t4, (var $$sel0 := $Dereference($t4)->$vec; $Update'$1_option_Option'$1_aggregator_Aggregator''_vec($Dereference($t4), UpdateVec($$sel0, ReadVec($t5->p, LenVec($t4->p) + 1), $Dereference($t5)))));

    // write_back[Reference($t0).aggregator (option::Option<aggregator::Aggregator>)]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_aggregator($Dereference($t0), $Dereference($t4)));

    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:171:13+34
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,12,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:9+337
    assume {:print "$at(87,6417,6754)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:173:51+19
    assume {:print "$at(87,6674,6693)"} true;
L0:

    // $t9 := borrow_field<optional_aggregator::OptionalAggregator>.integer($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:173:46+32
    assume {:print "$at(87,6669,6701)"} true;
    $t9 := $ChildMutation($t0, 1, $Dereference($t0)->$integer);

    // $t10 := option::borrow_mut<optional_aggregator::Integer>($t9) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:173:27+52
    call $t10,$t9 := $1_option_borrow_mut'$1_optional_aggregator_Integer'($t9);
    if ($abort_flag) {
        assume {:print "$at(87,6650,6702)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,12):", $t6} $t6 == $t6;
        goto L4;
    }

    // optional_aggregator::sub_integer($t10, $t1) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:174:13+27
    assume {:print "$at(87,6716,6743)"} true;
    call $t10 := $1_optional_aggregator_sub_integer($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(87,6716,6743)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,12):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t9).vec (vector<optional_aggregator::Integer>)/[]]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:174:13+27
    $t9 := $UpdateMutation($t9, (var $$sel0 := $Dereference($t9)->$vec; $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec($Dereference($t9), UpdateVec($$sel0, ReadVec($t10->p, LenVec($t9->p) + 1), $Dereference($t10)))));

    // write_back[Reference($t0).integer (option::Option<optional_aggregator::Integer>)]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:174:13+27
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_integer($Dereference($t0), $Dereference($t9)));

    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:174:13+27
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,12,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:9+337
    assume {:print "$at(87,6417,6754)"} true;
L2:

    // trace_local[optional_aggregator]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:9+337
    assume {:print "$at(87,6417,6754)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(25,12,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // pack_ref_deep($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:169:9+337

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:176:5+1
    assume {:print "$at(87,6759,6760)"} true;
L3:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:176:5+1
    assume {:print "$at(87,6759,6760)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:176:5+1
L4:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:176:5+1
    assume {:print "$at(87,6759,6760)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

    // label L7 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L7:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t4) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

}

// fun optional_aggregator::add_integer [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:34:5+242
procedure {:inline 1} $1_optional_aggregator_add_integer(_$t0: $Mutation ($1_optional_aggregator_Integer), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_Integer))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $Mutation (int);
    var $t0: $Mutation ($1_optional_aggregator_Integer);
    var $t1: int;
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[integer]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:34:5+1
    assume {:print "$at(87,1108,1109)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(25,1,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[value]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:34:5+1
    assume {:print "$track_local(25,1,1):", $t1} $t1 == $t1;

    // $t2 := get_field<optional_aggregator::Integer>.limit($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:36:23+13
    assume {:print "$at(87,1201,1214)"} true;
    $t2 := $Dereference($t0)->$limit;

    // $t3 := get_field<optional_aggregator::Integer>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:36:39+13
    $t3 := $Dereference($t0)->$value;

    // $t4 := -($t2, $t3) on_abort goto L4 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:36:37+1
    call $t4 := $Sub($t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(87,1215,1216)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,1):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t6 := <=($t1, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:36:19+2
    call $t6 := $Le($t1, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
    assume {:print "$at(87,1170,1296)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
    assume {:print "$at(87,1170,1296)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
L0:

    // drop($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
    assume {:print "$at(87,1170,1296)"} true;

    // $t7 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:37:33+20
    assume {:print "$at(87,1265,1285)"} true;
    $t7 := 1;
    assume $IsValid'u64'($t7);

    // $t8 := error::out_of_range($t7) on_abort goto L4 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:37:13+41
    call $t8 := $1_error_out_of_range($t7);
    if ($abort_flag) {
        assume {:print "$at(87,1245,1286)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,1):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
    assume {:print "$at(87,1170,1296)"} true;
    assume {:print "$track_abort(25,1):", $t8} $t8 == $t8;

    // $t5 := move($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
    $t5 := $t8;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:35:9+126
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:25+7
    assume {:print "$at(87,1322,1329)"} true;
L2:

    // $t9 := get_field<optional_aggregator::Integer>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:25+13
    assume {:print "$at(87,1322,1335)"} true;
    $t9 := $Dereference($t0)->$value;

    // $t10 := +($t9, $t1) on_abort goto L4 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:39+1
    call $t10 := $AddU128($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(87,1336,1337)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,1):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t11 := borrow_field<optional_aggregator::Integer>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:9+13
    $t11 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t11, $t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:9+37
    $t11 := $UpdateMutation($t11, $t10);

    // write_back[Reference($t0).value (u128)]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_Integer'_value($Dereference($t0), $Dereference($t11)));

    // trace_local[integer]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:9+37
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(25,1,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[integer]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:39:46+1
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(25,1,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:40:5+1
    assume {:print "$at(87,1349,1350)"} true;
L3:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:40:5+1
    assume {:print "$at(87,1349,1350)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:40:5+1
L4:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:40:5+1
    assume {:print "$at(87,1349,1350)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun optional_aggregator::sub_integer [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:43:5+191
procedure {:inline 1} $1_optional_aggregator_sub_integer(_$t0: $Mutation ($1_optional_aggregator_Integer), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_Integer))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t0: $Mutation ($1_optional_aggregator_Integer);
    var $t1: int;
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[integer]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:43:5+1
    assume {:print "$at(87,1424,1425)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(25,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[value]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:43:5+1
    assume {:print "$track_local(25,13,1):", $t1} $t1 == $t1;

    // $t2 := get_field<optional_aggregator::Integer>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:26+13
    assume {:print "$at(87,1503,1516)"} true;
    $t2 := $Dereference($t0)->$value;

    // $t3 := <=($t1, $t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:23+2
    call $t3 := $Le($t1, $t2);

    // if ($t3) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
    assume {:print "$at(87,1486,1561)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
L0:

    // drop($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
    assume {:print "$at(87,1486,1561)"} true;

    // $t4 := 2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:61+21
    $t4 := 2;
    assume $IsValid'u64'($t4);

    // $t5 := error::out_of_range($t4) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:41+42
    call $t5 := $1_error_out_of_range($t4);
    if ($abort_flag) {
        assume {:print "$at(87,1518,1560)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,13):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
    assume {:print "$at(87,1486,1561)"} true;
    assume {:print "$track_abort(25,13):", $t5} $t5 == $t5;

    // $t6 := move($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
    $t6 := $t5;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+75
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:25+7
    assume {:print "$at(87,1587,1594)"} true;
L2:

    // $t7 := get_field<optional_aggregator::Integer>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:25+13
    assume {:print "$at(87,1587,1600)"} true;
    $t7 := $Dereference($t0)->$value;

    // $t8 := -($t7, $t1) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:39+1
    call $t8 := $Sub($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(87,1601,1602)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,13):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t9 := borrow_field<optional_aggregator::Integer>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:9+13
    $t9 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t9, $t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:9+37
    $t9 := $UpdateMutation($t9, $t8);

    // write_back[Reference($t0).value (u128)]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_Integer'_value($Dereference($t0), $Dereference($t9)));

    // trace_local[integer]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:9+37
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(25,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[integer]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:45:46+1
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(25,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:46:5+1
    assume {:print "$at(87,1614,1615)"} true;
L3:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:46:5+1
    assume {:print "$at(87,1614,1615)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:46:5+1
L4:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:46:5+1
    assume {:print "$at(87,1614,1615)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct function_info::FunctionInfo at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:19:5+142
datatype $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo($module_address: int, $module_name: $1_string_String, $function_name: $1_string_String)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_address(s: $1_function_info_FunctionInfo, x: int): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(x, s->$module_name, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, x, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_function_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, s->$module_name, x)
}
function $IsValid'$1_function_info_FunctionInfo'(s: $1_function_info_FunctionInfo): bool {
    $IsValid'address'(s->$module_address)
      && $IsValid'$1_string_String'(s->$module_name)
      && $IsValid'$1_string_String'(s->$function_name)
}
function {:inline} $IsEqual'$1_function_info_FunctionInfo'(s1: $1_function_info_FunctionInfo, s2: $1_function_info_FunctionInfo): bool {
    $IsEqual'address'(s1->$module_address, s2->$module_address)
    && $IsEqual'$1_string_String'(s1->$module_name, s2->$module_name)
    && $IsEqual'$1_string_String'(s1->$function_name, s2->$function_name)}

// fun function_info::load_module_from_function [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:89:5+100
procedure {:inline 1} $1_function_info_load_module_from_function(_$t0: $1_function_info_FunctionInfo) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t0: $1_function_info_FunctionInfo;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[f]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:89:5+1
    assume {:print "$at(137,3414,3415)"} true;
    assume {:print "$track_local(26,4,0):", $t0} $t0 == $t0;

    // opaque begin: function_info::load_function_impl($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    assume {:print "$at(137,3487,3508)"} true;

    // $t1 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    havoc $t1;

    // if ($t1) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
L4:

    // trace_abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    assume {:print "$at(137,3487,3508)"} true;
    assume {:print "$track_abort(26,4):", $t2} $t2 == $t2;

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    goto L2;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
L3:

    // opaque end: function_info::load_function_impl($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    assume {:print "$at(137,3487,3508)"} true;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
    assume {:print "$at(137,3513,3514)"} true;
L1:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
    assume {:print "$at(137,3513,3514)"} true;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
L2:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
    assume {:print "$at(137,3513,3514)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// struct fungible_asset::TransferRef at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:183:5+77
datatype $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_TransferRef'_metadata(s: $1_fungible_asset_TransferRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef(x)
}
function $IsValid'$1_fungible_asset_TransferRef'(s: $1_fungible_asset_TransferRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_TransferRef'(s1: $1_fungible_asset_TransferRef, s2: $1_fungible_asset_TransferRef): bool {
    s1 == s2
}

// struct fungible_asset::Untransferable at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:137:5+32
datatype $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_fungible_asset_Untransferable'_dummy_field(s: $1_fungible_asset_Untransferable, x: bool): $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable(x)
}
function $IsValid'$1_fungible_asset_Untransferable'(s: $1_fungible_asset_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_fungible_asset_Untransferable'(s1: $1_fungible_asset_Untransferable, s2: $1_fungible_asset_Untransferable): bool {
    s1 == s2
}
var $1_fungible_asset_Untransferable_$memory: $Memory $1_fungible_asset_Untransferable;

// struct fungible_asset::BurnRef at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:188:5+73
datatype $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_BurnRef'_metadata(s: $1_fungible_asset_BurnRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef(x)
}
function $IsValid'$1_fungible_asset_BurnRef'(s: $1_fungible_asset_BurnRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_BurnRef'(s1: $1_fungible_asset_BurnRef, s2: $1_fungible_asset_BurnRef): bool {
    s1 == s2
}

// struct fungible_asset::ConcurrentFungibleBalance at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:164:5+132
datatype $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance($balance: $1_aggregator_v2_Aggregator'u64')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance(s: $1_fungible_asset_ConcurrentFungibleBalance, x: $1_aggregator_v2_Aggregator'u64'): $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance(x)
}
function $IsValid'$1_fungible_asset_ConcurrentFungibleBalance'(s: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$balance)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'(s1: $1_fungible_asset_ConcurrentFungibleBalance, s2: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentFungibleBalance_$memory: $Memory $1_fungible_asset_ConcurrentFungibleBalance;

// struct fungible_asset::ConcurrentSupply at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:111:5+74
datatype $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply($current: $1_aggregator_v2_Aggregator'u128')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentSupply'_current(s: $1_fungible_asset_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u128'): $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply(x)
}
function $IsValid'$1_fungible_asset_ConcurrentSupply'(s: $1_fungible_asset_ConcurrentSupply): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u128''(s->$current)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentSupply'(s1: $1_fungible_asset_ConcurrentSupply, s2: $1_fungible_asset_ConcurrentSupply): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentSupply_$memory: $Memory $1_fungible_asset_ConcurrentSupply;

// struct fungible_asset::Deposit at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:199:5+83
datatype $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_store(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_amount(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(s->$store, x)
}
function $IsValid'$1_fungible_asset_Deposit'(s: $1_fungible_asset_Deposit): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Deposit'(s1: $1_fungible_asset_Deposit, s2: $1_fungible_asset_Deposit): bool {
    s1 == s2
}

// struct fungible_asset::DispatchFunctionStore at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:151:5+185
datatype $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore($withdraw_function: $1_option_Option'$1_function_info_FunctionInfo', $deposit_function: $1_option_Option'$1_function_info_FunctionInfo', $derived_balance_function: $1_option_Option'$1_function_info_FunctionInfo')
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_withdraw_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(x, s->$deposit_function, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_deposit_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, x, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_derived_balance_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, s->$deposit_function, x)
}
function $IsValid'$1_fungible_asset_DispatchFunctionStore'(s: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$withdraw_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$deposit_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$derived_balance_function)
}
function {:inline} $IsEqual'$1_fungible_asset_DispatchFunctionStore'(s1: $1_fungible_asset_DispatchFunctionStore, s2: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$withdraw_function, s2->$withdraw_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$deposit_function, s2->$deposit_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$derived_balance_function, s2->$derived_balance_function)}
var $1_fungible_asset_DispatchFunctionStore_$memory: $Memory $1_fungible_asset_DispatchFunctionStore;

// struct fungible_asset::FungibleAsset at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:171:5+85
datatype $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset($metadata: $1_object_Object'$1_fungible_asset_Metadata', $amount: int)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_metadata(s: $1_fungible_asset_FungibleAsset, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_amount(s: $1_fungible_asset_FungibleAsset, x: int): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(s->$metadata, x)
}
function $IsValid'$1_fungible_asset_FungibleAsset'(s: $1_fungible_asset_FungibleAsset): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleAsset'(s1: $1_fungible_asset_FungibleAsset, s2: $1_fungible_asset_FungibleAsset): bool {
    s1 == s2
}

// struct fungible_asset::FungibleStore at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:141:5+324
datatype $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore($metadata: $1_object_Object'$1_fungible_asset_Metadata', $balance: int, $frozen: bool)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_metadata(s: $1_fungible_asset_FungibleStore, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(x, s->$balance, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_balance(s: $1_fungible_asset_FungibleStore, x: int): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, x, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_frozen(s: $1_fungible_asset_FungibleStore, x: bool): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, s->$balance, x)
}
function $IsValid'$1_fungible_asset_FungibleStore'(s: $1_fungible_asset_FungibleStore): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$balance)
      && $IsValid'bool'(s->$frozen)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleStore'(s1: $1_fungible_asset_FungibleStore, s2: $1_fungible_asset_FungibleStore): bool {
    s1 == s2
}
var $1_fungible_asset_FungibleStore_$memory: $Memory $1_fungible_asset_FungibleStore;

// struct fungible_asset::Metadata at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:117:5+797
datatype $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $icon_uri: $1_string_String, $project_uri: $1_string_String)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_name(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(x, s->$symbol, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_symbol(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, x, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_decimals(s: $1_fungible_asset_Metadata, x: int): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, x, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_icon_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, x, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_project_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, s->$icon_uri, x)
}
function $IsValid'$1_fungible_asset_Metadata'(s: $1_fungible_asset_Metadata): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_string_String'(s->$icon_uri)
      && $IsValid'$1_string_String'(s->$project_uri)
}
function {:inline} $IsEqual'$1_fungible_asset_Metadata'(s1: $1_fungible_asset_Metadata, s2: $1_fungible_asset_Metadata): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_string_String'(s1->$icon_uri, s2->$icon_uri)
    && $IsEqual'$1_string_String'(s1->$project_uri, s2->$project_uri)}
var $1_fungible_asset_Metadata_$memory: $Memory $1_fungible_asset_Metadata;

// struct fungible_asset::MintRef at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:177:5+73
datatype $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_MintRef'_metadata(s: $1_fungible_asset_MintRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef(x)
}
function $IsValid'$1_fungible_asset_MintRef'(s: $1_fungible_asset_MintRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_MintRef'(s1: $1_fungible_asset_MintRef, s2: $1_fungible_asset_MintRef): bool {
    s1 == s2
}

// struct fungible_asset::Supply at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:104:5+133
datatype $1_fungible_asset_Supply {
    $1_fungible_asset_Supply($current: int, $maximum: $1_option_Option'u128')
}
function {:inline} $Update'$1_fungible_asset_Supply'_current(s: $1_fungible_asset_Supply, x: int): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(x, s->$maximum)
}
function {:inline} $Update'$1_fungible_asset_Supply'_maximum(s: $1_fungible_asset_Supply, x: $1_option_Option'u128'): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(s->$current, x)
}
function $IsValid'$1_fungible_asset_Supply'(s: $1_fungible_asset_Supply): bool {
    $IsValid'u128'(s->$current)
      && $IsValid'$1_option_Option'u128''(s->$maximum)
}
function {:inline} $IsEqual'$1_fungible_asset_Supply'(s1: $1_fungible_asset_Supply, s2: $1_fungible_asset_Supply): bool {
    $IsEqual'u128'(s1->$current, s2->$current)
    && $IsEqual'$1_option_Option'u128''(s1->$maximum, s2->$maximum)}
var $1_fungible_asset_Supply_$memory: $Memory $1_fungible_asset_Supply;

// struct fungible_asset::Withdraw at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:206:5+84
datatype $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_store(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_amount(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(s->$store, x)
}
function $IsValid'$1_fungible_asset_Withdraw'(s: $1_fungible_asset_Withdraw): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Withdraw'(s1: $1_fungible_asset_Withdraw, s2: $1_fungible_asset_Withdraw): bool {
    s1 == s2
}

// fun fungible_asset::generate_transfer_ref [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:460:5+207
procedure {:inline 1} $1_fungible_asset_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_TransferRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:460:5+1
    assume {:print "$at(139,19324,19325)"} true;
    assume {:print "$track_local(27,25,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:461:24+62
    assume {:print "$at(139,19429,19491)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,19429,19491)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,25):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::TransferRef($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:462:9+24
    assume {:print "$at(139,19501,19525)"} true;
    $t3 := $1_fungible_asset_TransferRef($t1);

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:462:9+24
    assume {:print "$track_return(27,25,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
    assume {:print "$at(139,19530,19531)"} true;
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
    assume {:print "$at(139,19530,19531)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
L2:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
    assume {:print "$at(139,19530,19531)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::is_untransferable<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:293:5+137
procedure {:inline 1} $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:293:5+1
    assume {:print "$at(139,12331,12332)"} true;
    assume {:print "$track_local(27,34,0):", $t0} $t0 == $t0;

    // $t1 := object::object_address<#0>($t0) on_abort goto L2 with $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:294:32+33
    assume {:print "$at(139,12428,12461)"} true;
    call $t1 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,12428,12461)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,34):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := exists<fungible_asset::Untransferable>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:294:9+6
    $t3 := $ResourceExists($1_fungible_asset_Untransferable_$memory, $t1);

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:294:9+57
    assume {:print "$track_return(27,34,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
    assume {:print "$at(139,12467,12468)"} true;
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
    assume {:print "$at(139,12467,12468)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
L2:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
    assume {:print "$at(139,12467,12468)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::add_fungibility [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1830
procedure {:inline 1} $1_fungible_asset_add_fungibility(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t7: $signer;
    var $t8: $1_aggregator_v2_Aggregator'u128';
    var $t9: $signer;
    var $t10: $signer;
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: $signer;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: bool;
    var $t40: int;
    var $t41: int;
    var $t42: $1_fungible_asset_Metadata;
    var $t43: bool;
    var $t44: $1_option_Option'u128';
    var $t45: bool;
    var $t46: bool;
    var $t47: $Mutation ($1_option_Option'u128');
    var $t48: int;
    var $t49: $1_option_Option'u128';
    var $t50: bool;
    var $t51: bool;
    var $t52: $1_fungible_asset_ConcurrentSupply;
    var $t53: int;
    var $t54: $1_option_Option'u128';
    var $t55: $1_fungible_asset_Supply;
    var $t56: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$at(139,9964,9965)"} true;
    assume {:print "$track_local(27,0,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,6):", $t6} $t6 == $t6;

    // $t12 := object::can_generate_delete_ref($t0) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:18+48
    assume {:print "$at(139,10238,10286)"} true;
    call $t12 := $1_object_can_generate_delete_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(139,10238,10286)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t14 := !($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:17+1
    call $t14 := $Not($t12);

    // if ($t14) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    assume {:print "$at(139,10229,10334)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
L0:

    // $t15 := 18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:92+20
    assume {:print "$at(139,10312,10332)"} true;
    $t15 := 18;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:68+45
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(139,10288,10333)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    assume {:print "$at(139,10229,10334)"} true;
    assume {:print "$track_abort(27,0):", $t16} $t16 == $t16;

    // $t13 := move($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    $t13 := $t16;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    goto L25;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:247:63+15
    assume {:print "$at(139,10398,10413)"} true;
L2:

    // $t17 := object::generate_signer($t0) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:247:39+40
    assume {:print "$at(139,10374,10414)"} true;
    call $t17 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(139,10374,10414)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_local[metadata_object_signer]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:247:13+22
    assume {:print "$track_local(27,0,10):", $t17} $t17 == $t17;

    // $t18 := string::length($t2) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:17+21
    assume {:print "$at(139,10432,10453)"} true;
    call $t18 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(139,10432,10453)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t19 := 32 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:42+15
    $t19 := 32;
    assume $IsValid'u64'($t19);

    // $t20 := <=($t18, $t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:39+2
    call $t20 := $Le($t18, $t19);

    // if ($t20) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    if ($t20) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    assume {:print "$at(139,10424,10510)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
L3:

    // $t21 := 15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:79+14
    assume {:print "$at(139,10494,10508)"} true;
    $t21 := 15;
    assume $IsValid'u64'($t21);

    // $t22 := error::out_of_range($t21) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:59+35
    call $t22 := $1_error_out_of_range($t21);
    if ($abort_flag) {
        assume {:print "$at(139,10474,10509)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    assume {:print "$at(139,10424,10510)"} true;
    assume {:print "$track_abort(27,0):", $t22} $t22 == $t22;

    // $t13 := move($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    $t13 := $t22;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    goto L25;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:32+7
    assume {:print "$at(139,10543,10550)"} true;
L5:

    // $t23 := string::length($t3) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:17+23
    assume {:print "$at(139,10528,10551)"} true;
    call $t23 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(139,10528,10551)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t24 := 10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:44+17
    $t24 := 10;
    assume $IsValid'u64'($t24);

    // $t25 := <=($t23, $t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:41+2
    call $t25 := $Le($t23, $t24);

    // if ($t25) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    if ($t25) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
L7:

    // goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    assume {:print "$at(139,10520,10612)"} true;
    goto L8;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
L6:

    // $t26 := 16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:83+16
    assume {:print "$at(139,10594,10610)"} true;
    $t26 := 16;
    assume $IsValid'u64'($t26);

    // $t27 := error::out_of_range($t26) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:63+37
    call $t27 := $1_error_out_of_range($t26);
    if ($abort_flag) {
        assume {:print "$at(139,10574,10611)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    assume {:print "$at(139,10520,10612)"} true;
    assume {:print "$track_abort(27,0):", $t27} $t27 == $t27;

    // $t13 := move($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    $t13 := $t27;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    goto L25;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:17+8
    assume {:print "$at(139,10630,10638)"} true;
L8:

    // $t28 := 32 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:29+12
    assume {:print "$at(139,10642,10654)"} true;
    $t28 := 32;
    assume $IsValid'u8'($t28);

    // $t29 := <=($t4, $t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:26+2
    call $t29 := $Le($t4, $t28);

    // if ($t29) goto L10 else goto L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    if ($t29) { goto L10; } else { goto L9; }

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
L10:

    // goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    assume {:print "$at(139,10622,10697)"} true;
    goto L11;

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
L9:

    // $t30 := 17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:63+19
    assume {:print "$at(139,10676,10695)"} true;
    $t30 := 17;
    assume $IsValid'u64'($t30);

    // $t31 := error::out_of_range($t30) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:43+40
    call $t31 := $1_error_out_of_range($t30);
    if ($abort_flag) {
        assume {:print "$at(139,10656,10696)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    assume {:print "$at(139,10622,10697)"} true;
    assume {:print "$track_abort(27,0):", $t31} $t31 == $t31;

    // $t13 := move($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    $t13 := $t31;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    goto L25;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:32+9
    assume {:print "$at(139,10730,10739)"} true;
L11:

    // $t32 := string::length($t5) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:17+25
    assume {:print "$at(139,10715,10740)"} true;
    call $t32 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(139,10715,10740)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t33 := 512 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:46+14
    $t33 := 512;
    assume $IsValid'u64'($t33);

    // $t34 := <=($t32, $t33) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:43+2
    call $t34 := $Le($t32, $t33);

    // if ($t34) goto L13 else goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    if ($t34) { goto L13; } else { goto L12; }

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
L13:

    // goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    assume {:print "$at(139,10707,10795)"} true;
    goto L14;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
L12:

    // $t35 := 19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:82+13
    assume {:print "$at(139,10780,10793)"} true;
    $t35 := 19;
    assume $IsValid'u64'($t35);

    // $t36 := error::out_of_range($t35) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:62+34
    call $t36 := $1_error_out_of_range($t35);
    if ($abort_flag) {
        assume {:print "$at(139,10760,10794)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t36) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    assume {:print "$at(139,10707,10795)"} true;
    assume {:print "$track_abort(27,0):", $t36} $t36 == $t36;

    // $t13 := move($t36) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    $t13 := $t36;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    goto L25;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:32+12
    assume {:print "$at(139,10828,10840)"} true;
L14:

    // $t37 := string::length($t6) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:17+28
    assume {:print "$at(139,10813,10841)"} true;
    call $t37 := $1_string_length($t6);
    if ($abort_flag) {
        assume {:print "$at(139,10813,10841)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t38 := 512 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:49+14
    $t38 := 512;
    assume $IsValid'u64'($t38);

    // $t39 := <=($t37, $t38) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:46+2
    call $t39 := $Le($t37, $t38);

    // if ($t39) goto L16 else goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    if ($t39) { goto L16; } else { goto L15; }

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
L16:

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    assume {:print "$at(139,10805,10896)"} true;
    goto L17;

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
L15:

    // $t40 := 19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:85+13
    assume {:print "$at(139,10881,10894)"} true;
    $t40 := 19;
    assume $IsValid'u64'($t40);

    // $t41 := error::out_of_range($t40) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:65+34
    call $t41 := $1_error_out_of_range($t40);
    if ($abort_flag) {
        assume {:print "$at(139,10861,10895)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    assume {:print "$at(139,10805,10896)"} true;
    assume {:print "$track_abort(27,0):", $t41} $t41 == $t41;

    // $t13 := move($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    $t13 := $t41;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    goto L25;

    // label L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:253:17+22
    assume {:print "$at(139,10914,10936)"} true;
L17:

    // $t42 := pack fungible_asset::Metadata($t2, $t3, $t4, $t5, $t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:254:13+151
    assume {:print "$at(139,10950,11101)"} true;
    $t42 := $1_fungible_asset_Metadata($t2, $t3, $t4, $t5, $t6);

    // move_to<fungible_asset::Metadata>($t42, $t17) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:253:9+7
    assume {:print "$at(139,10906,10913)"} true;
    if ($ResourceExists($1_fungible_asset_Metadata_$memory, $t17->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Metadata_$memory := $ResourceUpdate($1_fungible_asset_Metadata_$memory, $t17->$addr, $t42);
    }
    if ($abort_flag) {
        assume {:print "$at(139,10906,10913)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t43 := features::concurrent_fungible_assets_enabled() on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:219:9+46
    assume {:print "$at(139,9113,9159)"} true;
    call $t43 := $1_features_concurrent_fungible_assets_enabled();
    if ($abort_flag) {
        assume {:print "$at(139,9113,9159)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // if ($t43) goto L19 else goto L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:263:9+593
    assume {:print "$at(139,11122,11715)"} true;
    if ($t43) { goto L19; } else { goto L18; }

    // label L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:45+15
    assume {:print "$at(139,11213,11228)"} true;
L19:

    // $t44 := copy($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:45+15
    assume {:print "$at(139,11213,11228)"} true;
    $t44 := $t1;

    // $t45 := opaque begin: option::is_none<u128>($t44) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32

    // assume WellFormed($t45) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32
    assume $IsValid'bool'($t45);

    // assume Eq<bool>($t45, option::spec_is_none<u128>($t44)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32
    assume $IsEqual'bool'($t45, $1_option_spec_is_none'u128'($t44));

    // $t45 := opaque end: option::is_none<u128>($t44) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32

    // trace_local[unlimited]($t45) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:17+9
    assume {:print "$track_local(27,0,11):", $t45} $t45 == $t45;

    // if ($t45) goto L21 else goto L20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:266:26+215
    assume {:print "$at(139,11319,11534)"} true;
    if ($t45) { goto L21; } else { goto L20; }

    // label L21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;
L21:

    // $t8 := opaque begin: aggregator_v2::create_unbounded_aggregator<u128>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;

    // $t46 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    havoc $t46;

    // if ($t46) goto L27 else goto L26 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    if ($t46) { goto L27; } else { goto L26; }

    // label L27 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
L27:

    // trace_abort($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;
    assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    goto L25;

    // label L26 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
L26:

    // assume WellFormed($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u128''($t8);

    // $t8 := opaque end: aggregator_v2::create_unbounded_aggregator<u128>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44

    // goto L22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:266:26+215
    assume {:print "$at(139,11319,11534)"} true;
    goto L22;

    // label L20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:70+19
    assume {:print "$at(139,11495,11514)"} true;
L20:

    // $t47 := borrow_local($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:70+19
    assume {:print "$at(139,11495,11514)"} true;
    $t47 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t48 := opaque begin: option::extract<u128>($t47) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36

    // $t49 := read_ref($t47) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    $t49 := $Dereference($t47);

    // assume Identical($t50, option::spec_is_none<u128>($t47)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume ($t50 == $1_option_spec_is_none'u128'($Dereference($t47)));

    // if ($t50) goto L29 else goto L32 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    if ($t50) { goto L29; } else { goto L32; }

    // label L29 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
L29:

    // assume And(option::spec_is_none<u128>($t47), Eq(262145, $t13)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$at(139,11479,11515)"} true;
    assume ($1_option_spec_is_none'u128'($Dereference($t47)) && $IsEqual'num'(262145, $t13));

    // trace_abort($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$at(139,11479,11515)"} true;
    assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    goto L25;

    // label L28 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
L28:

    // $t47 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$at(139,11479,11515)"} true;
    havoc $temp_0'$1_option_Option'u128'';
    $t47 := $UpdateMutation($t47, $temp_0'$1_option_Option'u128'');

    // assume And(WellFormed($t47), Le(Len<u128>(select option::Option.vec($t47)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume ($IsValid'$1_option_Option'u128''($Dereference($t47)) && (LenVec($Dereference($t47)->$vec) <= 1));

    // assume WellFormed($t48) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume $IsValid'u128'($t48);

    // assume Eq<u128>($t48, option::spec_borrow<u128>($t49)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume $IsEqual'u128'($t48, $1_option_spec_borrow'u128'($t49));

    // assume option::spec_is_none<u128>($t47) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume $1_option_spec_is_none'u128'($Dereference($t47));

    // $t48 := opaque end: option::extract<u128>($t47) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36

    // pack_ref_deep($t47) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36

    // write_back[LocalRoot($t1)@]($t47) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    $t1 := $Dereference($t47);

    // trace_local[maximum_supply]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$track_local(27,0,1):", $t1} $t1 == $t1;

    // $t8 := opaque begin: aggregator_v2::create_aggregator<u128>($t48) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70

    // $t51 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    havoc $t51;

    // if ($t51) goto L31 else goto L30 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    if ($t51) { goto L31; } else { goto L30; }

    // label L31 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
L31:

    // trace_abort($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    assume {:print "$at(139,11446,11516)"} true;
    assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;

    // goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    goto L25;

    // label L30 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
L30:

    // assume WellFormed($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    assume {:print "$at(139,11446,11516)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u128''($t8);

    // $t8 := opaque end: aggregator_v2::create_aggregator<u128>($t48) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70

    // label L22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:265:21+22
    assume {:print "$at(139,11251,11273)"} true;
L22:

    // $t52 := pack fungible_asset::ConcurrentSupply($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:265:45+274
    assume {:print "$at(139,11275,11549)"} true;
    $t52 := $1_fungible_asset_ConcurrentSupply($t8);

    // move_to<fungible_asset::ConcurrentSupply>($t52, $t17) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:265:13+7
    if ($ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t17->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $t17->$addr, $t52);
    }
    if ($abort_flag) {
        assume {:print "$at(139,11243,11250)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // goto L23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:271:15+1
    assume {:print "$at(139,11550,11551)"} true;
    goto L23;

    // label L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:273:21+22
    assume {:print "$at(139,11589,11611)"} true;
L18:

    // $t53 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:274:26+1
    assume {:print "$at(139,11647,11648)"} true;
    $t53 := 0;
    assume $IsValid'u128'($t53);

    // $t54 := move($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:275:26+14
    assume {:print "$at(139,11675,11689)"} true;
    $t54 := $t1;

    // $t55 := pack fungible_asset::Supply($t53, $t54) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:273:45+90
    assume {:print "$at(139,11613,11703)"} true;
    $t55 := $1_fungible_asset_Supply($t53, $t54);

    // move_to<fungible_asset::Supply>($t55, $t17) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:273:13+7
    if ($ResourceExists($1_fungible_asset_Supply_$memory, $t17->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $t17->$addr, $t55);
    }
    if ($abort_flag) {
        assume {:print "$at(139,11581,11588)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // label L23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:279:55+15
    assume {:print "$at(139,11772,11787)"} true;
L23:

    // $t56 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L25 with $t13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:279:9+62
    assume {:print "$at(139,11726,11788)"} true;
    call $t56 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,11726,11788)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_return[0]($t56) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:279:9+62
    assume {:print "$track_return(27,0,0):", $t56} $t56 == $t56;

    // label L24 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
    assume {:print "$at(139,11793,11794)"} true;
L24:

    // return $t56 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
    assume {:print "$at(139,11793,11794)"} true;
    $ret0 := $t56;
    return;

    // label L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
L25:

    // abort($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
    assume {:print "$at(139,11793,11794)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

    // label L32 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L32:

    // drop($t47) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L28 at <internal>:1:1+10
    goto L28;

}

// fun fungible_asset::asset_metadata [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:693:5+91
procedure {:inline 1} $1_fungible_asset_asset_metadata(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:693:5+1
    assume {:print "$at(139,29207,29208)"} true;
    assume {:print "$track_local(27,3,0):", $t0} $t0 == $t0;

    // $t1 := get_field<fungible_asset::FungibleAsset>.metadata($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:694:9+11
    assume {:print "$at(139,29281,29292)"} true;
    $t1 := $t0->$metadata;

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:694:9+11
    assume {:print "$track_return(27,3,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:695:5+1
    assume {:print "$at(139,29297,29298)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:695:5+1
    assume {:print "$at(139,29297,29298)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::balance<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:580:5+639
procedure {:inline 1} $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: $1_fungible_asset_FungibleStore;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t19: $1_fungible_asset_ConcurrentFungibleBalance;
    var $t20: $1_aggregator_v2_Aggregator'u64';
    var $t21: bool;
    var $t22: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:580:5+1
    assume {:print "$at(139,23999,24000)"} true;
    assume {:print "$track_local(27,4,0):", $t0} $t0 == $t0;

    // $t7 := object::object_address<#0>($t0) on_abort goto L13 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:581:26+30
    assume {:print "$at(139,24126,24156)"} true;
    call $t7 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,24126,24156)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_local[store_addr]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:581:13+10
    assume {:print "$track_local(27,4,4):", $t7} $t7 == $t7;

    // $t9 := exists<fungible_asset::FungibleStore>($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:553:9+6
    assume {:print "$at(139,23149,23155)"} true;
    $t9 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:583:55+6
    assume {:print "$at(139,24259,24265)"} true;
L1:

    // $t10 := object::object_address<#0>($t0) on_abort goto L13 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:26+29
    assume {:print "$at(139,47337,47366)"} true;
    call $t10 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,47337,47366)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_local[store_addr#208]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:13+10
    assume {:print "$track_local(27,4,5):", $t10} $t10 == $t10;

    // $t11 := exists<fungible_asset::FungibleStore>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:17+6
    assume {:print "$at(139,47384,47390)"} true;
    $t11 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t10);

    // if ($t11) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
L3:

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
L2:

    // $t12 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
    assume {:print "$at(139,47436,47461)"} true;
    $t12 := 23;
    assume $IsValid'u64'($t12);

    // $t13 := error::not_found($t12) on_abort goto L13 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:52+43
    call $t13 := $1_error_not_found($t12);
    if ($abort_flag) {
        assume {:print "$at(139,47419,47462)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_abort($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    assume {:print "$track_abort(27,4):", $t13} $t13 == $t13;

    // $t8 := move($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    $t8 := $t13;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    goto L13;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:38+10
    assume {:print "$at(139,47502,47512)"} true;
L4:

    // $t14 := get_global<fungible_asset::FungibleStore>($t10) on_abort goto L13 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:9+13
    assume {:print "$at(139,47473,47486)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(139,47473,47486)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // $t15 := get_field<fungible_asset::FungibleStore>.balance($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:583:33+37
    assume {:print "$at(139,24237,24274)"} true;
    $t15 := $t14->$balance;

    // trace_local[store_balance]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:583:17+13
    assume {:print "$track_local(27,4,6):", $t15} $t15 == $t15;

    // $t16 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:34+1
    assume {:print "$at(139,24309,24310)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := ==($t15, $t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:31+2
    $t17 := $IsEqual'u64'($t15, $t16);

    // if ($t17) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    if ($t17) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:81+10
L6:

    // $t1 := exists<fungible_asset::ConcurrentFungibleBalance>($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:559:9+6
    assume {:print "$at(139,23404,23410)"} true;
    $t1 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t7);

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    assume {:print "$at(139,24292,24367)"} true;
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
L5:

    // $t18 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    assume {:print "$at(139,24292,24367)"} true;
    $t18 := false;
    assume $IsValid'bool'($t18);

    // $t1 := $t18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    $t1 := $t18;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
L7:

    // if ($t1) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
    assume {:print "$at(139,24288,24591)"} true;
    if ($t1) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:585:81+10
    assume {:print "$at(139,24451,24461)"} true;
L9:

    // $t19 := get_global<fungible_asset::ConcurrentFungibleBalance>($t7) on_abort goto L13 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:585:40+13
    assume {:print "$at(139,24410,24423)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(139,24410,24423)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // $t20 := get_field<fungible_asset::ConcurrentFungibleBalance>.balance($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:37+25
    assume {:print "$at(139,24500,24525)"} true;
    $t20 := $t19->$balance;

    // $t2 := opaque begin: aggregator_v2::read<u64>($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46

    // $t21 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    havoc $t21;

    // if ($t21) goto L15 else goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    if ($t21) { goto L15; } else { goto L14; }

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
L15:

    // trace_abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    assume {:print "$at(139,24480,24526)"} true;
    assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    goto L13;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
L14:

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    assume {:print "$at(139,24480,24526)"} true;
    assume $IsValid'u64'($t2);

    // $t2 := opaque end: aggregator_v2::read<u64>($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
    assume {:print "$at(139,24288,24591)"} true;
    goto L10;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:588:17+13
    assume {:print "$at(139,24564,24577)"} true;
L8:

    // $t2 := $t15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
    assume {:print "$at(139,24288,24591)"} true;
    $t2 := $t15;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
L10:

    // $t3 := $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    $t3 := $t2;

    // goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    goto L11;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:591:13+1
    assume {:print "$at(139,24621,24622)"} true;
L0:

    // $t22 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:591:13+1
    assume {:print "$at(139,24621,24622)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t3 := $t22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    $t3 := $t22;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
L11:

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    assume {:print "$track_return(27,4,0):", $t3} $t3 == $t3;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
    assume {:print "$at(139,24637,24638)"} true;
L12:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
    assume {:print "$at(139,24637,24638)"} true;
    $ret0 := $t3;
    return;

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
L13:

    // abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
    assume {:print "$at(139,24637,24638)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun fungible_asset::burn_internal [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:883:5+256
procedure {:inline 1} $1_fungible_asset_burn_internal(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: int;
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:883:5+1
    assume {:print "$at(139,36700,36701)"} true;
    assume {:print "$track_local(27,7,0):", $t0} $t0 == $t0;

    // ($t3, $t4) := unpack fungible_asset::FungibleAsset($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:886:13+66
    assume {:print "$at(139,36819,36885)"} true;
    $t3 := $t0->$metadata;
    $t4 := $t0->$amount;

    // trace_local[amount]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:888:13+6
    assume {:print "$at(139,36869,36875)"} true;
    assume {:print "$track_local(27,7,1):", $t4} $t4 == $t4;

    // trace_local[metadata]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:887:13+8
    assume {:print "$at(139,36847,36855)"} true;
    assume {:print "$track_local(27,7,2):", $t3} $t3 == $t3;

    // fungible_asset::decrease_supply<fungible_asset::Metadata>($t3, $t4) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:890:9+34
    assume {:print "$at(139,36900,36934)"} true;
    call $1_fungible_asset_decrease_supply'$1_fungible_asset_Metadata'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(139,36900,36934)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:891:9+6
    assume {:print "$at(139,36944,36950)"} true;
    assume {:print "$track_return(27,7,0):", $t4} $t4 == $t4;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:892:5+1
    assume {:print "$at(139,36955,36956)"} true;
L1:

    // return $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:892:5+1
    assume {:print "$at(139,36955,36956)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:892:5+1
L2:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:892:5+1
    assume {:print "$at(139,36955,36956)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::create_store<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:731:5+765
procedure {:inline 1} $1_fungible_asset_create_store'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: $signer;
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: bool;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: bool;
    var $t11: bool;
    var $t12: $1_aggregator_v2_Aggregator'u64';
    var $t13: bool;
    var $t14: $1_fungible_asset_ConcurrentFungibleBalance;
    var $t15: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:731:5+1
    assume {:print "$at(139,30619,30620)"} true;
    assume {:print "$track_local(27,9,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:731:5+1
    assume {:print "$track_local(27,9,1):", $t1} $t1 == $t1;

    // $t4 := object::generate_signer($t0) on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:735:26+40
    assume {:print "$at(139,30779,30819)"} true;
    call $t4 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(139,30779,30819)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[store_obj]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:735:13+9
    assume {:print "$track_local(27,9,3):", $t4} $t4 == $t4;

    // $t6 := object::convert<#0, fungible_asset::Metadata>($t1) on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:737:23+25
    assume {:print "$at(139,30886,30911)"} true;
    call $t6 := $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(139,30886,30911)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t7 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:738:22+1
    assume {:print "$at(139,30934,30935)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:739:21+5
    assume {:print "$at(139,30957,30962)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t9 := pack fungible_asset::FungibleStore($t6, $t7, $t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:736:28+125
    assume {:print "$at(139,30848,30973)"} true;
    $t9 := $1_fungible_asset_FungibleStore($t6, $t7, $t8);

    // move_to<fungible_asset::FungibleStore>($t9, $t4) on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:736:9+7
    if ($ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $t4->$addr, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(139,30829,30836)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t10 := fungible_asset::is_untransferable<#0>($t1) on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:742:13+27
    assume {:print "$at(139,30989,31016)"} true;
    call $t10 := $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(139,30989,31016)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t10) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:742:9+101
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:743:40+15
    assume {:print "$at(139,31059,31074)"} true;
L1:

    // object::set_untransferable($t0) on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:743:13+43
    assume {:print "$at(139,31032,31075)"} true;
    call $1_object_set_untransferable($t0);
    if ($abort_flag) {
        assume {:print "$at(139,31032,31075)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:227:9+58
    assume {:print "$at(139,9372,9430)"} true;
L0:

    // $t11 := features::default_to_concurrent_fungible_balance_enabled() on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:227:9+58
    assume {:print "$at(139,9372,9430)"} true;
    call $t11 := $1_features_default_to_concurrent_fungible_balance_enabled();
    if ($abort_flag) {
        assume {:print "$at(139,9372,9430)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t11) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:746:9+203
    assume {:print "$at(139,31097,31300)"} true;
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:747:21+9
    assume {:print "$at(139,31165,31174)"} true;
L3:

    // $t12 := opaque begin: aggregator_v2::create_unbounded_aggregator<u64>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    assume {:print "$at(139,31229,31273)"} true;

    // $t13 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    havoc $t13;

    // if ($t13) goto L8 else goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    if ($t13) { goto L8; } else { goto L7; }

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
L8:

    // trace_abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    assume {:print "$at(139,31229,31273)"} true;
    assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;

    // goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    goto L6;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
L7:

    // assume WellFormed($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    assume {:print "$at(139,31229,31273)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($t12);

    // $t12 := opaque end: aggregator_v2::create_unbounded_aggregator<u64>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44

    // $t14 := pack fungible_asset::ConcurrentFungibleBalance($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:747:32+112
    assume {:print "$at(139,31176,31288)"} true;
    $t14 := $1_fungible_asset_ConcurrentFungibleBalance($t12);

    // move_to<fungible_asset::ConcurrentFungibleBalance>($t14, $t4) on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:747:13+7
    if ($ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr, $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(139,31157,31164)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:749:15+1
    assume {:print "$at(139,31289,31290)"} true;
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:746:9+203
    assume {:print "$at(139,31097,31300)"} true;
L2:

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:752:60+15
    assume {:print "$at(139,31362,31377)"} true;
L4:

    // $t15 := object::object_from_constructor_ref<fungible_asset::FungibleStore>($t0) on_abort goto L6 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:752:9+67
    assume {:print "$at(139,31311,31378)"} true;
    call $t15 := $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,31311,31378)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_return[0]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:752:9+67
    assume {:print "$track_return(27,9,0):", $t15} $t15 == $t15;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
    assume {:print "$at(139,31383,31384)"} true;
L5:

    // return $t15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
    assume {:print "$at(139,31383,31384)"} true;
    $ret0 := $t15;
    return;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
L6:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
    assume {:print "$at(139,31383,31384)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::decrease_supply<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1095:5+1053
procedure {:inline 1} $1_fungible_asset_decrease_supply'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_fungible_asset_Supply);
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_ConcurrentSupply);
    var $t10: $Mutation ($1_aggregator_v2_Aggregator'u128');
    var $t11: int;
    var $t12: bool;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($1_fungible_asset_Supply);
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: $Mutation (int);
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u128'': $1_aggregator_v2_Aggregator'u128';
    var $temp_0'$1_fungible_asset_Supply': $1_fungible_asset_Supply;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1095:5+1
    assume {:print "$at(139,45714,45715)"} true;
    assume {:print "$track_local(27,11,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1095:5+1
    assume {:print "$track_local(27,11,1):", $t1} $t1 == $t1;

    // $t4 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1096:23+1
    assume {:print "$at(139,45835,45836)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t1, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1096:20+2
    $t5 := $IsEqual'u64'($t1, $t4);

    // if ($t5) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1096:9+47
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1097:13+6
    assume {:print "$at(139,45852,45858)"} true;
L1:

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1097:13+6
    assume {:print "$at(139,45852,45858)"} true;
    goto L16;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1099:55+8
    assume {:print "$at(139,45924,45932)"} true;
L0:

    // $t6 := object::object_address<#0>($t0) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1099:32+32
    assume {:print "$at(139,45901,45933)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,45901,45933)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_local[metadata_address]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1099:13+16
    assume {:print "$track_local(27,11,2):", $t6} $t6 == $t6;

    // $t8 := exists<fungible_asset::ConcurrentSupply>($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1101:13+6
    assume {:print "$at(139,45948,45954)"} true;
    $t8 := $ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6);

    // if ($t8) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1101:9+817
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1102:62+16
    assume {:print "$at(139,46055,46071)"} true;
L3:

    // $t9 := borrow_global<fungible_asset::ConcurrentSupply>($t6) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1102:26+17
    assume {:print "$at(139,46019,46036)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(139,46019,46036)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t10 := borrow_field<fungible_asset::ConcurrentSupply>.current($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:40+19
    assume {:print "$at(139,46135,46154)"} true;
    $t10 := $ChildMutation($t9, 0, $Dereference($t9)->$current);

    // $t11 := (u128)($t1) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:61+16
    call $t11 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,46156,46172)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t12 := opaque begin: aggregator_v2::try_sub<u128>($t10, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61

    // $t13 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    havoc $t13;

    // if ($t13) goto L20 else goto L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    if ($t13) { goto L20; } else { goto L18; }

    // label L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
L19:

    // trace_abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    assume {:print "$at(139,46112,46173)"} true;
    assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    goto L17;

    // label L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
L18:

    // $t10 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    assume {:print "$at(139,46112,46173)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u128'';
    $t10 := $UpdateMutation($t10, $temp_0'$1_aggregator_v2_Aggregator'u128'');

    // assume WellFormed($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    assume $IsValid'$1_aggregator_v2_Aggregator'u128''($Dereference($t10));

    // assume WellFormed($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    assume $IsValid'bool'($t12);

    // $t12 := opaque end: aggregator_v2::try_sub<u128>($t10, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61

    // write_back[Reference($t9).current (aggregator_v2::Aggregator<u128>)]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_ConcurrentSupply'_current($Dereference($t9), $Dereference($t10)));

    // write_back[fungible_asset::ConcurrentSupply@]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1105:17+61
    $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // if ($t12) goto L5 else goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1104:13+156
    assume {:print "$at(139,46087,46243)"} true;
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1104:13+156
L5:

    // goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1104:13+156
    assume {:print "$at(139,46087,46243)"} true;
    goto L6;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1106:37+17
    assume {:print "$at(139,46211,46228)"} true;
L4:

    // $t14 := 20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1106:37+17
    assume {:print "$at(139,46211,46228)"} true;
    $t14 := 20;
    assume $IsValid'u64'($t14);

    // $t15 := error::out_of_range($t14) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1106:17+38
    call $t15 := $1_error_out_of_range($t14);
    if ($abort_flag) {
        assume {:print "$at(139,46191,46229)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1104:13+156
    assume {:print "$at(139,46087,46243)"} true;
    assume {:print "$track_abort(27,11):", $t15} $t15 == $t15;

    // $t7 := move($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1104:13+156
    $t7 := $t15;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1104:13+156
    goto L17;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1101:9+817
    assume {:print "$at(139,45944,46761)"} true;
L6:

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1101:9+817
    assume {:print "$at(139,45944,46761)"} true;
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1108:35+16
    assume {:print "$at(139,46279,46295)"} true;
L2:

    // $t16 := exists<fungible_asset::Supply>($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1108:20+6
    assume {:print "$at(139,46264,46270)"} true;
    $t16 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t16) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1108:16+501
    if ($t16) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:36+16
    assume {:print "$at(139,46335,46351)"} true;
L9:

    // $t17 := exists<fungible_asset::Supply>($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:21+6
    assume {:print "$at(139,46320,46326)"} true;
    $t17 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t17) goto L11 else goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:13+78
    if ($t17) { goto L11; } else { goto L10; }

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:13+78
L11:

    // goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:13+78
    assume {:print "$at(139,46312,46390)"} true;
    goto L12;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:72+17
L10:

    // $t18 := 21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:72+17
    assume {:print "$at(139,46371,46388)"} true;
    $t18 := 21;
    assume $IsValid'u64'($t18);

    // $t19 := error::not_found($t18) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:55+35
    call $t19 := $1_error_not_found($t18);
    if ($abort_flag) {
        assume {:print "$at(139,46354,46389)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:13+78
    assume {:print "$at(139,46312,46390)"} true;
    assume {:print "$track_abort(27,11):", $t19} $t19 == $t19;

    // $t7 := move($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:13+78
    $t7 := $t19;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1109:13+78
    goto L17;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1110:52+16
    assume {:print "$at(139,46443,46459)"} true;
L12:

    // $t20 := borrow_global<fungible_asset::Supply>($t6) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1110:26+17
    assume {:print "$at(139,46417,46434)"} true;
    if (!$ResourceExists($1_fungible_asset_Supply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_Supply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(139,46417,46434)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_local[supply#1]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1110:17+6
    $temp_0'$1_fungible_asset_Supply' := $Dereference($t20);
    assume {:print "$track_local(27,11,3):", $temp_0'$1_fungible_asset_Supply'} $temp_0'$1_fungible_asset_Supply' == $temp_0'$1_fungible_asset_Supply';

    // $t21 := get_field<fungible_asset::Supply>.current($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1112:17+14
    assume {:print "$at(139,46499,46513)"} true;
    $t21 := $Dereference($t20)->$current;

    // $t22 := (u128)($t1) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1112:35+16
    call $t22 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,46517,46533)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t23 := >=($t21, $t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1112:32+2
    call $t23 := $Ge($t21, $t22);

    // if ($t23) goto L14 else goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
    assume {:print "$at(139,46474,46604)"} true;
    if ($t23) { goto L14; } else { goto L13; }

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
L14:

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
    assume {:print "$at(139,46474,46604)"} true;
    goto L15;

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
L13:

    // pack_ref_deep($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
    assume {:print "$at(139,46474,46604)"} true;

    // drop($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130

    // $t24 := 20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1113:38+17
    assume {:print "$at(139,46572,46589)"} true;
    $t24 := 20;
    assume $IsValid'u64'($t24);

    // $t25 := error::invalid_state($t24) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1113:17+39
    call $t25 := $1_error_invalid_state($t24);
    if ($abort_flag) {
        assume {:print "$at(139,46551,46590)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
    assume {:print "$at(139,46474,46604)"} true;
    assume {:print "$track_abort(27,11):", $t25} $t25 == $t25;

    // $t7 := move($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
    $t7 := $t25;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1111:13+130
    goto L17;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1117:45+17
    assume {:print "$at(139,46731,46748)"} true;
L8:

    // $t26 := 21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1117:45+17
    assume {:print "$at(139,46731,46748)"} true;
    $t26 := 21;
    assume $IsValid'u64'($t26);

    // $t27 := error::not_found($t26) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1117:28+35
    call $t27 := $1_error_not_found($t26);
    if ($abort_flag) {
        assume {:print "$at(139,46714,46749)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1117:13+51
    assume {:print "$at(139,46699,46750)"} true;
    assume {:print "$track_abort(27,11):", $t27} $t27 == $t27;

    // $t7 := move($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1117:13+51
    $t7 := $t27;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1117:13+51
    goto L17;

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:30+6
    assume {:print "$at(139,46635,46641)"} true;
L15:

    // $t28 := get_field<fungible_asset::Supply>.current($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:30+14
    assume {:print "$at(139,46635,46649)"} true;
    $t28 := $Dereference($t20)->$current;

    // $t29 := (u128)($t1) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:47+16
    call $t29 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,46652,46668)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t30 := -($t28, $t29) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:45+1
    call $t30 := $Sub($t28, $t29);
    if ($abort_flag) {
        assume {:print "$at(139,46650,46651)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,11):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t31 := borrow_field<fungible_asset::Supply>.current($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:13+14
    $t31 := $ChildMutation($t20, 0, $Dereference($t20)->$current);

    // write_ref($t31, $t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:13+50
    $t31 := $UpdateMutation($t31, $t30);

    // write_back[Reference($t20).current (u128)]($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:13+50
    $t20 := $UpdateMutation($t20, $Update'$1_fungible_asset_Supply'_current($Dereference($t20), $Dereference($t31)));

    // pack_ref_deep($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:13+50

    // write_back[fungible_asset::Supply@]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1115:13+50
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1101:9+817
    assume {:print "$at(139,45944,46761)"} true;
L7:

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1119:5+1
    assume {:print "$at(139,46766,46767)"} true;
L16:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1119:5+1
    assume {:print "$at(139,46766,46767)"} true;
    return;

    // label L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1119:5+1
L17:

    // abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1119:5+1
    assume {:print "$at(139,46766,46767)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

    // label L20 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L20:

    // drop($t9) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L19 at <internal>:1:1+10
    goto L19;

}

// fun fungible_asset::deposit_dispatch_function<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:634:5+458
procedure {:inline 1} $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: $1_option_Option'$1_function_info_FunctionInfo';
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: $1_object_Object'$1_fungible_asset_Metadata';
    var $t11: int;
    var $t12: bool;
    var $t13: $1_fungible_asset_DispatchFunctionStore;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:634:5+1
    assume {:print "$at(139,26470,26471)"} true;
    assume {:print "$track_local(27,13,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:26+29
    assume {:print "$at(139,47337,47366)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,47337,47366)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[store_addr#213]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:13+10
    assume {:print "$track_local(27,13,3):", $t4} $t4 == $t4;

    // $t6 := exists<fungible_asset::FungibleStore>($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:17+6
    assume {:print "$at(139,47384,47390)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
L0:

    // $t7 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
    assume {:print "$at(139,47436,47461)"} true;
    $t7 := 23;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:52+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(139,47419,47462)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    assume {:print "$track_abort(27,13):", $t8} $t8 == $t8;

    // $t5 := move($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    $t5 := $t8;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:38+10
    assume {:print "$at(139,47502,47512)"} true;
L2:

    // $t9 := get_global<fungible_asset::FungibleStore>($t4) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:9+13
    assume {:print "$at(139,47473,47486)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,47473,47486)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::FungibleStore>.metadata($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:636:52+18
    assume {:print "$at(139,26708,26726)"} true;
    $t10 := $t9->$metadata;

    // $t11 := object::object_address<fungible_asset::Metadata>($t10) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:636:29+42
    call $t11 := $1_object_object_address'$1_fungible_asset_Metadata'($t10);
    if ($abort_flag) {
        assume {:print "$at(139,26685,26727)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:636:13+13
    assume {:print "$track_local(27,13,2):", $t11} $t11 == $t11;

    // $t12 := exists<fungible_asset::DispatchFunctionStore>($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:12+6
    assume {:print "$at(139,26740,26746)"} true;
    $t12 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:638:50+13
    assume {:print "$at(139,26837,26850)"} true;
L4:

    // $t13 := get_global<fungible_asset::DispatchFunctionStore>($t11) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:638:13+13
    assume {:print "$at(139,26800,26813)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t11);
    }
    if ($abort_flag) {
        assume {:print "$at(139,26800,26813)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t1 := get_field<fungible_asset::DispatchFunctionStore>.deposit_function($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:638:13+68
    $t1 := $t13->$deposit_function;

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    assume {:print "$at(139,26737,26922)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume {:print "$at(139,26898,26912)"} true;
L3:

    // $t1 := opaque begin: option::none<function_info::FunctionInfo>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume {:print "$at(139,26898,26912)"} true;

    // assume And(WellFormed($t1), Le(Len<function_info::FunctionInfo>(select option::Option.vec($t1)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t1) && (LenVec($t1->$vec) <= 1));

    // assume Eq<option::Option<function_info::FunctionInfo>>($t1, option::spec_none<function_info::FunctionInfo>()) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t1, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t1 := opaque end: option::none<function_info::FunctionInfo>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    assume {:print "$at(139,26737,26922)"} true;
L5:

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    assume {:print "$at(139,26737,26922)"} true;
    assume {:print "$track_return(27,13,0):", $t1} $t1 == $t1;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
    assume {:print "$at(139,26927,26928)"} true;
L6:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
    assume {:print "$at(139,26927,26928)"} true;
    $ret0 := $t1;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
L7:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
    assume {:print "$at(139,26927,26928)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_internal [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:5+886
procedure {:inline 1} $1_fungible_asset_deposit_internal(_$t0: int, _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: $Mutation ($1_fungible_asset_FungibleStore);
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: $Mutation ($1_fungible_asset_FungibleStore);
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: bool;
    var $t23: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t24: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t25: int;
    var $t26: int;
    var $t27: $Mutation (int);
    var $t28: $1_fungible_asset_Deposit;
    var $t0: int;
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:5+1
    assume {:print "$at(139,42417,42418)"} true;
    assume {:print "$track_local(27,14,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:5+1
    assume {:print "$track_local(27,14,1):", $t1} $t1 == $t1;

    // ($t6, $t7) := unpack fungible_asset::FungibleAsset($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1023:13+34
    assume {:print "$at(139,42557,42591)"} true;
    $t6 := $t1->$metadata;
    $t7 := $t1->$amount;

    // trace_local[amount]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1023:39+6
    assume {:print "$track_local(27,14,3):", $t7} $t7 == $t7;

    // trace_local[metadata]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1023:29+8
    assume {:print "$track_local(27,14,4):", $t6} $t6 == $t6;

    // $t8 := exists<fungible_asset::FungibleStore>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:17+6
    assume {:print "$at(139,42614,42620)"} true;
    $t8 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:9+87
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:9+87
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:9+87
    assume {:print "$at(139,42606,42693)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:69+25
L0:

    // $t9 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:69+25
    assume {:print "$at(139,42666,42691)"} true;
    $t9 := 23;
    assume $IsValid'u64'($t9);

    // $t10 := error::not_found($t9) on_abort goto L15 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:52+43
    call $t10 := $1_error_not_found($t9);
    if ($abort_flag) {
        assume {:print "$at(139,42649,42692)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // trace_abort($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:9+87
    assume {:print "$at(139,42606,42693)"} true;
    assume {:print "$track_abort(27,14):", $t10} $t10 == $t10;

    // $t11 := move($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:9+87
    $t11 := $t10;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:9+87
    goto L15;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1025:54+10
    assume {:print "$at(139,42748,42758)"} true;
L2:

    // $t12 := borrow_global<fungible_asset::FungibleStore>($t0) on_abort goto L15 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1025:21+17
    assume {:print "$at(139,42715,42732)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,42715,42732)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // trace_local[store]($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1025:13+5
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t12);
    assume {:print "$track_local(27,14,5):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t13 := get_field<fungible_asset::FungibleStore>.metadata($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:29+14
    assume {:print "$at(139,42789,42803)"} true;
    $t13 := $Dereference($t12)->$metadata;

    // $t14 := ==($t6, $t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:26+2
    $t14 := $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t6, $t13);

    // if ($t14) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
    if ($t14) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
    assume {:print "$at(139,42769,42865)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
L3:

    // drop($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
    assume {:print "$at(139,42769,42865)"} true;

    // $t15 := 11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:69+34
    $t15 := 11;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L15 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:45+59
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(139,42805,42864)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // trace_abort($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
    assume {:print "$at(139,42769,42865)"} true;
    assume {:print "$track_abort(27,14):", $t16} $t16 == $t16;

    // $t11 := move($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
    $t11 := $t16;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1026:9+96
    goto L15;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:13+6
    assume {:print "$at(139,42880,42886)"} true;
L5:

    // $t17 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:23+1
    assume {:print "$at(139,42890,42891)"} true;
    $t17 := 0;
    assume $IsValid'u64'($t17);

    // $t18 := ==($t7, $t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:20+2
    $t18 := $IsEqual'u64'($t7, $t17);

    // if ($t18) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:9+23
    if ($t18) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:26+6
L7:

    // drop($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:26+6
    assume {:print "$at(139,42893,42899)"} true;

    // goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:26+6
    goto L14;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+5
    assume {:print "$at(139,42914,42919)"} true;
L6:

    // $t19 := get_field<fungible_asset::FungibleStore>.balance($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+13
    assume {:print "$at(139,42914,42927)"} true;
    $t19 := $Dereference($t12)->$balance;

    // $t20 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:30+1
    $t20 := 0;
    assume $IsValid'u64'($t20);

    // $t21 := ==($t19, $t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:27+2
    $t21 := $IsEqual'u64'($t19, $t20);

    // if ($t21) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+75
    if ($t21) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:77+10
L9:

    // $t2 := exists<fungible_asset::ConcurrentFungibleBalance>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:559:9+6
    assume {:print "$at(139,23404,23410)"} true;
    $t2 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+75
    assume {:print "$at(139,42914,42989)"} true;
    goto L10;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+75
L8:

    // $t22 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+75
    assume {:print "$at(139,42914,42989)"} true;
    $t22 := false;
    assume $IsValid'bool'($t22);

    // $t2 := $t22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+75
    $t2 := $t22;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:13+75
L10:

    // if ($t2) goto L12 else goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1030:9+325
    assume {:print "$at(139,42910,43235)"} true;
    if ($t2) { goto L12; } else { goto L11; }

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1031:13+79
    assume {:print "$at(139,43005,43084)"} true;
L12:

    // drop($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1031:13+79
    assume {:print "$at(139,43005,43084)"} true;

    // $t23 := borrow_global<fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L15 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1031:36+17
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,43028,43045)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // $t24 := borrow_field<fungible_asset::ConcurrentFungibleBalance>.balance($t23) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1032:32+29
    assume {:print "$at(139,43117,43146)"} true;
    $t24 := $ChildMutation($t23, 0, $Dereference($t23)->$balance);

    // aggregator_v2::add<u64>($t24, $t7) on_abort goto L15 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1032:13+57
    call $t24 := $1_aggregator_v2_add'u64'($t24, $t7);
    if ($abort_flag) {
        assume {:print "$at(139,43098,43155)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // write_back[Reference($t23).balance (aggregator_v2::Aggregator<u64>)]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1032:13+57
    $t23 := $UpdateMutation($t23, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t23), $Dereference($t24)));

    // write_back[fungible_asset::ConcurrentFungibleBalance@]($t23) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1032:13+57
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t23),
        $Dereference($t23));

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1032:70+1
    goto L13;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1034:29+5
    assume {:print "$at(139,43202,43207)"} true;
L11:

    // $t25 := get_field<fungible_asset::FungibleStore>.balance($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1034:29+13
    assume {:print "$at(139,43202,43215)"} true;
    $t25 := $Dereference($t12)->$balance;

    // $t26 := +($t25, $t7) on_abort goto L15 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1034:43+1
    call $t26 := $AddU64($t25, $t7);
    if ($abort_flag) {
        assume {:print "$at(139,43216,43217)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // $t27 := borrow_field<fungible_asset::FungibleStore>.balance($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1034:13+13
    $t27 := $ChildMutation($t12, 1, $Dereference($t12)->$balance);

    // write_ref($t27, $t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1034:13+38
    $t27 := $UpdateMutation($t27, $t26);

    // write_back[Reference($t12).balance (u64)]($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1034:13+38
    $t12 := $UpdateMutation($t12, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t12), $Dereference($t27)));

    // write_back[fungible_asset::FungibleStore@]($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1034:13+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1037:38+10
    assume {:print "$at(139,43275,43285)"} true;
L13:

    // $t28 := pack fungible_asset::Deposit($t0, $t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1037:21+37
    assume {:print "$at(139,43258,43295)"} true;
    $t28 := $1_fungible_asset_Deposit($t0, $t7);

    // opaque begin: event::emit<fungible_asset::Deposit>($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1037:9+50

    // opaque end: event::emit<fungible_asset::Deposit>($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1037:9+50

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1038:5+1
    assume {:print "$at(139,43302,43303)"} true;
L14:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1038:5+1
    assume {:print "$at(139,43302,43303)"} true;
    return;

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1038:5+1
L15:

    // abort($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1038:5+1
    assume {:print "$at(139,43302,43303)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_sanity_check<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:807:5+474
procedure {:inline 1} $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: bool) returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_fungible_asset_FungibleStore;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: $1_fungible_asset_FungibleStore;
    var $t11: bool;
    var $t12: bool;
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:807:5+1
    assume {:print "$at(139,33806,33807)"} true;
    assume {:print "$track_local(27,15,0):", $t0} $t0 == $t0;

    // trace_local[abort_on_dispatch]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:807:5+1
    assume {:print "$track_local(27,15,1):", $t1} $t1 == $t1;

    // $t5 := object::object_address<#0>($t0) on_abort goto L13 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:26+29
    assume {:print "$at(139,47337,47366)"} true;
    call $t5 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,47337,47366)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_local[store_addr#216]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:13+10
    assume {:print "$track_local(27,15,4):", $t5} $t5 == $t5;

    // $t7 := exists<fungible_asset::FungibleStore>($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:17+6
    assume {:print "$at(139,47384,47390)"} true;
    $t7 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5);

    // if ($t7) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
L0:

    // $t8 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
    assume {:print "$at(139,47436,47461)"} true;
    $t8 := 23;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L13 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:52+43
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(139,47419,47462)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    assume {:print "$track_abort(27,15):", $t9} $t9 == $t9;

    // $t6 := move($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    $t6 := $t9;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    goto L13;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:38+10
    assume {:print "$at(139,47502,47512)"} true;
L2:

    // $t10 := get_global<fungible_asset::FungibleStore>($t5) on_abort goto L13 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:9+13
    assume {:print "$at(139,47473,47486)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(139,47473,47486)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_local[fa_store]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:811:13+8
    assume {:print "$at(139,33971,33979)"} true;
    assume {:print "$track_local(27,15,3):", $t10} $t10 == $t10;

    // $t11 := !($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+1
    assume {:print "$at(139,34042,34043)"} true;
    call $t11 := $Not($t1);

    // if ($t11) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
L4:

    // $t12 := true at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    assume {:print "$at(139,34042,34113)"} true;
    $t12 := true;
    assume $IsValid'bool'($t12);

    // $t2 := $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    $t2 := $t12;

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:66+8
L3:

    // $t13 := get_field<fungible_asset::FungibleStore>.metadata($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:66+17
    assume {:print "$at(139,34095,34112)"} true;
    $t13 := $t10->$metadata;

    // $t14 := fungible_asset::has_deposit_dispatch_function($t13) on_abort goto L13 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:36+48
    call $t14 := $1_fungible_asset_has_deposit_dispatch_function($t13);
    if ($abort_flag) {
        assume {:print "$at(139,34065,34113)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t2 := !($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:35+1
    call $t2 := $Not($t14);

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
L5:

    // if ($t2) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    assume {:print "$at(139,34021,34194)"} true;
    if ($t2) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
L7:

    // goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    assume {:print "$at(139,34021,34194)"} true;
    goto L8;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
L6:

    // $t15 := 28 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:814:37+32
    assume {:print "$at(139,34151,34183)"} true;
    $t15 := 28;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L13 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:814:13+57
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(139,34127,34184)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    assume {:print "$at(139,34021,34194)"} true;
    assume {:print "$track_abort(27,15):", $t16} $t16 == $t16;

    // $t6 := move($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    $t6 := $t16;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    goto L13;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:18+8
    assume {:print "$at(139,34213,34221)"} true;
L8:

    // $t17 := get_field<fungible_asset::FungibleStore>.frozen($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:18+15
    assume {:print "$at(139,34213,34228)"} true;
    $t17 := $t10->$frozen;

    // $t18 := !($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:17+1
    call $t18 := $Not($t17);

    // if ($t18) goto L10 else goto L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    if ($t18) { goto L10; } else { goto L9; }

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
L10:

    // goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    assume {:print "$at(139,34204,34273)"} true;
    goto L11;

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:60+16
L9:

    // $t19 := 3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:60+16
    assume {:print "$at(139,34255,34271)"} true;
    $t19 := 3;
    assume $IsValid'u64'($t19);

    // $t20 := error::permission_denied($t19) on_abort goto L13 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:35+42
    call $t20 := $1_error_permission_denied($t19);
    if ($abort_flag) {
        assume {:print "$at(139,34230,34272)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    assume {:print "$at(139,34204,34273)"} true;
    assume {:print "$track_abort(27,15):", $t20} $t20 == $t20;

    // $t6 := move($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    $t6 := $t20;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    goto L13;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:78+1
L11:

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
    assume {:print "$at(139,34279,34280)"} true;
L12:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
    assume {:print "$at(139,34279,34280)"} true;
    return;

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
L13:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
    assume {:print "$at(139,34279,34280)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_burn_ref [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:452:5+195
procedure {:inline 1} $1_fungible_asset_generate_burn_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_BurnRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_BurnRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:452:5+1
    assume {:print "$at(139,18874,18875)"} true;
    assume {:print "$track_local(27,22,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:453:24+62
    assume {:print "$at(139,18971,19033)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,18971,19033)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::BurnRef($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:454:9+20
    assume {:print "$at(139,19043,19063)"} true;
    $t3 := $1_fungible_asset_BurnRef($t1);

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:454:9+20
    assume {:print "$track_return(27,22,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
    assume {:print "$at(139,19068,19069)"} true;
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
    assume {:print "$at(139,19068,19069)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
L2:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
    assume {:print "$at(139,19068,19069)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_mint_ref [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:445:5+195
procedure {:inline 1} $1_fungible_asset_generate_mint_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_MintRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_MintRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:445:5+1
    assume {:print "$at(139,18456,18457)"} true;
    assume {:print "$track_local(27,23,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:446:24+62
    assume {:print "$at(139,18553,18615)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,18553,18615)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::MintRef($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:447:9+20
    assume {:print "$at(139,18625,18645)"} true;
    $t3 := $1_fungible_asset_MintRef($t1);

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:447:9+20
    assume {:print "$track_return(27,23,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
    assume {:print "$at(139,18650,18651)"} true;
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
    assume {:print "$at(139,18650,18651)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
L2:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
    assume {:print "$at(139,18650,18651)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_deposit_dispatch_function [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:644:5+462
procedure {:inline 1} $1_fungible_asset_has_deposit_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:644:5+1
    assume {:print "$at(139,26934,26935)"} true;
    assume {:print "$track_local(27,26,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:645:29+33
    assume {:print "$at(139,27063,27096)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,27063,27096)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,26):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:645:13+13
    assume {:print "$track_local(27,26,3):", $t4} $t4 == $t4;

    // $t6 := 0xa at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:29+21
    assume {:print "$at(139,27174,27195)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:26+2
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:84+13
L1:

    // $t1 := exists<fungible_asset::DispatchFunctionStore>($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:54+6
    assume {:print "$at(139,27199,27205)"} true;
    $t1 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
L0:

    // $t8 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    assume {:print "$at(139,27157,27243)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    $t1 := $t8;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
L2:

    // if ($t1) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:67+13
    assume {:print "$at(139,27313,27326)"} true;
L4:

    // $t9 := get_global<fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:30+13
    assume {:print "$at(139,27276,27289)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,27276,27289)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,26):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::DispatchFunctionStore>.deposit_function($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:29+69
    $t10 := $t9->$deposit_function;

    // $t2 := opaque begin: option::is_some<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<function_info::FunctionInfo>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t2 := opaque end: option::is_some<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:650:13+5
    assume {:print "$at(139,27375,27380)"} true;
L3:

    // $t11 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:650:13+5
    assume {:print "$at(139,27375,27380)"} true;
    $t11 := false;
    assume $IsValid'bool'($t11);

    // $t2 := $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    $t2 := $t11;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
L5:

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    assume {:print "$track_return(27,26,0):", $t2} $t2 == $t2;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
    assume {:print "$at(139,27395,27396)"} true;
L6:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
    assume {:print "$at(139,27395,27396)"} true;
    $ret0 := $t2;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
L7:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
    assume {:print "$at(139,27395,27396)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_withdraw_dispatch_function [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:664:5+465
procedure {:inline 1} $1_fungible_asset_has_withdraw_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:664:5+1
    assume {:print "$at(139,27868,27869)"} true;
    assume {:print "$track_local(27,27,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:665:29+33
    assume {:print "$at(139,27998,28031)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,27998,28031)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,27):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:665:13+13
    assume {:print "$track_local(27,27,3):", $t4} $t4 == $t4;

    // $t6 := 0xa at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:30+21
    assume {:print "$at(139,28110,28131)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:27+2
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:85+13
L1:

    // $t1 := exists<fungible_asset::DispatchFunctionStore>($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:55+6
    assume {:print "$at(139,28135,28141)"} true;
    $t1 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
L0:

    // $t8 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    assume {:print "$at(139,28093,28179)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    $t1 := $t8;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
L2:

    // if ($t1) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:67+13
    assume {:print "$at(139,28249,28262)"} true;
L4:

    // $t9 := get_global<fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:30+13
    assume {:print "$at(139,28212,28225)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,28212,28225)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,27):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::DispatchFunctionStore>.withdraw_function($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:29+70
    $t10 := $t9->$withdraw_function;

    // $t2 := opaque begin: option::is_some<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87

    // assume WellFormed($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<function_info::FunctionInfo>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t2 := opaque end: option::is_some<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:670:13+5
    assume {:print "$at(139,28312,28317)"} true;
L3:

    // $t11 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:670:13+5
    assume {:print "$at(139,28312,28317)"} true;
    $t11 := false;
    assume $IsValid'bool'($t11);

    // $t2 := $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    $t2 := $t11;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
L5:

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    assume {:print "$track_return(27,27,0):", $t2} $t2 == $t2;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
    assume {:print "$at(139,28332,28333)"} true;
L6:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
    assume {:print "$at(139,28332,28333)"} true;
    $ret0 := $t2;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
L7:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
    assume {:print "$at(139,28332,28333)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::increase_supply<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1067:5+1110
procedure {:inline 1} $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_fungible_asset_Supply);
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_ConcurrentSupply);
    var $t10: $Mutation ($1_aggregator_v2_Aggregator'u128');
    var $t11: int;
    var $t12: bool;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $Mutation ($1_fungible_asset_Supply);
    var $t18: $1_option_Option'u128';
    var $t19: bool;
    var $t20: $Mutation ($1_option_Option'u128');
    var $t21: $Mutation (int);
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: $Mutation (int);
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u128'': $1_aggregator_v2_Aggregator'u128';
    var $temp_0'$1_fungible_asset_Supply': $1_fungible_asset_Supply;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1067:5+1
    assume {:print "$at(139,44538,44539)"} true;
    assume {:print "$track_local(27,29,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1067:5+1
    assume {:print "$track_local(27,29,1):", $t1} $t1 == $t1;

    // $t4 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1068:23+1
    assume {:print "$at(139,44659,44660)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t1, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1068:20+2
    $t5 := $IsEqual'u64'($t1, $t4);

    // if ($t5) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1068:9+47
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1069:13+6
    assume {:print "$at(139,44676,44682)"} true;
L1:

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1069:13+6
    assume {:print "$at(139,44676,44682)"} true;
    goto L16;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:55+8
    assume {:print "$at(139,44748,44756)"} true;
L0:

    // $t6 := object::object_address<#0>($t0) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:32+32
    assume {:print "$at(139,44725,44757)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,44725,44757)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_local[metadata_address]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:13+16
    assume {:print "$track_local(27,29,2):", $t6} $t6 == $t6;

    // $t8 := exists<fungible_asset::ConcurrentSupply>($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:13+6
    assume {:print "$at(139,44772,44778)"} true;
    $t8 := $ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6);

    // if ($t8) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:9+874
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1074:62+16
    assume {:print "$at(139,44879,44895)"} true;
L3:

    // $t9 := borrow_global<fungible_asset::ConcurrentSupply>($t6) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1074:26+17
    assume {:print "$at(139,44843,44860)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(139,44843,44860)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t10 := borrow_field<fungible_asset::ConcurrentSupply>.current($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:40+19
    assume {:print "$at(139,44958,44977)"} true;
    $t10 := $ChildMutation($t9, 0, $Dereference($t9)->$current);

    // $t11 := (u128)($t1) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:61+16
    call $t11 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,44979,44995)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t12 := opaque begin: aggregator_v2::try_add<u128>($t10, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61

    // $t13 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    havoc $t13;

    // if ($t13) goto L20 else goto L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    if ($t13) { goto L20; } else { goto L18; }

    // label L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
L19:

    // trace_abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    assume {:print "$at(139,44935,44996)"} true;
    assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    goto L17;

    // label L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
L18:

    // $t10 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    assume {:print "$at(139,44935,44996)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u128'';
    $t10 := $UpdateMutation($t10, $temp_0'$1_aggregator_v2_Aggregator'u128'');

    // assume WellFormed($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    assume $IsValid'$1_aggregator_v2_Aggregator'u128''($Dereference($t10));

    // assume WellFormed($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    assume $IsValid'bool'($t12);

    // $t12 := opaque end: aggregator_v2::try_add<u128>($t10, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61

    // write_back[Reference($t9).current (aggregator_v2::Aggregator<u128>)]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_ConcurrentSupply'_current($Dereference($t9), $Dereference($t10)));

    // write_back[fungible_asset::ConcurrentSupply@]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1076:17+61
    $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // if ($t12) goto L5 else goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:13+159
    assume {:print "$at(139,44910,45069)"} true;
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:13+159
L5:

    // goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:13+159
    assume {:print "$at(139,44910,45069)"} true;
    goto L6;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1077:37+20
    assume {:print "$at(139,45034,45054)"} true;
L4:

    // $t14 := 5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1077:37+20
    assume {:print "$at(139,45034,45054)"} true;
    $t14 := 5;
    assume $IsValid'u64'($t14);

    // $t15 := error::out_of_range($t14) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1077:17+41
    call $t15 := $1_error_out_of_range($t14);
    if ($abort_flag) {
        assume {:print "$at(139,45014,45055)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:13+159
    assume {:print "$at(139,44910,45069)"} true;
    assume {:print "$track_abort(27,29):", $t15} $t15 == $t15;

    // $t7 := move($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:13+159
    $t7 := $t15;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:13+159
    goto L17;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:9+874
    assume {:print "$at(139,44768,45642)"} true;
L6:

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:9+874
    assume {:print "$at(139,44768,45642)"} true;
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1079:35+16
    assume {:print "$at(139,45105,45121)"} true;
L2:

    // $t16 := exists<fungible_asset::Supply>($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1079:20+6
    assume {:print "$at(139,45090,45096)"} true;
    $t16 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t16) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1079:16+556
    if ($t16) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:52+16
    assume {:print "$at(139,45177,45193)"} true;
L9:

    // $t17 := borrow_global<fungible_asset::Supply>($t6) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:26+17
    assume {:print "$at(139,45151,45168)"} true;
    if (!$ResourceExists($1_fungible_asset_Supply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_Supply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(139,45151,45168)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_local[supply#1]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:17+6
    $temp_0'$1_fungible_asset_Supply' := $Dereference($t17);
    assume {:print "$track_local(27,29,3):", $temp_0'$1_fungible_asset_Supply'} $temp_0'$1_fungible_asset_Supply' == $temp_0'$1_fungible_asset_Supply';

    // $t18 := get_field<fungible_asset::Supply>.maximum($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:33+15
    assume {:print "$at(139,45228,45243)"} true;
    $t18 := $Dereference($t17)->$maximum;

    // $t19 := opaque begin: option::is_some<u128>($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:17+32

    // assume WellFormed($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:17+32
    assume $IsValid'bool'($t19);

    // assume Eq<bool>($t19, option::spec_is_some<u128>($t18)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:17+32
    assume $IsEqual'bool'($t19, $1_option_spec_is_some'u128'($t18));

    // $t19 := opaque end: option::is_some<u128>($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:17+32

    // if ($t19) goto L11 else goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:13+288
    if ($t19) { goto L11; } else { goto L10; }

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:52+6
    assume {:print "$at(139,45299,45305)"} true;
L11:

    // $t20 := borrow_field<fungible_asset::Supply>.maximum($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:47+19
    assume {:print "$at(139,45294,45313)"} true;
    $t20 := $ChildMutation($t17, 1, $Dereference($t17)->$maximum);

    // $t21 := option::borrow_mut<u128>($t20) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:28+39
    call $t21,$t20 := $1_option_borrow_mut'u128'($t20);
    if ($abort_flag) {
        assume {:print "$at(139,45275,45314)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t22 := read_ref($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:27+40
    $t22 := $Dereference($t21);

    // write_back[Reference($t17).maximum (option::Option<u128>)]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:27+40
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_Supply'_maximum($Dereference($t17), $Dereference($t20)));

    // $t23 := get_field<fungible_asset::Supply>.current($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1084:27+14
    assume {:print "$at(139,45367,45381)"} true;
    $t23 := $Dereference($t17)->$current;

    // $t24 := -($t22, $t23) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1084:25+1
    call $t24 := $Sub($t22, $t23);
    if ($abort_flag) {
        assume {:print "$at(139,45365,45366)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t25 := (u128)($t1) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1084:45+16
    call $t25 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,45385,45401)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t26 := >=($t24, $t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1084:42+2
    call $t26 := $Ge($t24, $t25);

    // if ($t26) goto L13 else goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    assume {:print "$at(139,45332,45482)"} true;
    if ($t26) { goto L13; } else { goto L12; }

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
L13:

    // goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    assume {:print "$at(139,45332,45482)"} true;
    goto L14;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
L12:

    // pack_ref_deep($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    assume {:print "$at(139,45332,45482)"} true;

    // write_back[fungible_asset::Supply@]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // drop($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150

    // $t27 := 5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1085:41+20
    assume {:print "$at(139,45443,45463)"} true;
    $t27 := 5;
    assume $IsValid'u64'($t27);

    // $t28 := error::out_of_range($t27) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1085:21+41
    call $t28 := $1_error_out_of_range($t27);
    if ($abort_flag) {
        assume {:print "$at(139,45423,45464)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    assume {:print "$at(139,45332,45482)"} true;
    assume {:print "$track_abort(27,29):", $t28} $t28 == $t28;

    // $t7 := move($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    $t7 := $t28;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    goto L17;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
L14:

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1083:17+150
    assume {:print "$at(139,45332,45482)"} true;
    goto L15;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:13+288
    assume {:print "$at(139,45208,45496)"} true;
L10:

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1081:13+288
    assume {:print "$at(139,45208,45496)"} true;
    goto L15;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1090:36+17
    assume {:print "$at(139,45614,45631)"} true;
L8:

    // $t29 := 21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1090:36+17
    assume {:print "$at(139,45614,45631)"} true;
    $t29 := 21;
    assume $IsValid'u64'($t29);

    // $t30 := error::not_found($t29) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1090:19+35
    call $t30 := $1_error_not_found($t29);
    if ($abort_flag) {
        assume {:print "$at(139,45597,45632)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1090:13+41
    assume {:print "$at(139,45591,45632)"} true;
    assume {:print "$track_abort(27,29):", $t30} $t30 == $t30;

    // $t7 := move($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1090:13+41
    $t7 := $t30;

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1090:13+41
    goto L17;

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:30+6
    assume {:print "$at(139,45527,45533)"} true;
L15:

    // $t31 := get_field<fungible_asset::Supply>.current($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:30+14
    assume {:print "$at(139,45527,45541)"} true;
    $t31 := $Dereference($t17)->$current;

    // $t32 := (u128)($t1) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:47+16
    call $t32 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,45544,45560)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t33 := +($t31, $t32) on_abort goto L17 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:45+1
    call $t33 := $AddU128($t31, $t32);
    if ($abort_flag) {
        assume {:print "$at(139,45542,45543)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t34 := borrow_field<fungible_asset::Supply>.current($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:13+14
    $t34 := $ChildMutation($t17, 0, $Dereference($t17)->$current);

    // write_ref($t34, $t33) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:13+50
    $t34 := $UpdateMutation($t34, $t33);

    // write_back[Reference($t17).current (u128)]($t34) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:13+50
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_Supply'_current($Dereference($t17), $Dereference($t34)));

    // pack_ref_deep($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:13+50

    // write_back[fungible_asset::Supply@]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1088:13+50
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:9+874
    assume {:print "$at(139,44768,45642)"} true;
L7:

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1092:5+1
    assume {:print "$at(139,45647,45648)"} true;
L16:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1092:5+1
    assume {:print "$at(139,45647,45648)"} true;
    return;

    // label L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1092:5+1
L17:

    // abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1092:5+1
    assume {:print "$at(139,45647,45648)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

    // label L20 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L20:

    // drop($t9) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L19 at <internal>:1:1+10
    goto L19;

}

// fun fungible_asset::metadata_from_asset [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:563:5+96
procedure {:inline 1} $1_fungible_asset_metadata_from_asset(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:563:5+1
    assume {:print "$at(139,23502,23503)"} true;
    assume {:print "$track_local(27,38,0):", $t0} $t0 == $t0;

    // $t1 := get_field<fungible_asset::FungibleAsset>.metadata($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:564:9+11
    assume {:print "$at(139,23581,23592)"} true;
    $t1 := $t0->$metadata;

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:564:9+11
    assume {:print "$track_return(27,38,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:565:5+1
    assume {:print "$at(139,23597,23598)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:565:5+1
    assume {:print "$at(139,23597,23598)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::mint_internal [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:832:5+271
procedure {:inline 1} $1_fungible_asset_mint_internal(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_fungible_asset_FungibleAsset;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:832:5+1
    assume {:print "$at(139,34897,34898)"} true;
    assume {:print "$track_local(27,40,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:832:5+1
    assume {:print "$track_local(27,40,1):", $t1} $t1 == $t1;

    // fungible_asset::increase_supply<fungible_asset::Metadata>($t0, $t1) on_abort goto L2 with $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:836:9+34
    assume {:print "$at(139,35052,35086)"} true;
    call $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(139,35052,35086)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,40):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::FungibleAsset($t0, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:837:9+66
    assume {:print "$at(139,35096,35162)"} true;
    $t3 := $1_fungible_asset_FungibleAsset($t0, $t1);

    // trace_return[0]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:837:9+66
    assume {:print "$track_return(27,40,0):", $t3} $t3 == $t3;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
    assume {:print "$at(139,35167,35168)"} true;
L1:

    // return $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
    assume {:print "$at(139,35167,35168)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
L2:

    // abort($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
    assume {:print "$at(139,35167,35168)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::store_exists [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:547:5+88
procedure {:inline 1} $1_fungible_asset_store_exists(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:547:5+1
    assume {:print "$at(139,22923,22924)"} true;
    assume {:print "$track_local(27,53,0):", $t0} $t0 == $t0;

    // $t1 := exists<fungible_asset::FungibleStore>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:553:9+6
    assume {:print "$at(139,23149,23155)"} true;
    $t1 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:553:9+28
    assume {:print "$track_return(27,53,0):", $t1} $t1 == $t1;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:549:5+1
    assume {:print "$at(139,23010,23011)"} true;
L1:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:549:5+1
    assume {:print "$at(139,23010,23011)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::store_metadata<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:569:5+147
procedure {:inline 1} $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: $1_fungible_asset_FungibleStore;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:569:5+1
    assume {:print "$at(139,23663,23664)"} true;
    assume {:print "$track_local(27,54,0):", $t0} $t0 == $t0;

    // $t2 := object::object_address<#0>($t0) on_abort goto L4 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:26+29
    assume {:print "$at(139,47337,47366)"} true;
    call $t2 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,47337,47366)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(27,54):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_local[store_addr#253]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:13+10
    assume {:print "$track_local(27,54,1):", $t2} $t2 == $t2;

    // $t4 := exists<fungible_asset::FungibleStore>($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:17+6
    assume {:print "$at(139,47384,47390)"} true;
    $t4 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2);

    // if ($t4) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
L0:

    // $t5 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
    assume {:print "$at(139,47436,47461)"} true;
    $t5 := 23;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L4 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:52+43
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(139,47419,47462)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(27,54):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    assume {:print "$track_abort(27,54):", $t6} $t6 == $t6;

    // $t3 := move($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    $t3 := $t6;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:38+10
    assume {:print "$at(139,47502,47512)"} true;
L2:

    // $t7 := get_global<fungible_asset::FungibleStore>($t2) on_abort goto L4 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:9+13
    assume {:print "$at(139,47473,47486)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(139,47473,47486)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(27,54):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t8 := get_field<fungible_asset::FungibleStore>.metadata($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:570:9+38
    assume {:print "$at(139,23766,23804)"} true;
    $t8 := $t7->$metadata;

    // trace_return[0]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:570:9+38
    assume {:print "$track_return(27,54,0):", $t8} $t8 == $t8;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
    assume {:print "$at(139,23809,23810)"} true;
L3:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
    assume {:print "$at(139,23809,23810)"} true;
    $ret0 := $t8;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
L4:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
    assume {:print "$at(139,23809,23810)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_dispatch_function<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:654:5+460
procedure {:inline 1} $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: $1_option_Option'$1_function_info_FunctionInfo';
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: $1_object_Object'$1_fungible_asset_Metadata';
    var $t11: int;
    var $t12: bool;
    var $t13: $1_fungible_asset_DispatchFunctionStore;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:654:5+1
    assume {:print "$at(139,27402,27403)"} true;
    assume {:print "$track_local(27,63,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:26+29
    assume {:print "$at(139,47337,47366)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,47337,47366)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[store_addr#257]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:13+10
    assume {:print "$track_local(27,63,3):", $t4} $t4 == $t4;

    // $t6 := exists<fungible_asset::FungibleStore>($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:17+6
    assume {:print "$at(139,47384,47390)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
L0:

    // $t7 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
    assume {:print "$at(139,47436,47461)"} true;
    $t7 := 23;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:52+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(139,47419,47462)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    assume {:print "$track_abort(27,63):", $t8} $t8 == $t8;

    // $t5 := move($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    $t5 := $t8;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:38+10
    assume {:print "$at(139,47502,47512)"} true;
L2:

    // $t9 := get_global<fungible_asset::FungibleStore>($t4) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:9+13
    assume {:print "$at(139,47473,47486)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,47473,47486)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::FungibleStore>.metadata($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:656:52+18
    assume {:print "$at(139,27641,27659)"} true;
    $t10 := $t9->$metadata;

    // $t11 := object::object_address<fungible_asset::Metadata>($t10) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:656:29+42
    call $t11 := $1_object_object_address'$1_fungible_asset_Metadata'($t10);
    if ($abort_flag) {
        assume {:print "$at(139,27618,27660)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:656:13+13
    assume {:print "$track_local(27,63,2):", $t11} $t11 == $t11;

    // $t12 := exists<fungible_asset::DispatchFunctionStore>($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:12+6
    assume {:print "$at(139,27673,27679)"} true;
    $t12 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:658:50+13
    assume {:print "$at(139,27770,27783)"} true;
L4:

    // $t13 := get_global<fungible_asset::DispatchFunctionStore>($t11) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:658:13+13
    assume {:print "$at(139,27733,27746)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t11);
    }
    if ($abort_flag) {
        assume {:print "$at(139,27733,27746)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t1 := get_field<fungible_asset::DispatchFunctionStore>.withdraw_function($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:658:13+69
    $t1 := $t13->$withdraw_function;

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    assume {:print "$at(139,27670,27856)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume {:print "$at(139,27832,27846)"} true;
L3:

    // $t1 := opaque begin: option::none<function_info::FunctionInfo>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume {:print "$at(139,27832,27846)"} true;

    // assume And(WellFormed($t1), Le(Len<function_info::FunctionInfo>(select option::Option.vec($t1)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t1) && (LenVec($t1->$vec) <= 1));

    // assume Eq<option::Option<function_info::FunctionInfo>>($t1, option::spec_none<function_info::FunctionInfo>()) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t1, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t1 := opaque end: option::none<function_info::FunctionInfo>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    assume {:print "$at(139,27670,27856)"} true;
L5:

    // trace_return[0]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    assume {:print "$at(139,27670,27856)"} true;
    assume {:print "$track_return(27,63,0):", $t1} $t1 == $t1;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
    assume {:print "$at(139,27861,27862)"} true;
L6:

    // return $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
    assume {:print "$at(139,27861,27862)"} true;
    $ret0 := $t1;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
L7:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
    assume {:print "$at(139,27861,27862)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_internal [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1041:5+1102
procedure {:inline 1} $1_fungible_asset_withdraw_internal(_$t0: int, _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: $Mutation ($1_fungible_asset_FungibleStore);
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_fungible_asset_FungibleStore);
    var $t10: $1_object_Object'$1_fungible_asset_Metadata';
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t18: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t19: bool;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: bool;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: $Mutation (int);
    var $t30: $1_fungible_asset_Withdraw;
    var $t31: $1_fungible_asset_FungibleAsset;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u64'': $1_aggregator_v2_Aggregator'u64';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1041:5+1
    assume {:print "$at(139,43370,43371)"} true;
    assume {:print "$track_local(27,64,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1041:5+1
    assume {:print "$track_local(27,64,1):", $t1} $t1 == $t1;

    // $t5 := exists<fungible_asset::FungibleStore>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:17+6
    assume {:print "$at(139,43547,43553)"} true;
    $t5 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t5) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:9+87
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:9+87
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:9+87
    assume {:print "$at(139,43539,43626)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:69+25
L0:

    // $t6 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:69+25
    assume {:print "$at(139,43599,43624)"} true;
    $t6 := 23;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L19 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:52+43
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(139,43582,43625)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:9+87
    assume {:print "$at(139,43539,43626)"} true;
    assume {:print "$track_abort(27,64):", $t7} $t7 == $t7;

    // $t8 := move($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:9+87
    $t8 := $t7;

    // goto L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:9+87
    goto L19;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:54+10
    assume {:print "$at(139,43682,43692)"} true;
L2:

    // $t9 := borrow_global<fungible_asset::FungibleStore>($t0) on_abort goto L19 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:21+17
    assume {:print "$at(139,43649,43666)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,43649,43666)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_local[store]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:13+5
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t9);
    assume {:print "$track_local(27,64,4):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t10 := get_field<fungible_asset::FungibleStore>.metadata($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:24+14
    assume {:print "$at(139,43718,43732)"} true;
    $t10 := $Dereference($t9)->$metadata;

    // trace_local[metadata]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:13+8
    assume {:print "$track_local(27,64,3):", $t10} $t10 == $t10;

    // $t11 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1049:23+1
    assume {:print "$at(139,43756,43757)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // $t12 := !=($t1, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1049:20+2
    $t12 := !$IsEqual'u64'($t1, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1049:9+680
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+5
    assume {:print "$at(139,43777,43782)"} true;
L4:

    // $t13 := get_field<fungible_asset::FungibleStore>.balance($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+13
    assume {:print "$at(139,43777,43790)"} true;
    $t13 := $Dereference($t9)->$balance;

    // $t14 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:34+1
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // $t15 := ==($t13, $t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:31+2
    $t15 := $IsEqual'u64'($t13, $t14);

    // if ($t15) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+75
    if ($t15) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:81+10
L6:

    // $t2 := exists<fungible_asset::ConcurrentFungibleBalance>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:559:9+6
    assume {:print "$at(139,23404,23410)"} true;
    $t2 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+75
    assume {:print "$at(139,43777,43852)"} true;
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+75
L5:

    // $t16 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+75
    assume {:print "$at(139,43777,43852)"} true;
    $t16 := false;
    assume $IsValid'bool'($t16);

    // $t2 := $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+75
    $t2 := $t16;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:17+75
L7:

    // if ($t2) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1050:13+562
    assume {:print "$at(139,43773,44335)"} true;
    if ($t2) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:17+79
    assume {:print "$at(139,43872,43951)"} true;
L9:

    // drop($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:17+79
    assume {:print "$at(139,43872,43951)"} true;

    // $t17 := borrow_global<fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L19 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:40+17
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,43895,43912)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // $t18 := borrow_field<fungible_asset::ConcurrentFungibleBalance>.balance($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:44+29
    assume {:print "$at(139,44021,44050)"} true;
    $t18 := $ChildMutation($t17, 0, $Dereference($t17)->$balance);

    // $t19 := opaque begin: aggregator_v2::try_sub<u64>($t18, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61

    // $t20 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    havoc $t20;

    // if ($t20) goto L22 else goto L20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    if ($t20) { goto L22; } else { goto L20; }

    // label L21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
L21:

    // trace_abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    assume {:print "$at(139,43998,44059)"} true;
    assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;

    // goto L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    goto L19;

    // label L20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
L20:

    // $t18 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    assume {:print "$at(139,43998,44059)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u64'';
    $t18 := $UpdateMutation($t18, $temp_0'$1_aggregator_v2_Aggregator'u64'');

    // assume WellFormed($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($Dereference($t18));

    // assume WellFormed($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    assume $IsValid'bool'($t19);

    // $t19 := opaque end: aggregator_v2::try_sub<u64>($t18, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61

    // write_back[Reference($t17).balance (aggregator_v2::Aggregator<u64>)]($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t17), $Dereference($t18)));

    // write_back[fungible_asset::ConcurrentFungibleBalance@]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:21+61
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // if ($t19) goto L11 else goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1052:17+176
    assume {:print "$at(139,43969,44145)"} true;
    if ($t19) { goto L11; } else { goto L10; }

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1052:17+176
L11:

    // goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1052:17+176
    assume {:print "$at(139,43969,44145)"} true;
    goto L12;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1054:45+21
    assume {:print "$at(139,44105,44126)"} true;
L10:

    // $t21 := 4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1054:45+21
    assume {:print "$at(139,44105,44126)"} true;
    $t21 := 4;
    assume $IsValid'u64'($t21);

    // $t22 := error::invalid_argument($t21) on_abort goto L19 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1054:21+46
    call $t22 := $1_error_invalid_argument($t21);
    if ($abort_flag) {
        assume {:print "$at(139,44081,44127)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_abort($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1052:17+176
    assume {:print "$at(139,43969,44145)"} true;
    assume {:print "$track_abort(27,64):", $t22} $t22 == $t22;

    // $t8 := move($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1052:17+176
    $t8 := $t22;

    // goto L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1052:17+176
    goto L19;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1055:18+1
    assume {:print "$at(139,44145,44146)"} true;
L12:

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1055:18+1
    assume {:print "$at(139,44145,44146)"} true;
    goto L13;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:25+5
    assume {:print "$at(139,44192,44197)"} true;
L8:

    // $t23 := get_field<fungible_asset::FungibleStore>.balance($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:25+13
    assume {:print "$at(139,44192,44205)"} true;
    $t23 := $Dereference($t9)->$balance;

    // $t24 := >=($t23, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:39+2
    call $t24 := $Ge($t23, $t1);

    // if ($t24) goto L15 else goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
    if ($t24) { goto L15; } else { goto L14; }

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
L15:

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
    assume {:print "$at(139,44184,44264)"} true;
    goto L16;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
L14:

    // drop($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
    assume {:print "$at(139,44184,44264)"} true;

    // $t25 := 4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:74+21
    $t25 := 4;
    assume $IsValid'u64'($t25);

    // $t26 := error::invalid_argument($t25) on_abort goto L19 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:50+46
    call $t26 := $1_error_invalid_argument($t25);
    if ($abort_flag) {
        assume {:print "$at(139,44217,44263)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_abort($t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
    assume {:print "$at(139,44184,44264)"} true;
    assume {:print "$track_abort(27,64):", $t26} $t26 == $t26;

    // $t8 := move($t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
    $t8 := $t26;

    // goto L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:17+80
    goto L19;

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:33+5
    assume {:print "$at(139,44298,44303)"} true;
L16:

    // $t27 := get_field<fungible_asset::FungibleStore>.balance($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:33+13
    assume {:print "$at(139,44298,44311)"} true;
    $t27 := $Dereference($t9)->$balance;

    // $t28 := -($t27, $t1) on_abort goto L19 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:47+1
    call $t28 := $Sub($t27, $t1);
    if ($abort_flag) {
        assume {:print "$at(139,44312,44313)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // $t29 := borrow_field<fungible_asset::FungibleStore>.balance($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:17+13
    $t29 := $ChildMutation($t9, 1, $Dereference($t9)->$balance);

    // write_ref($t29, $t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:17+38
    $t29 := $UpdateMutation($t29, $t28);

    // write_back[Reference($t9).balance (u64)]($t29) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t9), $Dereference($t29)));

    // write_back[fungible_asset::FungibleStore@]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:17+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:53+10
    assume {:print "$at(139,44390,44400)"} true;
L13:

    // $t30 := pack fungible_asset::Withdraw($t0, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:35+38
    assume {:print "$at(139,44372,44410)"} true;
    $t30 := $1_fungible_asset_Withdraw($t0, $t1);

    // opaque begin: event::emit<fungible_asset::Withdraw>($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:13+61

    // opaque end: event::emit<fungible_asset::Withdraw>($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:13+61

    // goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:74+1
    goto L17;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1049:9+680
    assume {:print "$at(139,43742,44422)"} true;
L3:

    // drop($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1049:9+680
    assume {:print "$at(139,43742,44422)"} true;

    // label L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:25+8
    assume {:print "$at(139,44448,44456)"} true;
L17:

    // $t31 := pack fungible_asset::FungibleAsset($t10, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:9+34
    assume {:print "$at(139,44432,44466)"} true;
    $t31 := $1_fungible_asset_FungibleAsset($t10, $t1);

    // trace_return[0]($t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:9+34
    assume {:print "$track_return(27,64,0):", $t31} $t31 == $t31;

    // label L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1064:5+1
    assume {:print "$at(139,44471,44472)"} true;
L18:

    // return $t31 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1064:5+1
    assume {:print "$at(139,44471,44472)"} true;
    $ret0 := $t31;
    return;

    // label L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1064:5+1
L19:

    // abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1064:5+1
    assume {:print "$at(139,44471,44472)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

    // label L22 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L22:

    // drop($t17) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L21 at <internal>:1:1+10
    goto L21;

}

// fun fungible_asset::withdraw_sanity_check<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+618
procedure {:inline 1} $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: bool) returns ()
{
    // declare local variables
    var $t3: bool;
    var $t4: $1_fungible_asset_FungibleStore;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $1_object_ObjectCore;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: $1_fungible_asset_FungibleStore;
    var $t19: bool;
    var $t20: bool;
    var $t21: $1_object_Object'$1_fungible_asset_Metadata';
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+1
    assume {:print "$at(139,33123,33124)"} true;
    assume {:print "$track_local(27,65,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+1
    assume {:print "$track_local(27,65,1):", $t1} $t1 == $t1;

    // trace_local[abort_on_dispatch]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+1
    assume {:print "$track_local(27,65,2):", $t2} $t2 == $t2;

    // $t6 := signer::address_of($t0) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:37+25
    assume {:print "$at(139,33346,33371)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(139,33346,33371)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // assume Identical($t8, select object::Object.inner<object::Object<#0>>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:540:9+37
    assume {:print "$at(156,21560,21597)"} true;
    assume ($t8 == $t1->$inner);

    // assume Identical($t9, global<object::ObjectCore>($t8)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:541:9+53
    assume {:print "$at(156,21606,21659)"} true;
    assume ($t9 == $ResourceValue($1_object_ObjectCore_$memory, $t8));

    // assume Identical($t10, select object::ObjectCore.owner<object::ObjectCore>($t9)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:542:9+37
    assume {:print "$at(156,21668,21705)"} true;
    assume ($t10 == $t9->$owner);

    // $t11 := object::owns<#0>($t1, $t6) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:17+46
    assume {:print "$at(139,33326,33372)"} true;
    call $t11 := $1_object_owns'$1_fungible_asset_FungibleStore'($t1, $t6);
    if ($abort_flag) {
        assume {:print "$at(139,33326,33372)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // if ($t11) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    assume {:print "$at(139,33318,33417)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:90+16
L0:

    // $t12 := 8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:90+16
    assume {:print "$at(139,33399,33415)"} true;
    $t12 := 8;
    assume $IsValid'u64'($t12);

    // $t13 := error::permission_denied($t12) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:65+42
    call $t13 := $1_error_permission_denied($t12);
    if ($abort_flag) {
        assume {:print "$at(139,33374,33416)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    assume {:print "$at(139,33318,33417)"} true;
    assume {:print "$track_abort(27,65):", $t13} $t13 == $t13;

    // $t7 := move($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    $t7 := $t13;

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    goto L16;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:798:46+6
    assume {:print "$at(139,33464,33470)"} true;
L2:

    // $t14 := object::object_address<#0>($t1) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:26+29
    assume {:print "$at(139,47337,47366)"} true;
    call $t14 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(139,47337,47366)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_local[store_addr#260]($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1136:13+10
    assume {:print "$track_local(27,65,5):", $t14} $t14 == $t14;

    // $t15 := exists<fungible_asset::FungibleStore>($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:17+6
    assume {:print "$at(139,47384,47390)"} true;
    $t15 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t14);

    // if ($t15) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    if ($t15) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
L3:

    // $t16 := 23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:69+25
    assume {:print "$at(139,47436,47461)"} true;
    $t16 := 23;
    assume $IsValid'u64'($t16);

    // $t17 := error::not_found($t16) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:52+43
    call $t17 := $1_error_not_found($t16);
    if ($abort_flag) {
        assume {:print "$at(139,47419,47462)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    assume {:print "$at(139,47376,47463)"} true;
    assume {:print "$track_abort(27,65):", $t17} $t17 == $t17;

    // $t7 := move($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    $t7 := $t17;

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1137:9+87
    goto L16;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:38+10
    assume {:print "$at(139,47502,47512)"} true;
L5:

    // $t18 := get_global<fungible_asset::FungibleStore>($t14) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1138:9+13
    assume {:print "$at(139,47473,47486)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(139,47473,47486)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_local[fa_store]($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:798:13+8
    assume {:print "$at(139,33431,33439)"} true;
    assume {:print "$track_local(27,65,4):", $t18} $t18 == $t18;

    // $t19 := !($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+1
    assume {:print "$at(139,33502,33503)"} true;
    call $t19 := $Not($t2);

    // if ($t19) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    if ($t19) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
L7:

    // $t20 := true at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    assume {:print "$at(139,33502,33574)"} true;
    $t20 := true;
    assume $IsValid'bool'($t20);

    // $t3 := $t20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    $t3 := $t20;

    // goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    goto L8;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:67+8
L6:

    // $t21 := get_field<fungible_asset::FungibleStore>.metadata($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:67+17
    assume {:print "$at(139,33556,33573)"} true;
    $t21 := $t18->$metadata;

    // $t22 := fungible_asset::has_withdraw_dispatch_function($t21) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:36+49
    call $t22 := $1_fungible_asset_has_withdraw_dispatch_function($t21);
    if ($abort_flag) {
        assume {:print "$at(139,33525,33574)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // $t3 := !($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:35+1
    call $t3 := $Not($t22);

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
L8:

    // if ($t3) goto L10 else goto L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    assume {:print "$at(139,33481,33655)"} true;
    if ($t3) { goto L10; } else { goto L9; }

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
L10:

    // goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    assume {:print "$at(139,33481,33655)"} true;
    goto L11;

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
L9:

    // $t23 := 28 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:801:37+32
    assume {:print "$at(139,33612,33644)"} true;
    $t23 := 28;
    assume $IsValid'u64'($t23);

    // $t24 := error::invalid_argument($t23) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:801:13+57
    call $t24 := $1_error_invalid_argument($t23);
    if ($abort_flag) {
        assume {:print "$at(139,33588,33645)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    assume {:print "$at(139,33481,33655)"} true;
    assume {:print "$track_abort(27,65):", $t24} $t24 == $t24;

    // $t7 := move($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    $t7 := $t24;

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    goto L16;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:18+8
    assume {:print "$at(139,33674,33682)"} true;
L11:

    // $t25 := get_field<fungible_asset::FungibleStore>.frozen($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:18+15
    assume {:print "$at(139,33674,33689)"} true;
    $t25 := $t18->$frozen;

    // $t26 := !($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:17+1
    call $t26 := $Not($t25);

    // if ($t26) goto L13 else goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    if ($t26) { goto L13; } else { goto L12; }

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
L13:

    // goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    assume {:print "$at(139,33665,33734)"} true;
    goto L14;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:60+16
L12:

    // $t27 := 3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:60+16
    assume {:print "$at(139,33716,33732)"} true;
    $t27 := 3;
    assume $IsValid'u64'($t27);

    // $t28 := error::permission_denied($t27) on_abort goto L16 with $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:35+42
    call $t28 := $1_error_permission_denied($t27);
    if ($abort_flag) {
        assume {:print "$at(139,33691,33733)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    assume {:print "$at(139,33665,33734)"} true;
    assume {:print "$track_abort(27,65):", $t28} $t28 == $t28;

    // $t7 := move($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    $t7 := $t28;

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    goto L16;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:78+1
L14:

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
    assume {:print "$at(139,33740,33741)"} true;
L15:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
    assume {:print "$at(139,33740,33741)"} true;
    return;

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
L16:

    // abort($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
    assume {:print "$at(139,33740,33741)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// struct dispatchable_fungible_asset::TransferRefStore at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:36:5+73
datatype $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore($transfer_ref: $1_fungible_asset_TransferRef)
}
function {:inline} $Update'$1_dispatchable_fungible_asset_TransferRefStore'_transfer_ref(s: $1_dispatchable_fungible_asset_TransferRefStore, x: $1_fungible_asset_TransferRef): $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore(x)
}
function $IsValid'$1_dispatchable_fungible_asset_TransferRefStore'(s: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    $IsValid'$1_fungible_asset_TransferRef'(s->$transfer_ref)
}
function {:inline} $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'(s1: $1_dispatchable_fungible_asset_TransferRefStore, s2: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    s1 == s2
}
var $1_dispatchable_fungible_asset_TransferRefStore_$memory: $Memory $1_dispatchable_fungible_asset_TransferRefStore;

// fun dispatchable_fungible_asset::deposit<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:106:5+794
procedure {:inline 1} $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_fungible_asset_FungibleAsset;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t5: $1_function_info_FunctionInfo;
    var $t6: $1_option_Option'$1_function_info_FunctionInfo';
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $1_function_info_FunctionInfo;
    var $t16: bool;
    var $t17: $1_object_Object'$1_fungible_asset_Metadata';
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t23: $1_fungible_asset_TransferRef;
    var $t24: bool;
    var $t25: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:106:5+1
    assume {:print "$at(131,4350,4351)"} true;
    assume {:print "$track_local(28,0,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:106:5+1
    assume {:print "$track_local(28,0,1):", $t1} $t1 == $t1;

    // $t8 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:107:53+5
    assume {:print "$at(131,4494,4499)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // fungible_asset::deposit_sanity_check<#0>($t0, $t8) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:107:9+50
    call $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t8);
    if ($abort_flag) {
        assume {:print "$at(131,4450,4500)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t10 := fungible_asset::deposit_dispatch_function<#0>($t0) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:108:24+48
    assume {:print "$at(131,4525,4573)"} true;
    call $t10 := $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,4525,4573)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_local[func_opt]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:108:13+8
    assume {:print "$track_local(28,0,6):", $t10} $t10 == $t10;

    // $t11 := opaque begin: option::is_some<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26
    assume {:print "$at(131,4587,4613)"} true;

    // assume WellFormed($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<function_info::FunctionInfo>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t11 := opaque end: option::is_some<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26

    // if ($t11) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:9+555
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:111:17+47
    assume {:print "$at(131,4654,4701)"} true;
L1:

    // $t12 := features::dispatchable_fungible_asset_enabled() on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:111:17+47
    assume {:print "$at(131,4654,4701)"} true;
    call $t12 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,4654,4701)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // if ($t12) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    assume {:print "$at(131,4629,4763)"} true;
    if ($t12) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
L3:

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    assume {:print "$at(131,4629,4763)"} true;
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:112:32+14
    assume {:print "$at(131,4734,4748)"} true;
L2:

    // $t13 := 3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:112:32+14
    assume {:print "$at(131,4734,4748)"} true;
    $t13 := 3;
    assume $IsValid'u64'($t13);

    // $t14 := error::aborted($t13) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:112:17+30
    call $t14 := $1_error_aborted($t13);
    if ($abort_flag) {
        assume {:print "$at(131,4719,4749)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    assume {:print "$at(131,4629,4763)"} true;
    assume {:print "$track_abort(28,0):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    $t9 := $t14;

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    goto L10;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:39+9
    assume {:print "$at(131,4803,4812)"} true;
L4:

    // $t15 := opaque begin: option::borrow<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;

    // assume Identical($t16, option::spec_is_none<function_info::FunctionInfo>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume ($t16 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t10));

    // if ($t16) goto L12 else goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    if ($t16) { goto L12; } else { goto L11; }

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
L12:

    // assume And(option::spec_is_none<function_info::FunctionInfo>($t10), Eq(262145, $t9)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t10) && $IsEqual'num'(262145, $t9));

    // trace_abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;
    assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    goto L10;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
L11:

    // assume WellFormed($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t15);

    // assume Eq<function_info::FunctionInfo>($t15, option::spec_borrow<function_info::FunctionInfo>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t15, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t10));

    // $t15 := opaque end: option::borrow<function_info::FunctionInfo>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25

    // trace_local[func]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:17+4
    assume {:print "$track_local(28,0,5):", $t15} $t15 == $t15;

    // function_info::load_module_from_function($t15) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:115:13+46
    assume {:print "$at(131,4827,4873)"} true;
    call $1_function_info_load_module_from_function($t15);
    if ($abort_flag) {
        assume {:print "$at(131,4827,4873)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t17 := fungible_asset::store_metadata<#0>($t0) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:196:14+40
    assume {:print "$at(131,8011,8051)"} true;
    call $t17 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,8011,8051)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t18 := object::object_address<fungible_asset::Metadata>($t17) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:29+87
    assume {:print "$at(131,7974,8061)"} true;
    call $t18 := $1_object_object_address'$1_fungible_asset_Metadata'($t17);
    if ($abort_flag) {
        assume {:print "$at(131,7974,8061)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_local[metadata_addr#177]($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:13+13
    assume {:print "$track_local(28,0,7):", $t18} $t18 == $t18;

    // $t19 := exists<dispatchable_fungible_asset::TransferRefStore>($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:199:13+6
    assume {:print "$at(131,8092,8098)"} true;
    $t19 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);

    // if ($t19) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    if ($t19) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L6:

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L5:

    // $t20 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:30+16
    assume {:print "$at(131,8162,8178)"} true;
    $t20 := 1;
    assume $IsValid'u64'($t20);

    // $t21 := error::not_found($t20) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:13+34
    call $t21 := $1_error_not_found($t20);
    if ($abort_flag) {
        assume {:print "$at(131,8145,8179)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_abort($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    assume {:print "$track_abort(28,0):", $t21} $t21 == $t21;

    // $t9 := move($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    $t9 := $t21;

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    goto L10;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:117:17+5
    assume {:print "$at(131,4925,4930)"} true;
L7:

    // $t22 := get_global<dispatchable_fungible_asset::TransferRefStore>($t18) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:10+13
    assume {:print "$at(131,8200,8213)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t22 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(131,8200,8213)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t23 := get_field<dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:9+60
    $t23 := $t22->$transfer_ref;

    // opaque begin: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t23, $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    assume {:print "$at(131,4887,5030)"} true;

    // $t24 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    havoc $t24;

    // if ($t24) goto L14 else goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    if ($t24) { goto L14; } else { goto L13; }

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
L14:

    // trace_abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    assume {:print "$at(131,4887,5030)"} true;
    assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    goto L10;

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
L13:

    // opaque end: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t23, $t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    assume {:print "$at(131,4887,5030)"} true;

    // goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:9+555
    assume {:print "$at(131,4583,5138)"} true;
    goto L8;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:123:69+6
    assume {:print "$at(131,5116,5122)"} true;
L0:

    // $t25 := object::object_address<#0>($t0) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:123:46+30
    assume {:print "$at(131,5093,5123)"} true;
    call $t25 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,5093,5123)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // fungible_asset::deposit_internal($t25, $t1) on_abort goto L10 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:123:13+68
    call $1_fungible_asset_deposit_internal($t25, $t1);
    if ($abort_flag) {
        assume {:print "$at(131,5060,5128)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:9+555
    assume {:print "$at(131,4583,5138)"} true;
L8:

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
    assume {:print "$at(131,5143,5144)"} true;
L9:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
    assume {:print "$at(131,5143,5144)"} true;
    return;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
L10:

    // abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
    assume {:print "$at(131,5143,5144)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun dispatchable_fungible_asset::withdraw<fungible_asset::FungibleStore> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1116
procedure {:inline 1} $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: $1_fungible_asset_FungibleAsset;
    var $t7: int;
    var $t8: $1_fungible_asset_FungibleAsset;
    var $t9: $1_function_info_FunctionInfo;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: $1_option_Option'$1_function_info_FunctionInfo';
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: $1_function_info_FunctionInfo;
    var $t22: bool;
    var $t23: $1_object_Object'$1_fungible_asset_Metadata';
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t29: $1_fungible_asset_TransferRef;
    var $t30: $1_fungible_asset_FungibleAsset;
    var $t31: bool;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: int;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$at(131,3059,3060)"} true;
    assume {:print "$track_local(28,11,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(28,11,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(28,11,2):", $t2} $t2 == $t2;

    // $t13 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:79:61+5
    assume {:print "$at(131,3268,3273)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // fungible_asset::withdraw_sanity_check<#0>($t0, $t1, $t13) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:79:9+58
    call $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(131,3216,3274)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t15 := fungible_asset::withdraw_dispatch_function<#0>($t1) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:80:24+49
    assume {:print "$at(131,3299,3348)"} true;
    call $t15 := $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,3299,3348)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[func_opt]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:80:13+8
    assume {:print "$track_local(28,11,10):", $t15} $t15 == $t15;

    // $t16 := opaque begin: option::is_some<function_info::FunctionInfo>($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26
    assume {:print "$at(131,3362,3388)"} true;

    // assume WellFormed($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26
    assume $IsValid'bool'($t16);

    // assume Eq<bool>($t16, option::spec_is_some<function_info::FunctionInfo>($t15)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26
    assume $IsEqual'bool'($t16, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t15));

    // $t16 := opaque end: option::is_some<function_info::FunctionInfo>($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26

    // if ($t16) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:83:17+47
    assume {:print "$at(131,3429,3476)"} true;
L1:

    // $t17 := features::dispatchable_fungible_asset_enabled() on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:83:17+47
    assume {:print "$at(131,3429,3476)"} true;
    call $t17 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,3429,3476)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // if ($t17) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    assume {:print "$at(131,3404,3538)"} true;
    if ($t17) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
L3:

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    assume {:print "$at(131,3404,3538)"} true;
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:84:32+14
    assume {:print "$at(131,3509,3523)"} true;
L2:

    // $t18 := 3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:84:32+14
    assume {:print "$at(131,3509,3523)"} true;
    $t18 := 3;
    assume $IsValid'u64'($t18);

    // $t19 := error::aborted($t18) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:84:17+30
    call $t19 := $1_error_aborted($t18);
    if ($abort_flag) {
        assume {:print "$at(131,3494,3524)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_abort($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    assume {:print "$at(131,3404,3538)"} true;
    assume {:print "$track_abort(28,11):", $t19} $t19 == $t19;

    // $t14 := move($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    $t14 := $t19;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    goto L13;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:86:57+5
    assume {:print "$at(131,3596,3601)"} true;
L4:

    // $t20 := fungible_asset::balance<#0>($t1) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:86:33+30
    assume {:print "$at(131,3572,3602)"} true;
    call $t20 := $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,3572,3602)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[start_balance]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:86:17+13
    assume {:print "$track_local(28,11,12):", $t20} $t20 == $t20;

    // $t21 := opaque begin: option::borrow<function_info::FunctionInfo>($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;

    // assume Identical($t22, option::spec_is_none<function_info::FunctionInfo>($t15)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume ($t22 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t15));

    // if ($t22) goto L15 else goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    if ($t22) { goto L15; } else { goto L14; }

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
L15:

    // assume And(option::spec_is_none<function_info::FunctionInfo>($t15), Eq(262145, $t14)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t15) && $IsEqual'num'(262145, $t14));

    // trace_abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;
    assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    goto L13;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
L14:

    // assume WellFormed($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t21);

    // assume Eq<function_info::FunctionInfo>($t21, option::spec_borrow<function_info::FunctionInfo>($t15)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t21, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t15));

    // $t21 := opaque end: option::borrow<function_info::FunctionInfo>($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25

    // trace_local[func]($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:17+4
    assume {:print "$track_local(28,11,9):", $t21} $t21 == $t21;

    // function_info::load_module_from_function($t21) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(131,3666,3712)"} true;
    call $1_function_info_load_module_from_function($t21);
    if ($abort_flag) {
        assume {:print "$at(131,3666,3712)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t23 := fungible_asset::store_metadata<#0>($t1) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:196:14+40
    assume {:print "$at(131,8011,8051)"} true;
    call $t23 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,8011,8051)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t24 := object::object_address<fungible_asset::Metadata>($t23) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:29+87
    assume {:print "$at(131,7974,8061)"} true;
    call $t24 := $1_object_object_address'$1_fungible_asset_Metadata'($t23);
    if ($abort_flag) {
        assume {:print "$at(131,7974,8061)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[metadata_addr#179]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:13+13
    assume {:print "$track_local(28,11,11):", $t24} $t24 == $t24;

    // $t25 := exists<dispatchable_fungible_asset::TransferRefStore>($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:199:13+6
    assume {:print "$at(131,8092,8098)"} true;
    $t25 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t24);

    // if ($t25) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L6:

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L5:

    // $t26 := 1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:30+16
    assume {:print "$at(131,8162,8178)"} true;
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := error::not_found($t26) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:13+34
    call $t27 := $1_error_not_found($t26);
    if ($abort_flag) {
        assume {:print "$at(131,8145,8179)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_abort($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    assume {:print "$track_abort(28,11):", $t27} $t27 == $t27;

    // $t14 := move($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    $t14 := $t27;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    goto L13;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:90:17+5
    assume {:print "$at(131,3774,3779)"} true;
L7:

    // $t28 := get_global<dispatchable_fungible_asset::TransferRefStore>($t24) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:10+13
    assume {:print "$at(131,8200,8213)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t28 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t24);
    }
    if ($abort_flag) {
        assume {:print "$at(131,8200,8213)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t29 := get_field<dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:9+60
    $t29 := $t28->$transfer_ref;

    // $t30 := opaque begin: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t29, $t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(131,3735,3884)"} true;

    // $t31 := havoc[val]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    havoc $t31;

    // if ($t31) goto L17 else goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    if ($t31) { goto L17; } else { goto L16; }

    // label L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
L17:

    // trace_abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(131,3735,3884)"} true;
    assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    goto L13;

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
L16:

    // assume WellFormed($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(131,3735,3884)"} true;
    assume $IsValid'$1_fungible_asset_FungibleAsset'($t30);

    // $t30 := opaque end: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t29, $t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149

    // trace_local[fa]($t30) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:17+2
    assume {:print "$track_local(28,11,8):", $t30} $t30 == $t30;

    // $t32 := fungible_asset::balance<#0>($t1) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:95:31+30
    assume {:print "$at(131,3916,3946)"} true;
    call $t32 := $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,3916,3946)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[end_balance]($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:95:17+11
    assume {:print "$track_local(28,11,7):", $t32} $t32 == $t32;

    // $t33 := -($t20, $t32) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:45+1
    assume {:print "$at(131,3992,3993)"} true;
    call $t33 := $Sub($t20, $t32);
    if ($abort_flag) {
        assume {:print "$at(131,3992,3993)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t34 := <=($t2, $t33) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:28+2
    call $t34 := $Le($t2, $t33);

    // if ($t34) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    if ($t34) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
L9:

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    assume {:print "$at(131,3960,4040)"} true;
    goto L10;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:75+16
L8:

    // $t35 := 2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:75+16
    assume {:print "$at(131,4022,4038)"} true;
    $t35 := 2;
    assume $IsValid'u64'($t35);

    // $t36 := error::aborted($t35) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:60+32
    call $t36 := $1_error_aborted($t35);
    if ($abort_flag) {
        assume {:print "$at(131,4007,4039)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_abort($t36) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    assume {:print "$at(131,3960,4040)"} true;
    assume {:print "$track_abort(28,11):", $t36} $t36 == $t36;

    // $t14 := move($t36) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    $t14 := $t36;

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    goto L13;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:97:13+2
    assume {:print "$at(131,4054,4056)"} true;
L10:

    // $t6 := $t30 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    assume {:print "$at(131,3358,4169)"} true;
    $t6 := $t30;

    // goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    goto L11;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:99:70+6
    assume {:print "$at(131,4143,4149)"} true;
L0:

    // $t37 := object::object_address<#0>($t1) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:99:47+30
    assume {:print "$at(131,4120,4150)"} true;
    call $t37 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,4120,4150)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t6 := fungible_asset::withdraw_internal($t37, $t2) on_abort goto L13 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:99:13+73
    call $t6 := $1_fungible_asset_withdraw_internal($t37, $t2);
    if ($abort_flag) {
        assume {:print "$at(131,4086,4159)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    assume {:print "$at(131,3358,4169)"} true;
L11:

    // trace_return[0]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    assume {:print "$at(131,3358,4169)"} true;
    assume {:print "$track_return(28,11,0):", $t6} $t6 == $t6;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
    assume {:print "$at(131,4174,4175)"} true;
L12:

    // return $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
    assume {:print "$at(131,4174,4175)"} true;
    $ret0 := $t6;
    return;

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
L13:

    // abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
    assume {:print "$at(131,4174,4175)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// struct primary_fungible_store::DeriveRefPod at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:27:5+75
datatype $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod($metadata_derive_ref: $1_object_DeriveRef)
}
function {:inline} $Update'$1_primary_fungible_store_DeriveRefPod'_metadata_derive_ref(s: $1_primary_fungible_store_DeriveRefPod, x: $1_object_DeriveRef): $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod(x)
}
function $IsValid'$1_primary_fungible_store_DeriveRefPod'(s: $1_primary_fungible_store_DeriveRefPod): bool {
    $IsValid'$1_object_DeriveRef'(s->$metadata_derive_ref)
}
function {:inline} $IsEqual'$1_primary_fungible_store_DeriveRefPod'(s1: $1_primary_fungible_store_DeriveRefPod, s2: $1_primary_fungible_store_DeriveRefPod): bool {
    s1 == s2
}
var $1_primary_fungible_store_DeriveRefPod_$memory: $Memory $1_primary_fungible_store_DeriveRefPod;

// fun primary_fungible_store::balance<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:129:5+244
procedure {:inline 1} $1_primary_fungible_store_balance'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: int;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[account]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:129:5+1
    assume {:print "$at(158,6365,6366)"} true;
    assume {:print "$track_local(29,0,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:129:5+1
    assume {:print "$track_local(29,0,1):", $t1} $t1 == $t1;

    // $t3 := primary_fungible_store::primary_store_exists<#0>($t0, $t1) on_abort goto L4 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:130:13+39
    assume {:print "$at(158,6450,6489)"} true;
    call $t3 := $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,6450,6489)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,0):", $t4} $t4 == $t4;
        goto L4;
    }

    // if ($t3) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:130:9+157
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:131:51+7
    assume {:print "$at(158,6543,6550)"} true;
L1:

    // $t5 := primary_fungible_store::primary_store<#0>($t0, $t1) on_abort goto L4 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:131:37+32
    assume {:print "$at(158,6529,6561)"} true;
    call $t5 := $1_primary_fungible_store_primary_store'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,6529,6561)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,0):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t2 := fungible_asset::balance<fungible_asset::FungibleStore>($t5) on_abort goto L4 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:131:13+57
    call $t2 := $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'($t5);
    if ($abort_flag) {
        assume {:print "$at(158,6505,6562)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,0):", $t4} $t4 == $t4;
        goto L4;
    }

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:130:9+157
    assume {:print "$at(158,6446,6603)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:133:13+1
    assume {:print "$at(158,6592,6593)"} true;
L0:

    // $t6 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:133:13+1
    assume {:print "$at(158,6592,6593)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t2 := $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:130:9+157
    assume {:print "$at(158,6446,6603)"} true;
    $t2 := $t6;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:130:9+157
L2:

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:130:9+157
    assume {:print "$at(158,6446,6603)"} true;
    assume {:print "$track_return(29,0,0):", $t2} $t2 == $t2;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:135:5+1
    assume {:print "$at(158,6608,6609)"} true;
L3:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:135:5+1
    assume {:print "$at(158,6608,6609)"} true;
    $ret0 := $t2;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:135:5+1
L4:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:135:5+1
    assume {:print "$at(158,6608,6609)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::deposit [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:165:5+266
procedure {:inline 1} $1_primary_fungible_store_deposit(_$t0: int, _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:165:5+1
    assume {:print "$at(158,7833,7834)"} true;
    assume {:print "$track_local(29,4,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:165:5+1
    assume {:print "$track_local(29,4,1):", $t1} $t1 == $t1;

    // $t3 := fungible_asset::asset_metadata($t1) on_abort goto L2 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:166:24+35
    assume {:print "$at(158,7934,7969)"} true;
    call $t3 := $1_fungible_asset_asset_metadata($t1);
    if ($abort_flag) {
        assume {:print "$at(158,7934,7969)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,4):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[metadata]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:166:13+8
    assume {:print "$track_local(29,4,2):", $t3} $t3 == $t3;

    // $t5 := primary_fungible_store::ensure_primary_store_exists<fungible_asset::Metadata>($t0, $t3) on_abort goto L2 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:167:21+44
    assume {:print "$at(158,7991,8035)"} true;
    call $t5 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t0, $t3);
    if ($abort_flag) {
        assume {:print "$at(158,7991,8035)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,4):", $t4} $t4 == $t4;
        goto L2;
    }

    // dispatchable_fungible_asset::deposit<fungible_asset::FungibleStore>($t5, $t1) on_abort goto L2 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:168:9+47
    assume {:print "$at(158,8045,8092)"} true;
    call $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,8045,8092)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,4):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:169:5+1
    assume {:print "$at(158,8098,8099)"} true;
L1:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:169:5+1
    assume {:print "$at(158,8098,8099)"} true;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:169:5+1
L2:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:169:5+1
    assume {:print "$at(158,8098,8099)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::withdraw<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:157:5+397
procedure {:inline 1} $1_primary_fungible_store_withdraw'$1_fungible_asset_Metadata'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_Metadata', _$t2: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t3: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t7: $1_fungible_asset_FungibleAsset;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:157:5+1
    assume {:print "$at(158,7356,7357)"} true;
    assume {:print "$track_local(29,19,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:157:5+1
    assume {:print "$track_local(29,19,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:157:5+1
    assume {:print "$track_local(29,19,2):", $t2} $t2 == $t2;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:158:49+25
    assume {:print "$at(158,7521,7546)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(158,7521,7546)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,19):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := primary_fungible_store::ensure_primary_store_exists<#0>($t4, $t1) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:158:21+64
    call $t6 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,7493,7557)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,19):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[store]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:158:13+5
    assume {:print "$track_local(29,19,3):", $t6} $t6 == $t6;

    // primary_fungible_store::may_be_unburn($t0, $t6) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:160:9+27
    assume {:print "$at(158,7651,7678)"} true;
    call $1_primary_fungible_store_may_be_unburn($t0, $t6);
    if ($abort_flag) {
        assume {:print "$at(158,7651,7678)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,19):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := dispatchable_fungible_asset::withdraw<fungible_asset::FungibleStore>($t0, $t6, $t2) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:161:9+59
    assume {:print "$at(158,7688,7747)"} true;
    call $t7 := $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'($t0, $t6, $t2);
    if ($abort_flag) {
        assume {:print "$at(158,7688,7747)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,19):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:161:9+59
    assume {:print "$track_return(29,19,0):", $t7} $t7 == $t7;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:162:5+1
    assume {:print "$at(158,7752,7753)"} true;
L1:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:162:5+1
    assume {:print "$at(158,7752,7753)"} true;
    $ret0 := $t7;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:162:5+1
L2:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:162:5+1
    assume {:print "$at(158,7752,7753)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:72:5+746
procedure {:inline 1} $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $1_object_ConstructorRef;
    var $t3: $1_object_TransferRef;
    var $t4: $1_object_ConstructorRef;
    var $t5: $1_object_DeriveRef;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $1_object_Object'$1_fungible_asset_Metadata';
    var $t10: $1_primary_fungible_store_DeriveRefPod;
    var $t11: $1_object_DeriveRef;
    var $t12: int;
    var $t13: $1_object_ConstructorRef;
    var $t14: $1_object_TransferRef;
    var $t15: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_addr]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:72:5+1
    assume {:print "$at(158,3443,3444)"} true;
    assume {:print "$track_local(29,2,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:72:5+1
    assume {:print "$track_local(29,2,1):", $t1} $t1 == $t1;

    // $t7 := object::object_address<#0>($t1) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:76:29+33
    assume {:print "$at(158,3623,3656)"} true;
    call $t7 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(158,3623,3656)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[metadata_addr]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:76:13+13
    assume {:print "$track_local(29,2,6):", $t7} $t7 == $t7;

    // $t9 := object::address_to_object<fungible_asset::Metadata>($t7) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:77:9+50
    assume {:print "$at(158,3666,3716)"} true;
    call $t9 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t7);
    if ($abort_flag) {
        assume {:print "$at(158,3666,3716)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // drop($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:77:9+50

    // $t10 := get_global<primary_fungible_store::DeriveRefPod>($t7) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:78:27+13
    assume {:print "$at(158,3744,3757)"} true;
    if (!$ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(158,3744,3757)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t11 := get_field<primary_fungible_store::DeriveRefPod>.metadata_derive_ref($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:78:26+63
    $t11 := $t10->$metadata_derive_ref;

    // trace_local[derive_ref]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:78:13+10
    assume {:print "$track_local(29,2,5):", $t11} $t11 == $t11;

    // assume Identical($t12, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<object::DeriveRef>($t11))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:177:9+89
    assume {:print "$at(156,7509,7598)"} true;
    assume ($t12 == $1_object_spec_create_user_derived_object_address($t0, $t11->$self));

    // $t13 := object::create_user_derived_object($t0, $t11) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:79:32+58
    assume {:print "$at(158,3839,3897)"} true;
    call $t13 := $1_object_create_user_derived_object($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(158,3839,3897)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[constructor_ref]($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:79:13+15
    assume {:print "$track_local(29,2,4):", $t13} $t13 == $t13;

    // $t14 := object::generate_transfer_ref($t13) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:81:29+46
    assume {:print "$at(158,4015,4061)"} true;
    call $t14 := $1_object_generate_transfer_ref($t13);
    if ($abort_flag) {
        assume {:print "$at(158,4015,4061)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // object::disable_ungated_transfer($t14) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:82:9+46
    assume {:print "$at(158,4071,4117)"} true;
    call $1_object_disable_ungated_transfer($t14);
    if ($abort_flag) {
        assume {:print "$at(158,4071,4117)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t15 := fungible_asset::create_store<#0>($t13, $t1) on_abort goto L2 with $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:84:9+55
    assume {:print "$at(158,4128,4183)"} true;
    call $t15 := $1_fungible_asset_create_store'$1_fungible_asset_Metadata'($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,4128,4183)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_return[0]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:84:9+55
    assume {:print "$track_return(29,2,0):", $t15} $t15 == $t15;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
    assume {:print "$at(158,4188,4189)"} true;
L1:

    // return $t15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
    assume {:print "$at(158,4188,4189)"} true;
    $ret0 := $t15;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
L2:

    // abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
    assume {:print "$at(158,4188,4189)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store_enabled_fungible_asset [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+694
procedure {:inline 1} $1_primary_fungible_store_create_primary_store_enabled_fungible_asset(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ()
{
    // declare local variables
    var $t7: $signer;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: $signer;
    var $t11: $1_object_DeriveRef;
    var $t12: $1_primary_fungible_store_DeriveRefPod;
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$at(158,2145,2146)"} true;
    assume {:print "$track_local(29,3,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,6):", $t6} $t6 == $t6;

    // $t8 := fungible_asset::add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6) on_abort goto L2 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:43:9+206
    assume {:print "$at(158,2420,2626)"} true;
    call $t8 := $1_fungible_asset_add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(158,2420,2626)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // drop($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:43:9+206

    // $t10 := object::generate_signer($t0) on_abort goto L2 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:52:29+40
    assume {:print "$at(158,2656,2696)"} true;
    call $t10 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(158,2656,2696)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t11 := object::generate_derive_ref($t0) on_abort goto L2 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:54:34+44
    assume {:print "$at(158,2776,2820)"} true;
    call $t11 := $1_object_generate_derive_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(158,2776,2820)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t12 := pack primary_fungible_store::DeriveRefPod($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:53:31+103
    assume {:print "$at(158,2728,2831)"} true;
    $t12 := $1_primary_fungible_store_DeriveRefPod($t11);

    // move_to<primary_fungible_store::DeriveRefPod>($t12, $t10) on_abort goto L2 with $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:53:9+7
    if ($ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_primary_fungible_store_DeriveRefPod_$memory := $ResourceUpdate($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr, $t12);
    }
    if ($abort_flag) {
        assume {:print "$at(158,2706,2713)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
    assume {:print "$at(158,2838,2839)"} true;
L1:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
    assume {:print "$at(158,2838,2839)"} true;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
L2:

    // abort($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
    assume {:print "$at(158,2838,2839)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::ensure_primary_store_exists<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:59:5+407
procedure {:inline 1} $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:59:5+1
    assume {:print "$at(158,2946,2947)"} true;
    assume {:print "$track_local(29,6,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:59:5+1
    assume {:print "$track_local(29,6,1):", $t1} $t1 == $t1;

    // $t4 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L4 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:63:26+38
    assume {:print "$at(158,3125,3163)"} true;
    call $t4 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,3125,3163)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[store_addr]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:63:13+10
    assume {:print "$track_local(29,6,3):", $t4} $t4 == $t4;

    // $t6 := fungible_asset::store_exists($t4) on_abort goto L4 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:13+40
    assume {:print "$at(158,3177,3217)"} true;
    call $t6 := $1_fungible_asset_store_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(158,3177,3217)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t6) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:65:39+10
    assume {:print "$at(158,3259,3269)"} true;
L1:

    // $t2 := object::address_to_object<fungible_asset::FungibleStore>($t4) on_abort goto L4 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:65:13+37
    assume {:print "$at(158,3233,3270)"} true;
    call $t2 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t4);
    if ($abort_flag) {
        assume {:print "$at(158,3233,3270)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    assume {:print "$at(158,3173,3347)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:67:34+5
    assume {:print "$at(158,3321,3326)"} true;
L0:

    // $t2 := primary_fungible_store::create_primary_store<#0>($t0, $t1) on_abort goto L4 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:67:13+37
    assume {:print "$at(158,3300,3337)"} true;
    call $t2 := $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,3300,3337)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    assume {:print "$at(158,3173,3347)"} true;
L2:

    // trace_return[0]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    assume {:print "$at(158,3173,3347)"} true;
    assume {:print "$track_return(29,6,0):", $t2} $t2 == $t2;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
    assume {:print "$at(158,3352,3353)"} true;
L3:

    // return $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
    assume {:print "$at(158,3352,3353)"} true;
    $ret0 := $t2;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
L4:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
    assume {:print "$at(158,3352,3353)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::may_be_unburn [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:259:5+163
procedure {:inline 1} $1_primary_fungible_store_may_be_unburn(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $1_object_TombStone;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:259:5+1
    assume {:print "$at(158,12505,12506)"} true;
    assume {:print "$track_local(29,10,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:259:5+1
    assume {:print "$track_local(29,10,1):", $t1} $t1 == $t1;

    // $t2 := object::is_burnt<fungible_asset::FungibleStore>($t1) on_abort goto L4 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:260:13+23
    assume {:print "$at(158,12583,12606)"} true;
    call $t2 := $1_object_is_burnt'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(158,12583,12606)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,10):", $t3} $t3 == $t3;
        goto L4;
    }

    // if ($t2) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:260:9+82
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:261:28+5
    assume {:print "$at(158,12637,12642)"} true;
L1:

    // assume Identical($t4, select object::Object.inner<object::Object<fungible_asset::FungibleStore>>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:492:9+34
    assume {:print "$at(156,19326,19360)"} true;
    assume ($t4 == $t1->$inner);

    // assume Identical($t5, global<object::TombStone>($t4)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:495:9+58
    assume {:print "$at(156,19461,19519)"} true;
    assume ($t5 == $ResourceValue($1_object_TombStone_$memory, $t4));

    // object::unburn<fungible_asset::FungibleStore>($t0, $t1) on_abort goto L4 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:261:13+28
    assume {:print "$at(158,12622,12650)"} true;
    call $1_object_unburn'$1_fungible_asset_FungibleStore'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,12622,12650)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,10):", $t3} $t3 == $t3;
        goto L4;
    }

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:261:41+1
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:260:9+82
    assume {:print "$at(158,12579,12661)"} true;
L0:

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:262:10+1
    assume {:print "$at(158,12661,12662)"} true;
L2:

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
    assume {:print "$at(158,12667,12668)"} true;
L3:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
    assume {:print "$at(158,12667,12668)"} true;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
L4:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
    assume {:print "$at(158,12667,12668)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:96:5+216
procedure {:inline 1} $1_primary_fungible_store_primary_store'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:96:5+1
    assume {:print "$at(158,4583,4584)"} true;
    assume {:print "$track_local(29,12,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:96:5+1
    assume {:print "$track_local(29,12,1):", $t1} $t1 == $t1;

    // $t2 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:97:21+38
    assume {:print "$at(158,4698,4736)"} true;
    call $t2 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,4698,4736)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,12):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := object::address_to_object<fungible_asset::FungibleStore>($t2) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:98:9+47
    assume {:print "$at(158,4746,4793)"} true;
    call $t4 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t2);
    if ($abort_flag) {
        assume {:print "$at(158,4746,4793)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,12):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:98:9+47
    assume {:print "$track_return(29,12,0):", $t4} $t4 == $t4;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:99:5+1
    assume {:print "$at(158,4798,4799)"} true;
L1:

    // return $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:99:5+1
    assume {:print "$at(158,4798,4799)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:99:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:99:5+1
    assume {:print "$at(158,4798,4799)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store_address<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:89:5+230
procedure {:inline 1} $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:89:5+1
    assume {:print "$at(158,4275,4276)"} true;
    assume {:print "$track_local(29,13,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:89:5+1
    assume {:print "$track_local(29,13,1):", $t1} $t1 == $t1;

    // $t3 := object::object_address<#0>($t1) on_abort goto L2 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:90:29+33
    assume {:print "$at(158,4392,4425)"} true;
    call $t3 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(158,4392,4425)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,13):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[metadata_addr]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:90:13+13
    assume {:print "$track_local(29,13,2):", $t3} $t3 == $t3;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume {:print "$at(158,4435,4499)"} true;

    // assume WellFormed($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t3)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t3));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64

    // trace_return[0]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume {:print "$track_return(29,13,0):", $t5} $t5 == $t5;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$at(158,4504,4505)"} true;
L1:

    // return $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$at(158,4504,4505)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
L2:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$at(158,4504,4505)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store_exists<fungible_asset::Metadata> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:103:5+171
procedure {:inline 1} $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[account]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:103:5+1
    assume {:print "$at(158,4882,4883)"} true;
    assume {:print "$track_local(29,14,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:103:5+1
    assume {:print "$track_local(29,14,1):", $t1} $t1 == $t1;

    // $t2 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:104:38+40
    assume {:print "$at(158,5006,5046)"} true;
    call $t2 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,5006,5046)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,14):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := fungible_asset::store_exists($t2) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:104:9+70
    call $t4 := $1_fungible_asset_store_exists($t2);
    if ($abort_flag) {
        assume {:print "$at(158,4977,5047)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,14):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:104:9+70
    assume {:print "$track_return(29,14,0):", $t4} $t4 == $t4;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:105:5+1
    assume {:print "$at(158,5052,5053)"} true;
L1:

    // return $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:105:5+1
    assume {:print "$at(158,5052,5053)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:105:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:105:5+1
    assume {:print "$at(158,5052,5053)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:72:10+234
function {:inline} $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(val: int, supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    ($1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'(supply) ==> $IsEqual'u64'(val, $1_optional_aggregator_optional_aggregator_value($1_option_spec_borrow'$1_optional_aggregator_OptionalAggregator'(supply))))
}

// struct coin::DepositEvent at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:202:5+64
datatype $1_coin_DepositEvent {
    $1_coin_DepositEvent($amount: int)
}
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:207:5+65
datatype $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent($amount: int)
}
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// struct coin::Coin<aptos_coin::AptosCoin> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:120:5+112
datatype $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'($value: int)
}
function {:inline} $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value(s: $1_coin_Coin'$1_aptos_coin_AptosCoin', x: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s1: $1_coin_Coin'$1_aptos_coin_AptosCoin', s2: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::CoinConversionMap at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:241:5+111
datatype $1_coin_CoinConversionMap {
    $1_coin_CoinConversionMap($coin_to_fungible_asset_map: Table int ($1_object_Object'$1_fungible_asset_Metadata'))
}
function {:inline} $Update'$1_coin_CoinConversionMap'_coin_to_fungible_asset_map(s: $1_coin_CoinConversionMap, x: Table int ($1_object_Object'$1_fungible_asset_Metadata')): $1_coin_CoinConversionMap {
    $1_coin_CoinConversionMap(x)
}
function $IsValid'$1_coin_CoinConversionMap'(s: $1_coin_CoinConversionMap): bool {
    $IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(s->$coin_to_fungible_asset_map)
}
function {:inline} $IsEqual'$1_coin_CoinConversionMap'(s1: $1_coin_CoinConversionMap, s2: $1_coin_CoinConversionMap): bool {
    s1 == s2
}
var $1_coin_CoinConversionMap_$memory: $Memory $1_coin_CoinConversionMap;

// struct coin::CoinDeposit at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:171:5+116
datatype $1_coin_CoinDeposit {
    $1_coin_CoinDeposit($coin_type: $1_string_String, $account: int, $amount: int)
}
function {:inline} $Update'$1_coin_CoinDeposit'_coin_type(s: $1_coin_CoinDeposit, x: $1_string_String): $1_coin_CoinDeposit {
    $1_coin_CoinDeposit(x, s->$account, s->$amount)
}
function {:inline} $Update'$1_coin_CoinDeposit'_account(s: $1_coin_CoinDeposit, x: int): $1_coin_CoinDeposit {
    $1_coin_CoinDeposit(s->$coin_type, x, s->$amount)
}
function {:inline} $Update'$1_coin_CoinDeposit'_amount(s: $1_coin_CoinDeposit, x: int): $1_coin_CoinDeposit {
    $1_coin_CoinDeposit(s->$coin_type, s->$account, x)
}
function $IsValid'$1_coin_CoinDeposit'(s: $1_coin_CoinDeposit): bool {
    $IsValid'$1_string_String'(s->$coin_type)
      && $IsValid'address'(s->$account)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_CoinDeposit'(s1: $1_coin_CoinDeposit, s2: $1_coin_CoinDeposit): bool {
    $IsEqual'$1_string_String'(s1->$coin_type, s2->$coin_type)
    && $IsEqual'address'(s1->$account, s2->$account)
    && $IsEqual'u64'(s1->$amount, s2->$amount)}

// struct coin::CoinInfo<aptos_coin::AptosCoin> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:155:5+548
datatype $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator')
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_name(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(x, s->$symbol, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_symbol(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, x, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_decimals(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: int): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, x, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, s->$decimals, x)
}
function $IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s->$supply)
}
function {:inline} $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1->$supply, s2->$supply)}
var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

// struct coin::CoinStore<aptos_coin::AptosCoin> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:138:5+206
datatype $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin: $1_coin_Coin'$1_aptos_coin_AptosCoin', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent')
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(x, s->$frozen, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_frozen(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: bool): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, x, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, x, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, s->$deposit_events, x)
}
function $IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s->$coin)
      && $IsValid'bool'(s->$frozen)
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s->$deposit_events)
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s->$withdraw_events)
}
function {:inline} $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';

// struct coin::CoinWithdraw at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:179:5+117
datatype $1_coin_CoinWithdraw {
    $1_coin_CoinWithdraw($coin_type: $1_string_String, $account: int, $amount: int)
}
function {:inline} $Update'$1_coin_CoinWithdraw'_coin_type(s: $1_coin_CoinWithdraw, x: $1_string_String): $1_coin_CoinWithdraw {
    $1_coin_CoinWithdraw(x, s->$account, s->$amount)
}
function {:inline} $Update'$1_coin_CoinWithdraw'_account(s: $1_coin_CoinWithdraw, x: int): $1_coin_CoinWithdraw {
    $1_coin_CoinWithdraw(s->$coin_type, x, s->$amount)
}
function {:inline} $Update'$1_coin_CoinWithdraw'_amount(s: $1_coin_CoinWithdraw, x: int): $1_coin_CoinWithdraw {
    $1_coin_CoinWithdraw(s->$coin_type, s->$account, x)
}
function $IsValid'$1_coin_CoinWithdraw'(s: $1_coin_CoinWithdraw): bool {
    $IsValid'$1_string_String'(s->$coin_type)
      && $IsValid'address'(s->$account)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_CoinWithdraw'(s1: $1_coin_CoinWithdraw, s2: $1_coin_CoinWithdraw): bool {
    $IsEqual'$1_string_String'(s1->$coin_type, s2->$coin_type)
    && $IsEqual'address'(s1->$account, s2->$account)
    && $IsEqual'u64'(s1->$amount, s2->$amount)}

// struct coin::MigrationFlag at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:229:5+31
datatype $1_coin_MigrationFlag {
    $1_coin_MigrationFlag($dummy_field: bool)
}
function {:inline} $Update'$1_coin_MigrationFlag'_dummy_field(s: $1_coin_MigrationFlag, x: bool): $1_coin_MigrationFlag {
    $1_coin_MigrationFlag(x)
}
function $IsValid'$1_coin_MigrationFlag'(s: $1_coin_MigrationFlag): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_coin_MigrationFlag'(s1: $1_coin_MigrationFlag, s2: $1_coin_MigrationFlag): bool {
    s1 == s2
}
var $1_coin_MigrationFlag_$memory: $Memory $1_coin_MigrationFlag;

// struct coin::PairCreation at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:222:5+122
datatype $1_coin_PairCreation {
    $1_coin_PairCreation($coin_type: $1_type_info_TypeInfo, $fungible_asset_metadata_address: int)
}
function {:inline} $Update'$1_coin_PairCreation'_coin_type(s: $1_coin_PairCreation, x: $1_type_info_TypeInfo): $1_coin_PairCreation {
    $1_coin_PairCreation(x, s->$fungible_asset_metadata_address)
}
function {:inline} $Update'$1_coin_PairCreation'_fungible_asset_metadata_address(s: $1_coin_PairCreation, x: int): $1_coin_PairCreation {
    $1_coin_PairCreation(s->$coin_type, x)
}
function $IsValid'$1_coin_PairCreation'(s: $1_coin_PairCreation): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$coin_type)
      && $IsValid'address'(s->$fungible_asset_metadata_address)
}
function {:inline} $IsEqual'$1_coin_PairCreation'(s1: $1_coin_PairCreation, s2: $1_coin_PairCreation): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$coin_type, s2->$coin_type)
    && $IsEqual'address'(s1->$fungible_asset_metadata_address, s2->$fungible_asset_metadata_address)}

// struct coin::PairedCoinType at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:247:5+61
datatype $1_coin_PairedCoinType {
    $1_coin_PairedCoinType($type: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_coin_PairedCoinType'_type(s: $1_coin_PairedCoinType, x: $1_type_info_TypeInfo): $1_coin_PairedCoinType {
    $1_coin_PairedCoinType(x)
}
function $IsValid'$1_coin_PairedCoinType'(s: $1_coin_PairedCoinType): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type)
}
function {:inline} $IsEqual'$1_coin_PairedCoinType'(s1: $1_coin_PairedCoinType, s2: $1_coin_PairedCoinType): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type, s2->$type)}
var $1_coin_PairedCoinType_$memory: $Memory $1_coin_PairedCoinType;

// struct coin::PairedFungibleAssetRefs at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:253:5+171
datatype $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs($mint_ref_opt: $1_option_Option'$1_fungible_asset_MintRef', $transfer_ref_opt: $1_option_Option'$1_fungible_asset_TransferRef', $burn_ref_opt: $1_option_Option'$1_fungible_asset_BurnRef')
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_mint_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_MintRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(x, s->$transfer_ref_opt, s->$burn_ref_opt)
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_transfer_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_TransferRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(s->$mint_ref_opt, x, s->$burn_ref_opt)
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_burn_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_BurnRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(s->$mint_ref_opt, s->$transfer_ref_opt, x)
}
function $IsValid'$1_coin_PairedFungibleAssetRefs'(s: $1_coin_PairedFungibleAssetRefs): bool {
    $IsValid'$1_option_Option'$1_fungible_asset_MintRef''(s->$mint_ref_opt)
      && $IsValid'$1_option_Option'$1_fungible_asset_TransferRef''(s->$transfer_ref_opt)
      && $IsValid'$1_option_Option'$1_fungible_asset_BurnRef''(s->$burn_ref_opt)
}
function {:inline} $IsEqual'$1_coin_PairedFungibleAssetRefs'(s1: $1_coin_PairedFungibleAssetRefs, s2: $1_coin_PairedFungibleAssetRefs): bool {
    $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''(s1->$mint_ref_opt, s2->$mint_ref_opt)
    && $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''(s1->$transfer_ref_opt, s2->$transfer_ref_opt)
    && $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''(s1->$burn_ref_opt, s2->$burn_ref_opt)}
var $1_coin_PairedFungibleAssetRefs_$memory: $Memory $1_coin_PairedFungibleAssetRefs;

// struct coin::supply<aptos_coin::AptosCoin> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:63:9+29
datatype $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';

// struct coin::aggregate_supply<aptos_coin::AptosCoin> at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:64:9+39
datatype $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';

// fun coin::extract<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:970:5+434
procedure {:inline 1} $1_coin_extract'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t10: int;
    var $t11: int;
    var $t12: $Mutation (int);
    var $t13: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t14: int;
    var $t15: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t16: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:970:5+1
    assume {:print "$at(105,41178,41179)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(30,20,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[amount]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:970:5+1
    assume {:print "$track_local(30,20,1):", $t1} $t1 == $t1;

    // $t2 := get_field<coin::Coin<#0>>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:17+10
    assume {:print "$at(105,41281,41291)"} true;
    $t2 := $Dereference($t0)->$value;

    // $t3 := >=($t2, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:28+2
    call $t3 := $Ge($t2, $t1);

    // if ($t3) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
    assume {:print "$at(105,41273,41350)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
L0:

    // drop($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
    assume {:print "$at(105,41273,41350)"} true;

    // $t4 := 6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:63+21
    $t4 := 6;
    assume $IsValid'u64'($t4);

    // $t5 := error::invalid_argument($t4) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:39+46
    call $t5 := $1_error_invalid_argument($t4);
    if ($abort_flag) {
        assume {:print "$at(105,41303,41349)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(30,20):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
    assume {:print "$at(105,41273,41350)"} true;
    assume {:print "$track_abort(30,20):", $t5} $t5 == $t5;

    // $t6 := move($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
    $t6 := $t5;

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:971:9+77
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:972:9+81
    assume {:print "$at(105,41360,41441)"} true;
L2:

    // assume Identical($t7, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t1))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:973:13+52
    assume {:print "$at(105,41379,41431)"} true;
    assume ($t7 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v - $t1)));

    // assume Identical($t8, 0x0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:973:13+52
    assume ($t8 == 0);

    // $t9 := borrow_global<coin::Ghost$supply<#0>>($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:973:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t8));
    }

    // write_ref($t9, $t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:973:13+52
    $t9 := $UpdateMutation($t9, $t7);

    // write_back[coin::Ghost$supply<#0>@]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:973:13+52
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t10 := get_field<coin::Coin<#0>>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:975:22+10
    assume {:print "$at(105,41464,41474)"} true;
    $t10 := $Dereference($t0)->$value;

    // $t11 := -($t10, $t1) on_abort goto L4 with $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:975:33+1
    call $t11 := $Sub($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(105,41475,41476)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(30,20):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t12 := borrow_field<coin::Coin<#0>>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:975:9+10
    $t12 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t12, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:975:9+32
    $t12 := $UpdateMutation($t12, $t11);

    // write_back[Reference($t0).value (u64)]($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:975:9+32
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t12)));

    // trace_local[coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:975:9+32
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(30,20,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // assume Identical($t13, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t1))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:977:13+52
    assume {:print "$at(105,41512,41564)"} true;
    assume ($t13 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $t1)));

    // assume Identical($t14, 0x0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:977:13+52
    assume ($t14 == 0);

    // $t15 := borrow_global<coin::Ghost$supply<#0>>($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:977:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t14), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t14));
    }

    // write_ref($t15, $t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:977:13+52
    $t15 := $UpdateMutation($t15, $t13);

    // write_back[coin::Ghost$supply<#0>@]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:977:13+52
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // $t16 := pack coin::Coin<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:979:9+22
    assume {:print "$at(105,41584,41606)"} true;
    $t16 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_return[0]($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:979:9+22
    assume {:print "$track_return(30,20,0):", $t16} $t16 == $t16;

    // trace_local[coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:979:9+22
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(30,20,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:980:5+1
    assume {:print "$at(105,41611,41612)"} true;
L3:

    // return $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:980:5+1
    assume {:print "$at(105,41611,41612)"} true;
    $ret0 := $t16;
    $ret1 := $t0;
    return;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:980:5+1
L4:

    // abort($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:980:5+1
    assume {:print "$at(105,41611,41612)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::transfer<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1150:5+259
procedure {:inline 1} $1_coin_transfer'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t6: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: int;
    var $t11: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t12: int;
    var $t13: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t14: int;
    var $t15: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:533:9+49
    assume {:print "$at(106,23296,23345)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<coin::CoinStore<#0>>($t4)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:534:9+69
    assume {:print "$at(106,23354,23423)"} true;
    assume ($t5 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t4));

    // assume Identical($t6, global<coin::CoinStore<#0>>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:536:9+52
    assume {:print "$at(106,23520,23572)"} true;
    assume ($t6 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // trace_local[from]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1150:5+1
    assume {:print "$at(105,48219,48220)"} true;
    assume {:print "$track_local(30,56,0):", $t0} $t0 == $t0;

    // trace_local[to]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1150:5+1
    assume {:print "$track_local(30,56,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1150:5+1
    assume {:print "$track_local(30,56,2):", $t2} $t2 == $t2;

    // assume Identical($t7, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:562:9+47
    assume {:print "$at(106,24641,24688)"} true;
    assume ($t7 == $1_signer_$address_of($t0));

    // assume Identical($t8, global<coin::CoinStore<#0>>($t7)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:563:9+59
    assume {:print "$at(106,24697,24756)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t7));

    // assume Identical($t9, select coin::Coin.value<coin::Coin<#0>>(select coin::CoinStore.coin<coin::CoinStore<#0>>($t8))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:564:9+36
    assume {:print "$at(106,24765,24801)"} true;
    assume ($t9 == $t8->$coin->$value);

    // assume Identical($t10, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:572:9+47
    assume {:print "$at(106,25098,25145)"} true;
    assume ($t10 == $1_signer_$address_of($t0));

    // assume Identical($t11, global<coin::CoinStore<#0>>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:573:9+59
    assume {:print "$at(106,25154,25213)"} true;
    assume ($t11 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t10));

    // assume Identical($t12, select coin::Coin.value<coin::Coin<#0>>(select coin::CoinStore.coin<coin::CoinStore<#0>>($t11))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:574:9+36
    assume {:print "$at(106,25222,25258)"} true;
    assume ($t12 == $t11->$coin->$value);

    // $t13 := coin::withdraw<#0>($t0, $t2) on_abort goto L2 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1155:20+32
    assume {:print "$at(105,48412,48444)"} true;
    call $t13 := $1_coin_withdraw'$1_aptos_coin_AptosCoin'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(105,48412,48444)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(30,56):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[coin]($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1155:13+4
    assume {:print "$track_local(30,56,3):", $t13} $t13 == $t13;

    // assume Identical($t15, global<coin::CoinStore<#0>>($t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:336:9+59
    assume {:print "$at(106,14990,15049)"} true;
    assume ($t15 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // coin::deposit<#0>($t1, $t13) on_abort goto L2 with $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1156:9+17
    assume {:print "$at(105,48454,48471)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(105,48454,48471)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(30,56):", $t14} $t14 == $t14;
        goto L2;
    }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1157:5+1
    assume {:print "$at(105,48477,48478)"} true;
L1:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1157:5+1
    assume {:print "$at(105,48477,48478)"} true;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1157:5+1
L2:

    // abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1157:5+1
    assume {:print "$at(105,48477,48478)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun coin::name<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:799:5+142
procedure {:inline 1} $1_coin_name'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $t3: int;
    var $t4: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#107: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#108: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#109: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:205:9+58
    assume {:print "$at(106,10157,10215)"} true;
    assume ($t0 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24
    assume {:print "$at(105,33748,33772)"} true;

    // @109 := save_mem(coin::CoinInfo<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#109 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @107 := save_mem(coin::supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#107 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @108 := save_mem(coin::aggregate_supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#108 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@107]<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@108]<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global[@109]<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#107, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#108, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#109, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:43+24

    // $t2 := get_global<coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:9+13
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(105,33714,33727)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(30,44):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := get_field<coin::CoinInfo<#0>>.name($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:9+64
    $t4 := $t2->$name;

    // trace_return[0]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:800:9+64
    assume {:print "$track_return(30,44,0):", $t4} $t4 == $t4;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:801:5+1
    assume {:print "$at(105,33783,33784)"} true;
L1:

    // return $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:801:5+1
    assume {:print "$at(105,33783,33784)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:801:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:801:5+1
    assume {:print "$at(105,33783,33784)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::symbol<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:805:5+146
procedure {:inline 1} $1_coin_symbol'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $t3: int;
    var $t4: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#101: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#102: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#103: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:205:9+58
    assume {:print "$at(106,10157,10215)"} true;
    assume ($t0 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24
    assume {:print "$at(105,33989,34013)"} true;

    // @103 := save_mem(coin::CoinInfo<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#103 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @101 := save_mem(coin::supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#101 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @102 := save_mem(coin::aggregate_supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#102 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@101]<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@102]<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global[@103]<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#101, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#102, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#103, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:43+24

    // $t2 := get_global<coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:9+13
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(105,33955,33968)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(30,55):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := get_field<coin::CoinInfo<#0>>.symbol($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:9+66
    $t4 := $t2->$symbol;

    // trace_return[0]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:806:9+66
    assume {:print "$track_return(30,55,0):", $t4} $t4 == $t4;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:807:5+1
    assume {:print "$at(105,34026,34027)"} true;
L1:

    // return $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:807:5+1
    assume {:print "$at(105,34026,34027)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:807:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:807:5+1
    assume {:print "$at(105,34026,34027)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::decimals<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:813:5+138
procedure {:inline 1} $1_coin_decimals'$1_aptos_coin_AptosCoin'() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    var $t3: int;
    var $t4: int;
    var $temp_0'u8': int;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#95: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#96: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#97: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:205:9+58
    assume {:print "$at(106,10157,10215)"} true;
    assume ($t0 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24
    assume {:print "$at(105,34358,34382)"} true;

    // @97 := save_mem(coin::CoinInfo<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#97 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @95 := save_mem(coin::supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#95 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @96 := save_mem(coin::aggregate_supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#96 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@95]<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@96]<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global[@97]<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#95, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#96, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#97, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:43+24

    // $t2 := get_global<coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:9+13
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(105,34324,34337)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(30,12):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := get_field<coin::CoinInfo<#0>>.decimals($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:9+68
    $t4 := $t2->$decimals;

    // trace_return[0]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:814:9+68
    assume {:print "$track_return(30,12,0):", $t4} $t4 == $t4;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:815:5+1
    assume {:print "$at(105,34397,34398)"} true;
L1:

    // return $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:815:5+1
    assume {:print "$at(105,34397,34398)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:815:5+1
L2:

    // abort($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:815:5+1
    assume {:print "$at(105,34397,34398)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::balance<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:727:5+392
procedure {:inline 1} $1_coin_balance'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t5: int;
    var $t6: bool;
    var $t7: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t8: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t11: bool;
    var $t12: $Mutation ($1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'');
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t0: int;
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:727:5+1
    assume {:print "$at(105,30934,30935)"} true;
    assume {:print "$track_local(30,1,0):", $t0} $t0 == $t0;

    // $t4 := coin::paired_metadata<#0>() on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:728:31+27
    assume {:print "$at(105,31054,31081)"} true;
    call $t4 := $1_coin_paired_metadata'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,31054,31081)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,1):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[paired_metadata]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:728:13+15
    assume {:print "$track_local(30,1,4):", $t4} $t4 == $t4;

    // trace_local[owner#116]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:756:39+5
    assume {:print "$at(105,32101,32106)"} true;
    assume {:print "$track_local(30,1,3):", $t0} $t0 == $t0;

    // $t6 := exists<coin::CoinStore<#0>>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:13+6
    assume {:print "$at(105,32136,32142)"} true;
    $t6 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // if ($t6) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:48+5
    assume {:print "$at(105,32221,32226)"} true;
L1:

    // $t7 := get_global<coin::CoinStore<#0>>($t0) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:13+13
    assume {:print "$at(105,32186,32199)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(105,32186,32199)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,1):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t8 := get_field<coin::CoinStore<#0>>.coin($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:13+46
    $t8 := $t7->$coin;

    // $t1 := get_field<coin::Coin<#0>>.value($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:13+52
    $t1 := $t8->$value;

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
    assume {:print "$at(105,32132,32279)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:760:13+1
    assume {:print "$at(105,32268,32269)"} true;
L0:

    // $t9 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:760:13+1
    assume {:print "$at(105,32268,32269)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t1 := $t9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
    assume {:print "$at(105,32132,32279)"} true;
    $t1 := $t9;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:61+16
    assume {:print "$at(105,31143,31159)"} true;
L2:

    // $t10 := copy($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:61+16
    assume {:print "$at(105,31143,31159)"} true;
    $t10 := $t4;

    // $t11 := opaque begin: option::is_some<object::Object<fungible_asset::Metadata>>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:45+33

    // assume WellFormed($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:45+33
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<object::Object<fungible_asset::Metadata>>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:45+33
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''($t10));

    // $t11 := opaque end: option::is_some<object::Object<fungible_asset::Metadata>>($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:45+33

    // if ($t11) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:41+197
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:731:17+5
    assume {:print "$at(105,31225,31230)"} true;
L4:

    // $t12 := borrow_local($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:33+20
    assume {:print "$at(105,31264,31284)"} true;
    $t12 := $Mutation($Local(4), EmptyVec(), $t4);

    // $t13 := opaque begin: option::extract<object::Object<fungible_asset::Metadata>>($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37

    // $t14 := read_ref($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    $t14 := $Dereference($t12);

    // assume Identical($t15, option::spec_is_none<object::Object<fungible_asset::Metadata>>($t12)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume ($t15 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($Dereference($t12)));

    // if ($t15) goto L9 else goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    if ($t15) { goto L9; } else { goto L10; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
L9:

    // assume And(option::spec_is_none<object::Object<fungible_asset::Metadata>>($t12), Eq(262145, $t5)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume {:print "$at(105,31248,31285)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($Dereference($t12)) && $IsEqual'num'(262145, $t5));

    // trace_abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume {:print "$at(105,31248,31285)"} true;
    assume {:print "$track_abort(30,1):", $t5} $t5 == $t5;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    goto L7;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
L8:

    // $t12 := havoc[mut]() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume {:print "$at(105,31248,31285)"} true;
    havoc $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''';
    $t12 := $UpdateMutation($t12, $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''');

    // assume And(WellFormed($t12), Le(Len<object::Object<fungible_asset::Metadata>>(select option::Option.vec($t12)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($Dereference($t12)) && (LenVec($Dereference($t12)->$vec) <= 1));

    // assume WellFormed($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t13);

    // assume Eq<object::Object<fungible_asset::Metadata>>($t13, option::spec_borrow<object::Object<fungible_asset::Metadata>>($t14)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t13, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t14));

    // assume option::spec_is_none<object::Object<fungible_asset::Metadata>>($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($Dereference($t12));

    // $t13 := opaque end: option::extract<object::Object<fungible_asset::Metadata>>($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37

    // pack_ref_deep($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37

    // write_back[LocalRoot($t4)@]($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    $t4 := $Dereference($t12);

    // trace_local[paired_metadata]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:732:17+37
    assume {:print "$track_local(30,1,4):", $t4} $t4 == $t4;

    // $t2 := primary_fungible_store::balance<fungible_asset::Metadata>($t0, $t13) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:730:13+123
    assume {:print "$at(105,31176,31299)"} true;
    call $t2 := $1_primary_fungible_store_balance'$1_fungible_asset_Metadata'($t0, $t13);
    if ($abort_flag) {
        assume {:print "$at(105,31176,31299)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,1):", $t5} $t5 == $t5;
        goto L7;
    }

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:41+197
    assume {:print "$at(105,31123,31320)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:734:18+1
    assume {:print "$at(105,31317,31318)"} true;
L3:

    // $t16 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:734:18+1
    assume {:print "$at(105,31317,31318)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t2 := $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:41+197
    assume {:print "$at(105,31123,31320)"} true;
    $t2 := $t16;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
    assume {:print "$at(105,32132,32279)"} true;
L5:

    // $t17 := +($t1, $t2) on_abort goto L7 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:39+1
    assume {:print "$at(105,31121,31122)"} true;
    call $t17 := $AddU64($t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(105,31121,31122)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,1):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_return[0]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:729:9+229
    assume {:print "$track_return(30,1,0):", $t17} $t17 == $t17;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:735:5+1
    assume {:print "$at(105,31325,31326)"} true;
L6:

    // return $t17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:735:5+1
    assume {:print "$at(105,31325,31326)"} true;
    $ret0 := $t17;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:735:5+1
L7:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:735:5+1
    assume {:print "$at(105,31325,31326)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

    // label L10 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L10:

    // drop($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L8 at <internal>:1:1+10
    goto L8;

}

// fun coin::burn_internal<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1260:5+574
procedure {:inline 1} $1_coin_burn_internal'$1_aptos_coin_AptosCoin'(_$t0: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t3: int;
    var $t4: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: $Mutation ($1_coin_CoinInfo'$1_aptos_coin_AptosCoin');
    var $t12: int;
    var $t13: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t14: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t15: bool;
    var $t16: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t17: int;
    var $t0: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'u64': int;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#46: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#47: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#48: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:260:9+58
    assume {:print "$at(106,11994,12052)"} true;
    assume ($t3 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // trace_local[coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1260:5+1
    assume {:print "$at(105,52387,52388)"} true;
    assume {:print "$track_local(30,4,0):", $t0} $t0 == $t0;

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value<coin::Coin<#0>>($t0)))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1262:13+56
    assume {:print "$at(105,52489,52545)"} true;
    assume ($t4 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v - $t0->$value)));

    // assume Identical($t5, 0x0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1262:13+56
    assume ($t5 == 0);

    // $t6 := borrow_global<coin::Ghost$supply<#0>>($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1262:13+56
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5));
    }

    // write_ref($t6, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1262:13+56
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[coin::Ghost$supply<#0>@]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1262:13+56
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := unpack coin::Coin<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1264:13+22
    assume {:print "$at(105,52569,52591)"} true;
    $t7 := $t0->$value;

    // trace_local[amount]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1264:27+6
    assume {:print "$track_local(30,4,1):", $t7} $t7 == $t7;

    // $t8 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1265:23+1
    assume {:print "$at(105,52622,52623)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // $t9 := !=($t7, $t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1265:20+2
    $t9 := !$IsEqual'u64'($t7, $t8);

    // if ($t9) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1265:9+331
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    assume {:print "$at(105,52701,52725)"} true;
L1:

    // $t10 := opaque begin: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    assume {:print "$at(105,52701,52725)"} true;

    // @48 := save_mem(coin::CoinInfo<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#48 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @46 := save_mem(coin::supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#46 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @47 := save_mem(coin::aggregate_supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#47 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    assume $IsValid'address'($t10);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@46]<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@47]<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global[@48]<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#46, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#47, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#48, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t10, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24
    assume $IsEqual'address'($t10, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t10 := opaque end: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:75+24

    // $t11 := borrow_global<coin::CoinInfo<#0>>($t10) on_abort goto L5 with $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:37+17
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(105,52663,52680)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(30,4):", $t12} $t12 == $t12;
        goto L5;
    }

    // $t13 := borrow_field<coin::CoinInfo<#0>>.supply($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:32+75
    $t13 := $ChildMutation($t11, 3, $Dereference($t11)->$supply);

    // trace_local[maybe_supply]($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1266:17+12
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t13);
    assume {:print "$track_local(30,4,2):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t14 := read_ref($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:33+12
    assume {:print "$at(105,52767,52779)"} true;
    $t14 := $Dereference($t13);

    // $t15 := opaque begin: option::is_some<optional_aggregator::OptionalAggregator>($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:17+29

    // assume WellFormed($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:17+29
    assume $IsValid'bool'($t15);

    // assume Eq<bool>($t15, option::spec_is_some<optional_aggregator::OptionalAggregator>($t14)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:17+29
    assume $IsEqual'bool'($t15, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t14));

    // $t15 := opaque end: option::is_some<optional_aggregator::OptionalAggregator>($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:17+29

    // if ($t15) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:13+181
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1268:49+12
    assume {:print "$at(105,52832,52844)"} true;
L3:

    // $t16 := option::borrow_mut<optional_aggregator::OptionalAggregator>($t13) on_abort goto L5 with $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1268:30+32
    assume {:print "$at(105,52813,52845)"} true;
    call $t16,$t13 := $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t13);
    if ($abort_flag) {
        assume {:print "$at(105,52813,52845)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(30,4):", $t12} $t12 == $t12;
        goto L5;
    }

    // $t17 := (u128)($t7) on_abort goto L5 with $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1269:50+16
    assume {:print "$at(105,52896,52912)"} true;
    call $t17 := $CastU128($t7);
    if ($abort_flag) {
        assume {:print "$at(105,52896,52912)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(30,4):", $t12} $t12 == $t12;
        goto L5;
    }

    // optional_aggregator::sub($t16, $t17) on_abort goto L5 with $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1269:17+50
    call $t16 := $1_optional_aggregator_sub($t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(105,52863,52913)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(30,4):", $t12} $t12 == $t12;
        goto L5;
    }

    // write_back[Reference($t13).vec (vector<optional_aggregator::OptionalAggregator>)/[]]($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1269:17+50
    $t13 := $UpdateMutation($t13, (var $$sel0 := $Dereference($t13)->$vec; $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec($Dereference($t13), UpdateVec($$sel0, ReadVec($t16->p, LenVec($t13->p) + 1), $Dereference($t16)))));

    // write_back[Reference($t11).supply (option::Option<optional_aggregator::OptionalAggregator>)]($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1269:17+50
    $t11 := $UpdateMutation($t11, $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply($Dereference($t11), $Dereference($t13)));

    // pack_ref_deep($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1269:17+50

    // write_back[coin::CoinInfo<#0>@]($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1269:17+50
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1269:67+1
    goto L0;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:13+181
    assume {:print "$at(105,52747,52928)"} true;
L2:

    // pack_ref_deep($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:13+181
    assume {:print "$at(105,52747,52928)"} true;

    // drop($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1267:13+181

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1272:9+6
    assume {:print "$at(105,52949,52955)"} true;
L0:

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1272:9+6
    assume {:print "$at(105,52949,52955)"} true;
    assume {:print "$track_return(30,4,0):", $t7} $t7 == $t7;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1273:5+1
    assume {:print "$at(105,52960,52961)"} true;
L4:

    // return $t7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1273:5+1
    assume {:print "$at(105,52960,52961)"} true;
    $ret0 := $t7;
    return;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1273:5+1
L5:

    // abort($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1273:5+1
    assume {:print "$at(105,52960,52961)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun coin::deposit<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:889:5+1322
procedure {:inline 1} $1_coin_deposit'$1_aptos_coin_AptosCoin'(_$t0: int, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t6: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t7: int;
    var $t8: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t9: bool;
    var $t10: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t11: int;
    var $t12: bool;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: $1_coin_CoinDeposit;
    var $t20: $Mutation ($1_event_EventHandle'$1_coin_DepositEvent');
    var $t21: int;
    var $t22: $1_coin_DepositEvent;
    var $t23: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t24: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t25: bool;
    var $t26: $1_object_Object'$1_fungible_asset_Metadata';
    var $t27: bool;
    var $t28: int;
    var $t29: bool;
    var $t30: bool;
    var $t31: bool;
    var $t32: bool;
    var $t33: bool;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: $1_fungible_asset_FungibleAsset;
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t8, global<coin::CoinStore<#0>>($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:336:9+59
    assume {:print "$at(106,14990,15049)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));

    // trace_local[account_addr]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:889:5+1
    assume {:print "$at(105,37462,37463)"} true;
    assume {:print "$track_local(30,13,0):", $t0} $t0 == $t0;

    // trace_local[coin]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:889:5+1
    assume {:print "$track_local(30,13,1):", $t1} $t1 == $t1;

    // $t9 := exists<coin::CoinStore<#0>>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:893:13+6
    assume {:print "$at(105,37620,37626)"} true;
    $t9 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // if ($t9) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:893:9+1162
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:894:69+12
    assume {:print "$at(105,37733,37745)"} true;
L1:

    // $t10 := borrow_global<coin::CoinStore<#0>>($t0) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:894:30+17
    assume {:print "$at(105,37694,37711)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(105,37694,37711)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // trace_local[coin_store]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:894:17+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t10);
    assume {:print "$track_local(30,13,5):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t12 := get_field<coin::CoinStore<#0>>.frozen($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:896:18+17
    assume {:print "$at(105,37786,37803)"} true;
    $t12 := $Dereference($t10)->$frozen;

    // $t13 := !($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:896:17+1
    call $t13 := $Not($t12);

    // if ($t13) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
    assume {:print "$at(105,37760,37869)"} true;
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
L3:

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
    assume {:print "$at(105,37760,37869)"} true;
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
L2:

    // drop($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
    assume {:print "$at(105,37760,37869)"} true;

    // $t14 := 10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:897:42+7
    assume {:print "$at(105,37846,37853)"} true;
    $t14 := 10;
    assume $IsValid'u64'($t14);

    // $t15 := error::permission_denied($t14) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:897:17+33
    call $t15 := $1_error_permission_denied($t14);
    if ($abort_flag) {
        assume {:print "$at(105,37821,37854)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // trace_abort($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
    assume {:print "$at(105,37760,37869)"} true;
    assume {:print "$track_abort(30,13):", $t15} $t15 == $t15;

    // $t11 := move($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
    $t11 := $t15;

    // goto L21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:895:13+109
    goto L21;

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:899:17+47
    assume {:print "$at(105,37887,37934)"} true;
L4:

    // $t16 := features::module_event_migration_enabled() on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:899:17+47
    assume {:print "$at(105,37887,37934)"} true;
    call $t16 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(105,37887,37934)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // if ($t16) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:899:13+228
    if ($t16) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:901:46+21
    assume {:print "$at(105,38012,38033)"} true;
L6:

    // $t17 := type_info::type_name<#0>() on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:901:46+21
    assume {:print "$at(105,38012,38033)"} true;
    $t17 := $1_string_String(Vec(DefaultVecMap()[0 := 48][1 := 120][2 := 49][3 := 58][4 := 58][5 := 97][6 := 112][7 := 116][8 := 111][9 := 115][10 := 95][11 := 99][12 := 111][13 := 105][14 := 110][15 := 58][16 := 58][17 := 65][18 := 112][19 := 116][20 := 111][21 := 115][22 := 67][23 := 111][24 := 105][25 := 110], 26));
    if ($abort_flag) {
        assume {:print "$at(105,38012,38033)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // $t18 := get_field<coin::Coin<#0>>.value($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:901:100+10
    $t18 := $t1->$value;

    // $t19 := pack coin::CoinDeposit($t17, $t0, $t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:901:21+91
    $t19 := $1_coin_CoinDeposit($t17, $t0, $t18);

    // opaque begin: event::emit<coin::CoinDeposit>($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:900:17+142
    assume {:print "$at(105,37954,38096)"} true;

    // opaque end: event::emit<coin::CoinDeposit>($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:900:17+142

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:905:22+10
    assume {:print "$at(105,38179,38189)"} true;
L5:

    // $t20 := borrow_field<coin::CoinStore<#0>>.deposit_events($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:905:17+30
    assume {:print "$at(105,38174,38204)"} true;
    $t20 := $ChildMutation($t10, 2, $Dereference($t10)->$deposit_events);

    // $t21 := get_field<coin::Coin<#0>>.value($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:906:40+10
    assume {:print "$at(105,38245,38255)"} true;
    $t21 := $t1->$value;

    // $t22 := pack coin::DepositEvent($t21) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:906:17+35
    $t22 := $1_coin_DepositEvent($t21);

    // opaque begin: event::emit_event<coin::DepositEvent>($t20, $t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:904:13+147
    assume {:print "$at(105,38125,38272)"} true;

    // opaque end: event::emit_event<coin::DepositEvent>($t20, $t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:904:13+147

    // write_back[Reference($t10).deposit_events (event::EventHandle<coin::DepositEvent>)]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:904:13+147
    $t10 := $UpdateMutation($t10, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events($Dereference($t10), $Dereference($t20)));

    // $t23 := borrow_field<coin::CoinStore<#0>>.coin($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:908:19+20
    assume {:print "$at(105,38292,38312)"} true;
    $t23 := $ChildMutation($t10, 0, $Dereference($t10)->$coin);

    // coin::merge<#0>($t23, $t1) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:908:13+33
    call $t23 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t23, $t1);
    if ($abort_flag) {
        assume {:print "$at(105,38286,38319)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // write_back[Reference($t10).coin (coin::Coin<#0>)]($t23) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:908:13+33
    $t10 := $UpdateMutation($t10, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t10), $Dereference($t23)));

    // write_back[coin::CoinStore<#0>@]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:908:13+33
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:893:9+1162
    assume {:print "$at(105,37616,38778)"} true;
    goto L7;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:910:28+27
    assume {:print "$at(105,38365,38392)"} true;
L0:

    // $t24 := coin::paired_metadata<#0>() on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:910:28+27
    assume {:print "$at(105,38365,38392)"} true;
    call $t24 := $1_coin_paired_metadata'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,38365,38392)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // trace_local[metadata]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:910:17+8
    assume {:print "$track_local(30,13,6):", $t24} $t24 == $t24;

    // $t25 := opaque begin: option::is_some<object::Object<fungible_asset::Metadata>>($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+26
    assume {:print "$at(105,38410,38436)"} true;

    // assume WellFormed($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+26
    assume $IsValid'bool'($t25);

    // assume Eq<bool>($t25, option::spec_is_some<object::Object<fungible_asset::Metadata>>($t24)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+26
    assume $IsEqual'bool'($t25, $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''($t24));

    // $t25 := opaque end: option::is_some<object::Object<fungible_asset::Metadata>>($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+26

    // if ($t25) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+160
    if ($t25) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:912:17+12
    assume {:print "$at(105,38496,38508)"} true;
L9:

    // $t26 := opaque begin: option::destroy_some<object::Object<fungible_asset::Metadata>>($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    assume {:print "$at(105,38526,38556)"} true;

    // assume Identical($t27, option::spec_is_none<object::Object<fungible_asset::Metadata>>($t24)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    assume ($t27 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t24));

    // if ($t27) goto L23 else goto L22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    if ($t27) { goto L23; } else { goto L22; }

    // label L23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
L23:

    // assume And(option::spec_is_none<object::Object<fungible_asset::Metadata>>($t24), Eq(262145, $t11)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    assume {:print "$at(105,38526,38556)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t24) && $IsEqual'num'(262145, $t11));

    // trace_abort($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    assume {:print "$at(105,38526,38556)"} true;
    assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;

    // goto L21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    goto L21;

    // label L22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
L22:

    // assume WellFormed($t26) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    assume {:print "$at(105,38526,38556)"} true;
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t26);

    // assume Eq<object::Object<fungible_asset::Metadata>>($t26, option::spec_borrow<object::Object<fungible_asset::Metadata>>($t24)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t26, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t24));

    // $t26 := opaque end: option::destroy_some<object::Object<fungible_asset::Metadata>>($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:913:17+30

    // $t28 := primary_fungible_store::primary_store_address<fungible_asset::Metadata>($t0, $t26) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:926:37+82
    assume {:print "$at(105,38960,39042)"} true;
    call $t28 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t26);
    if ($abort_flag) {
        assume {:print "$at(105,38960,39042)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // trace_local[primary_store_address#146]($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:926:13+21
    assume {:print "$track_local(30,13,7):", $t28} $t28 == $t28;

    // $t29 := fungible_asset::store_exists($t28) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+51
    assume {:print "$at(105,39052,39103)"} true;
    call $t29 := $1_fungible_asset_store_exists($t28);
    if ($abort_flag) {
        assume {:print "$at(105,39052,39103)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // if ($t29) goto L11 else goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+274
    if ($t29) { goto L11; } else { goto L10; }

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:929:13+56
    assume {:print "$at(105,39212,39268)"} true;
L11:

    // $t30 := features::new_accounts_default_to_fa_apt_store_enabled() on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:929:13+56
    assume {:print "$at(105,39212,39268)"} true;
    call $t30 := $1_features_new_accounts_default_to_fa_apt_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(105,39212,39268)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // if ($t30) goto L13 else goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:64+219
    assume {:print "$at(105,39107,39326)"} true;
    if ($t30) { goto L13; } else { goto L12; }

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:64+219
L13:

    // $t31 := true at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:64+219
    assume {:print "$at(105,39107,39326)"} true;
    $t31 := true;
    assume $IsValid'bool'($t31);

    // $t2 := $t31 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:64+219
    $t2 := $t31;

    // goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:64+219
    goto L14;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:929:95+21
    assume {:print "$at(105,39294,39315)"} true;
L12:

    // $t2 := exists<coin::MigrationFlag>($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:929:73+6
    assume {:print "$at(105,39272,39278)"} true;
    $t2 := $ResourceExists($1_coin_MigrationFlag_$memory, $t28);

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:64+219
    assume {:print "$at(105,39107,39326)"} true;
L14:

    // $t3 := $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+274
    assume {:print "$at(105,39052,39326)"} true;
    $t3 := $t2;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+274
    goto L15;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+274
L10:

    // $t32 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+274
    assume {:print "$at(105,39052,39326)"} true;
    $t32 := false;
    assume $IsValid'bool'($t32);

    // $t3 := $t32 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+274
    $t3 := $t32;

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:927:9+274
L15:

    // $t4 := $t3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+160
    assume {:print "$at(105,38410,38570)"} true;
    $t4 := $t3;

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+160
    goto L16;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+160
L8:

    // $t33 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+160
    assume {:print "$at(105,38410,38570)"} true;
    $t33 := false;
    assume $IsValid'bool'($t33);

    // $t4 := $t33 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+160
    $t4 := $t33;

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:17+160
L16:

    // if ($t4) goto L18 else goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:13+361
    assume {:print "$at(105,38406,38767)"} true;
    if ($t4) { goto L18; } else { goto L17; }

    // label L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:13+361
L18:

    // goto L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:911:13+361
    assume {:print "$at(105,38406,38767)"} true;
    goto L19;

    // label L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:917:40+25
    assume {:print "$at(105,38727,38752)"} true;
L17:

    // $t34 := 5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:917:40+25
    assume {:print "$at(105,38727,38752)"} true;
    $t34 := 5;
    assume $IsValid'u64'($t34);

    // $t35 := error::not_found($t34) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:917:23+43
    call $t35 := $1_error_not_found($t34);
    if ($abort_flag) {
        assume {:print "$at(105,38710,38753)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // trace_abort($t35) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:917:17+49
    assume {:print "$at(105,38704,38753)"} true;
    assume {:print "$track_abort(30,13):", $t35} $t35 == $t35;

    // $t11 := move($t35) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:917:17+49
    $t11 := $t35;

    // goto L21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:917:17+49
    goto L21;

    // label L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:915:49+12
    assume {:print "$at(105,38622,38634)"} true;
L19:

    // assume Identical($t36, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:318:9+58
    assume {:print "$at(106,14383,14441)"} true;
    assume ($t36 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t37 := coin::coin_to_fungible_asset<#0>($t1) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:915:63+28
    assume {:print "$at(105,38636,38664)"} true;
    call $t37 := $1_coin_coin_to_fungible_asset'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(105,38636,38664)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // primary_fungible_store::deposit($t0, $t37) on_abort goto L21 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:915:17+75
    call $1_primary_fungible_store_deposit($t0, $t37);
    if ($abort_flag) {
        assume {:print "$at(105,38590,38665)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,13):", $t11} $t11 == $t11;
        goto L21;
    }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:893:9+1162
    assume {:print "$at(105,37616,38778)"} true;
L7:

    // label L20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:920:5+1
    assume {:print "$at(105,38783,38784)"} true;
L20:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:920:5+1
    assume {:print "$at(105,38783,38784)"} true;
    return;

    // label L21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:920:5+1
L21:

    // abort($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:920:5+1
    assume {:print "$at(105,38783,38784)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun coin::merge<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1108:5+469
procedure {:inline 1} $1_coin_merge'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t6: int;
    var $t7: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t8: int;
    var $t9: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[dst_coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1108:5+1
    assume {:print "$at(105,46634,46635)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(30,39,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[source_coin]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1108:5+1
    assume {:print "$track_local(30,39,1):", $t1} $t1 == $t1;

    // assume Le(Add(select coin::Coin.value<coin::Coin<#0>>($t0), select coin::Coin.value<coin::Coin<#0>>($t1)), 18446744073709551615) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1110:13+53
    assume {:print "$at(105,46750,46803)"} true;
    assume (($Dereference($t0)->$value + $t1->$value) <= 18446744073709551615);

    // assume Identical($t3, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value<coin::Coin<#0>>($t1)))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1113:13+63
    assume {:print "$at(105,46842,46905)"} true;
    assume ($t3 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v - $t1->$value)));

    // assume Identical($t4, 0x0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1113:13+63
    assume ($t4 == 0);

    // $t5 := borrow_global<coin::Ghost$supply<#0>>($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1113:13+63
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t4));
    }

    // write_ref($t5, $t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1113:13+63
    $t5 := $UpdateMutation($t5, $t3);

    // write_back[coin::Ghost$supply<#0>@]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1113:13+63
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t5),
        $Dereference($t5));

    // $t6 := unpack coin::Coin<#0>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1115:13+14
    assume {:print "$at(105,46929,46943)"} true;
    $t6 := $t1->$value;

    // trace_local[value]($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1115:20+5
    assume {:print "$track_local(30,39,2):", $t6} $t6 == $t6;

    // assume Identical($t7, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t6))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1117:13+51
    assume {:print "$at(105,46986,47037)"} true;
    assume ($t7 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $t6)));

    // assume Identical($t8, 0x0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1117:13+51
    assume ($t8 == 0);

    // $t9 := borrow_global<coin::Ghost$supply<#0>>($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1117:13+51
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t8));
    }

    // write_ref($t9, $t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1117:13+51
    $t9 := $UpdateMutation($t9, $t7);

    // write_back[coin::Ghost$supply<#0>@]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1117:13+51
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t10 := get_field<coin::Coin<#0>>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1119:26+14
    assume {:print "$at(105,47074,47088)"} true;
    $t10 := $Dereference($t0)->$value;

    // $t11 := +($t10, $t6) on_abort goto L2 with $t12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1119:41+1
    call $t11 := $AddU64($t10, $t6);
    if ($abort_flag) {
        assume {:print "$at(105,47089,47090)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(30,39):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t13 := borrow_field<coin::Coin<#0>>.value($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1119:9+14
    $t13 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t13, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1119:9+39
    $t13 := $UpdateMutation($t13, $t11);

    // write_back[Reference($t0).value (u64)]($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1119:9+39
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t13)));

    // trace_local[dst_coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1119:9+39
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(30,39,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[dst_coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1119:48+1
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(30,39,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1120:5+1
    assume {:print "$at(105,47102,47103)"} true;
L1:

    // return () at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1120:5+1
    assume {:print "$at(105,47102,47103)"} true;
    $ret0 := $t0;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1120:5+1
L2:

    // abort($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1120:5+1
    assume {:print "$at(105,47102,47103)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun coin::mint_internal<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1232:5+1216
procedure {:inline 1} $1_coin_mint_internal'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t1: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t2: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t8: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $Mutation ($1_coin_CoinInfo'$1_aptos_coin_AptosCoin');
    var $t11: int;
    var $t12: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t13: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t14: bool;
    var $t15: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t16: int;
    var $t17: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t18: int;
    var $t19: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t20: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: int;
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u64': int;
    var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#55: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#56: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#57: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:108:9+58
    assume {:print "$at(106,6085,6143)"} true;
    assume ($t3 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // trace_local[amount]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1232:5+1
    assume {:print "$at(105,51165,51166)"} true;
    assume {:print "$track_local(30,43,0):", $t0} $t0 == $t0;

    // $t4 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1233:23+1
    assume {:print "$at(105,51264,51265)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t0, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1233:20+2
    $t5 := $IsEqual'u64'($t0, $t4);

    // if ($t5) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1233:9+103
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1235:24+1
    assume {:print "$at(105,51328,51329)"} true;
L1:

    // $t6 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1235:24+1
    assume {:print "$at(105,51328,51329)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := pack coin::Coin<#0>($t6) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1234:20+55
    assume {:print "$at(105,51288,51343)"} true;
    $t7 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t6);

    // trace_return[0]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1234:13+62
    assume {:print "$track_return(30,43,0):", $t7} $t7 == $t7;

    // $t8 := move($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1234:13+62
    $t8 := $t7;

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1234:13+62
    goto L5;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    assume {:print "$at(105,51426,51450)"} true;
L0:

    // $t9 := opaque begin: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    assume {:print "$at(105,51426,51450)"} true;

    // @57 := save_mem(coin::CoinInfo<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#57 := $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory;

    // @55 := save_mem(coin::supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#55 := $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory;

    // @56 := save_mem(coin::aggregate_supply<#0>) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#56 := $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory;

    // assume WellFormed($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    assume $IsValid'address'($t9);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@55]<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@56]<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global[@57]<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<coin::CoinInfo<#0>>(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    assume ($1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory#55, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory#56, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory#57, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply));

    // assume Eq<address>($t9, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24
    assume $IsEqual'address'($t9, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t9 := opaque end: coin::coin_address<#0>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:71+24

    // $t10 := borrow_global<coin::CoinInfo<#0>>($t9) on_abort goto L6 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:33+17
    if (!$ResourceExists($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(105,51388,51405)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,43):", $t11} $t11 == $t11;
        goto L6;
    }

    // $t12 := borrow_field<coin::CoinInfo<#0>>.supply($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:28+75
    $t12 := $ChildMutation($t10, 3, $Dereference($t10)->$supply);

    // trace_local[maybe_supply]($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1239:13+12
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t12);
    assume {:print "$track_local(30,43,1):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t13 := read_ref($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:29+12
    assume {:print "$at(105,51488,51500)"} true;
    $t13 := $Dereference($t12);

    // $t14 := opaque begin: option::is_some<optional_aggregator::OptionalAggregator>($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:13+29

    // assume WellFormed($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:13+29
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, option::spec_is_some<optional_aggregator::OptionalAggregator>($t13)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:13+29
    assume $IsEqual'bool'($t14, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t13));

    // $t14 := opaque end: option::is_some<optional_aggregator::OptionalAggregator>($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:13+29

    // if ($t14) goto L3 else goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:9+774
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1241:45+12
    assume {:print "$at(105,51549,51561)"} true;
L3:

    // $t15 := option::borrow_mut<optional_aggregator::OptionalAggregator>($t12) on_abort goto L6 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1241:26+32
    assume {:print "$at(105,51530,51562)"} true;
    call $t15,$t12 := $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t12);
    if ($abort_flag) {
        assume {:print "$at(105,51530,51562)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,43):", $t11} $t11 == $t11;
        goto L6;
    }

    // trace_local[supply]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1241:17+6
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t15);
    assume {:print "$track_local(30,43,2):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // assume Implies(optional_aggregator::$is_parallelizable(Freeze(false)($t15)), Le(Add(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator<optional_aggregator::OptionalAggregator>($t15))), $t0), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator<optional_aggregator::OptionalAggregator>($t15))))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1245:17+263
    assume {:print "$at(105,51706,51969)"} true;
    assume ($1_optional_aggregator_$is_parallelizable($Dereference($t15)) ==> (($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($Dereference($t15)->$aggregator)) + $t0) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($Dereference($t15)->$aggregator))));

    // assume Implies(Not(optional_aggregator::$is_parallelizable(Freeze(false)($t15))), Le(Add(select optional_aggregator::Integer.value<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer<optional_aggregator::OptionalAggregator>($t15))), $t0), select optional_aggregator::Integer.limit<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer<optional_aggregator::OptionalAggregator>($t15))))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1249:17+167
    assume {:print "$at(105,51986,52153)"} true;
    assume (!$1_optional_aggregator_$is_parallelizable($Dereference($t15)) ==> (($1_option_$borrow'$1_optional_aggregator_Integer'($Dereference($t15)->$integer)->$value + $t0) <= $1_option_$borrow'$1_optional_aggregator_Integer'($Dereference($t15)->$integer)->$limit));

    // $t16 := (u128)($t0) on_abort goto L6 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1252:46+16
    assume {:print "$at(105,52214,52230)"} true;
    call $t16 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(105,52214,52230)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,43):", $t11} $t11 == $t11;
        goto L6;
    }

    // optional_aggregator::add($t15, $t16) on_abort goto L6 with $t11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1252:13+50
    call $t15 := $1_optional_aggregator_add($t15, $t16);
    if ($abort_flag) {
        assume {:print "$at(105,52181,52231)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(30,43):", $t11} $t11 == $t11;
        goto L6;
    }

    // write_back[Reference($t12).vec (vector<optional_aggregator::OptionalAggregator>)/[]]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1252:13+50
    $t12 := $UpdateMutation($t12, (var $$sel0 := $Dereference($t12)->$vec; $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec($Dereference($t12), UpdateVec($$sel0, ReadVec($t15->p, LenVec($t12->p) + 1), $Dereference($t15)))));

    // write_back[Reference($t10).supply (option::Option<optional_aggregator::OptionalAggregator>)]($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1252:13+50
    $t10 := $UpdateMutation($t10, $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply($Dereference($t10), $Dereference($t12)));

    // pack_ref_deep($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1252:13+50

    // write_back[coin::CoinInfo<#0>@]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1252:13+50
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // goto L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1252:63+1
    goto L4;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:9+774
    assume {:print "$at(105,51468,52242)"} true;
L2:

    // pack_ref_deep($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:9+774
    assume {:print "$at(105,51468,52242)"} true;

    // drop($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1240:9+774

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1254:9+81
    assume {:print "$at(105,52252,52333)"} true;
L4:

    // assume Identical($t17, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t0))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1255:13+52
    assume {:print "$at(105,52271,52323)"} true;
    assume ($t17 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $t0)));

    // assume Identical($t18, 0x0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1255:13+52
    assume ($t18 == 0);

    // $t19 := borrow_global<coin::Ghost$supply<#0>>($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1255:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $Mutation($Global($t18), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t18));
    }

    // write_ref($t19, $t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1255:13+52
    $t19 := $UpdateMutation($t19, $t17);

    // write_back[coin::Ghost$supply<#0>@]($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1255:13+52
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // $t20 := pack coin::Coin<#0>($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1257:9+32
    assume {:print "$at(105,52343,52375)"} true;
    $t20 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // trace_return[0]($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1257:9+32
    assume {:print "$track_return(30,43,0):", $t20} $t20 == $t20;

    // $t8 := move($t20) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1257:9+32
    $t8 := $t20;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1258:5+1
    assume {:print "$at(105,52380,52381)"} true;
L5:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1258:5+1
    assume {:print "$at(105,52380,52381)"} true;
    $ret0 := $t8;
    return;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1258:5+1
L6:

    // abort($t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1258:5+1
    assume {:print "$at(105,52380,52381)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun coin::withdraw<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1165:5+1591
procedure {:inline 1} $1_coin_withdraw'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t13: $1_fungible_asset_FungibleAsset;
    var $t14: int;
    var $t15: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t16: int;
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t18: int;
    var $t19: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t20: int;
    var $t21: int;
    var $t22: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t28: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t29: int;
    var $t30: bool;
    var $t31: int;
    var $t32: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t33: bool;
    var $t34: $1_object_Object'$1_fungible_asset_Metadata';
    var $t35: bool;
    var $t36: bool;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: bool;
    var $t41: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t42: bool;
    var $t43: bool;
    var $t44: int;
    var $t45: int;
    var $t46: bool;
    var $t47: $1_string_String;
    var $t48: $1_coin_CoinWithdraw;
    var $t49: $Mutation ($1_event_EventHandle'$1_coin_WithdrawEvent');
    var $t50: $1_coin_WithdrawEvent;
    var $t51: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t52: int;
    var $t53: bool;
    var $t54: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t55: $1_object_Object'$1_fungible_asset_Metadata';
    var $t56: bool;
    var $t57: $1_fungible_asset_FungibleAsset;
    var $t58: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t59: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t60: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t18, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:562:9+47
    assume {:print "$at(106,24641,24688)"} true;
    assume ($t18 == $1_signer_$address_of($t0));

    // assume Identical($t19, global<coin::CoinStore<#0>>($t18)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:563:9+59
    assume {:print "$at(106,24697,24756)"} true;
    assume ($t19 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t18));

    // assume Identical($t20, select coin::Coin.value<coin::Coin<#0>>(select coin::CoinStore.coin<coin::CoinStore<#0>>($t19))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:564:9+36
    assume {:print "$at(106,24765,24801)"} true;
    assume ($t20 == $t19->$coin->$value);

    // assume Identical($t21, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:572:9+47
    assume {:print "$at(106,25098,25145)"} true;
    assume ($t21 == $1_signer_$address_of($t0));

    // assume Identical($t22, global<coin::CoinStore<#0>>($t21)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:573:9+59
    assume {:print "$at(106,25154,25213)"} true;
    assume ($t22 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t21));

    // assume Identical($t23, select coin::Coin.value<coin::Coin<#0>>(select coin::CoinStore.coin<coin::CoinStore<#0>>($t22))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:574:9+36
    assume {:print "$at(106,25222,25258)"} true;
    assume ($t23 == $t22->$coin->$value);

    // trace_local[account]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1165:5+1
    assume {:print "$at(105,48698,48699)"} true;
    assume {:print "$track_local(30,60,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1165:5+1
    assume {:print "$track_local(30,60,1):", $t1} $t1 == $t1;

    // $t24 := signer::address_of($t0) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1169:28+27
    assume {:print "$at(105,48891,48918)"} true;
    call $t24 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(105,48891,48918)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // trace_local[account_addr]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1169:13+12
    assume {:print "$track_local(30,60,7):", $t24} $t24 == $t24;

    // trace_local[amount#172]($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:648:9+6
    assume {:print "$at(105,27390,27396)"} true;
    assume {:print "$track_local(30,60,9):", $t1} $t1 == $t1;

    // trace_local[account_addr#171]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:647:9+12
    assume {:print "$at(105,27359,27371)"} true;
    assume {:print "$track_local(30,60,8):", $t24} $t24 == $t24;

    // trace_local[owner#175]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:756:39+5
    assume {:print "$at(105,32101,32106)"} true;
    assume {:print "$track_local(30,60,16):", $t24} $t24 == $t24;

    // $t26 := exists<coin::CoinStore<#0>>($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:13+6
    assume {:print "$at(105,32136,32142)"} true;
    $t26 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t24);

    // if ($t26) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
    if ($t26) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:48+5
    assume {:print "$at(105,32221,32226)"} true;
L1:

    // $t27 := get_global<coin::CoinStore<#0>>($t24) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:13+13
    assume {:print "$at(105,32186,32199)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t27 := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t24);
    }
    if ($abort_flag) {
        assume {:print "$at(105,32186,32199)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // $t28 := get_field<coin::CoinStore<#0>>.coin($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:13+46
    $t28 := $t27->$coin;

    // $t2 := get_field<coin::Coin<#0>>.value($t28) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:758:13+52
    $t2 := $t28->$value;

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
    assume {:print "$at(105,32132,32279)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:760:13+1
    assume {:print "$at(105,32268,32269)"} true;
L0:

    // $t29 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:760:13+1
    assume {:print "$at(105,32268,32269)"} true;
    $t29 := 0;
    assume $IsValid'u64'($t29);

    // $t2 := $t29 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
    assume {:print "$at(105,32132,32279)"} true;
    $t2 := $t29;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:757:9+147
L2:

    // trace_local[coin_balance#173]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:650:13+12
    assume {:print "$at(105,27434,27446)"} true;
    assume {:print "$track_local(30,60,11):", $t2} $t2 == $t2;

    // $t30 := >=($t2, $t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:651:26+2
    assume {:print "$at(105,27512,27514)"} true;
    call $t30 := $Ge($t2, $t1);

    // if ($t30) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:651:9+460
    if ($t30) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:652:14+6
    assume {:print "$at(105,27538,27544)"} true;
L4:

    // $t31 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:652:22+1
    assume {:print "$at(105,27546,27547)"} true;
    $t31 := 0;
    assume $IsValid'u64'($t31);

    // $t5 := $t31 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:651:9+460
    assume {:print "$at(105,27495,27955)"} true;
    $t5 := $t31;

    // $t4 := $t1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:651:9+460
    $t4 := $t1;

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:651:9+460
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:654:28+27
    assume {:print "$at(105,27593,27620)"} true;
L3:

    // $t32 := coin::paired_metadata<#0>() on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:654:28+27
    assume {:print "$at(105,27593,27620)"} true;
    call $t32 := $1_coin_paired_metadata'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,27593,27620)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // trace_local[metadata#174]($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:654:17+8
    assume {:print "$track_local(30,60,15):", $t32} $t32 == $t32;

    // $t33 := opaque begin: option::is_some<object::Object<fungible_asset::Metadata>>($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+26
    assume {:print "$at(105,27638,27664)"} true;

    // assume WellFormed($t33) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+26
    assume $IsValid'bool'($t33);

    // assume Eq<bool>($t33, option::spec_is_some<object::Object<fungible_asset::Metadata>>($t32)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+26
    assume $IsEqual'bool'($t33, $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''($t32));

    // $t33 := opaque end: option::is_some<object::Object<fungible_asset::Metadata>>($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+26

    // if ($t33) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+166
    if ($t33) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:656:17+12
    assume {:print "$at(105,27730,27742)"} true;
L7:

    // $t34 := opaque begin: option::destroy_some<object::Object<fungible_asset::Metadata>>($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    assume {:print "$at(105,27760,27790)"} true;

    // assume Identical($t35, option::spec_is_none<object::Object<fungible_asset::Metadata>>($t32)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    assume ($t35 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t32));

    // if ($t35) goto L26 else goto L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    if ($t35) { goto L26; } else { goto L25; }

    // label L26 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
L26:

    // assume And(option::spec_is_none<object::Object<fungible_asset::Metadata>>($t32), Eq(262145, $t25)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    assume {:print "$at(105,27760,27790)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t32) && $IsEqual'num'(262145, $t25));

    // trace_abort($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    assume {:print "$at(105,27760,27790)"} true;
    assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;

    // goto L24 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    goto L24;

    // label L25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
L25:

    // assume WellFormed($t34) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    assume {:print "$at(105,27760,27790)"} true;
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t34);

    // assume Eq<object::Object<fungible_asset::Metadata>>($t34, option::spec_borrow<object::Object<fungible_asset::Metadata>>($t32)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t34, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t32));

    // $t34 := opaque end: option::destroy_some<object::Object<fungible_asset::Metadata>>($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:657:17+30

    // $t3 := primary_fungible_store::primary_store_exists<fungible_asset::Metadata>($t24, $t34) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:47+136
    assume {:print "$at(105,27668,27804)"} true;
    call $t3 := $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'($t24, $t34);
    if ($abort_flag) {
        assume {:print "$at(105,27668,27804)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+166
    goto L8;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+166
L6:

    // $t36 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+166
    assume {:print "$at(105,27638,27804)"} true;
    $t36 := false;
    assume $IsValid'bool'($t36);

    // $t3 := $t36 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+166
    $t3 := $t36;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:17+166
L8:

    // if ($t3) goto L10 else goto L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:13+311
    assume {:print "$at(105,27634,27945)"} true;
    if ($t3) { goto L10; } else { goto L9; }

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:13+311
L10:

    // goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:655:13+311
    assume {:print "$at(105,27634,27945)"} true;
    goto L11;

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:661:17+52
    assume {:print "$at(105,27893,27945)"} true;
L9:

    // $t37 := 6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:661:47+21
    assume {:print "$at(105,27923,27944)"} true;
    $t37 := 6;
    assume $IsValid'u64'($t37);

    // $t38 := error::invalid_argument($t37) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:661:23+46
    call $t38 := $1_error_invalid_argument($t37);
    if ($abort_flag) {
        assume {:print "$at(105,27899,27945)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // trace_abort($t38) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:661:17+52
    assume {:print "$at(105,27893,27945)"} true;
    assume {:print "$track_abort(30,60):", $t38} $t38 == $t38;

    // $t25 := move($t38) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:661:17+52
    $t25 := $t38;

    // goto L24 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:661:17+52
    goto L24;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:659:18+12
    assume {:print "$at(105,27823,27835)"} true;
L11:

    // $t5 := -($t1, $t2) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:659:39+1
    assume {:print "$at(105,27844,27845)"} true;
    call $t5 := $Sub($t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(105,27844,27845)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // $t4 := $t2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:651:9+460
    assume {:print "$at(105,27495,27955)"} true;
    $t4 := $t2;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:651:9+460
L5:

    // trace_local[fa_amount_to_withdraw]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1171:39+21
    assume {:print "$at(105,48959,48980)"} true;
    assume {:print "$track_local(30,60,14):", $t5} $t5 == $t5;

    // trace_local[coin_amount_to_withdraw]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1171:14+23
    assume {:print "$track_local(30,60,10):", $t4} $t4 == $t4;

    // $t39 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1175:60+1
    assume {:print "$at(105,49139,49140)"} true;
    $t39 := 0;
    assume $IsValid'u64'($t39);

    // $t40 := >($t4, $t39) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1175:58+1
    call $t40 := $Gt($t4, $t39);

    // if ($t40) goto L13 else goto L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1175:30+830
    if ($t40) { goto L13; } else { goto L12; }

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1176:69+12
    assume {:print "$at(105,49212,49224)"} true;
L13:

    // $t41 := borrow_global<coin::CoinStore<#0>>($t24) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1176:30+17
    assume {:print "$at(105,49173,49190)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t41 := $Mutation($Global($t24), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t24));
    }
    if ($abort_flag) {
        assume {:print "$at(105,49173,49190)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // trace_local[coin_store]($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1176:17+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t41);
    assume {:print "$track_local(30,60,12):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t42 := get_field<coin::CoinStore<#0>>.frozen($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1178:18+17
    assume {:print "$at(105,49265,49282)"} true;
    $t42 := $Dereference($t41)->$frozen;

    // $t43 := !($t42) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1178:17+1
    call $t43 := $Not($t42);

    // if ($t43) goto L15 else goto L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
    assume {:print "$at(105,49239,49348)"} true;
    if ($t43) { goto L15; } else { goto L14; }

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
L15:

    // goto L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
    assume {:print "$at(105,49239,49348)"} true;
    goto L16;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
L14:

    // drop($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
    assume {:print "$at(105,49239,49348)"} true;

    // $t44 := 10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1179:42+7
    assume {:print "$at(105,49325,49332)"} true;
    $t44 := 10;
    assume $IsValid'u64'($t44);

    // $t45 := error::permission_denied($t44) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1179:17+33
    call $t45 := $1_error_permission_denied($t44);
    if ($abort_flag) {
        assume {:print "$at(105,49300,49333)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // trace_abort($t45) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
    assume {:print "$at(105,49239,49348)"} true;
    assume {:print "$track_abort(30,60):", $t45} $t45 == $t45;

    // $t25 := move($t45) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
    $t25 := $t45;

    // goto L24 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1177:13+109
    goto L24;

    // label L16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1181:17+47
    assume {:print "$at(105,49366,49413)"} true;
L16:

    // $t46 := features::module_event_migration_enabled() on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1181:17+47
    assume {:print "$at(105,49366,49413)"} true;
    call $t46 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(105,49366,49413)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // if ($t46) goto L18 else goto L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1181:13+286
    if ($t46) { goto L18; } else { goto L17; }

    // label L18 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1184:36+21
    assume {:print "$at(105,49516,49537)"} true;
L18:

    // $t47 := type_info::type_name<#0>() on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1184:36+21
    assume {:print "$at(105,49516,49537)"} true;
    $t47 := $1_string_String(Vec(DefaultVecMap()[0 := 48][1 := 120][2 := 49][3 := 58][4 := 58][5 := 97][6 := 112][7 := 116][8 := 111][9 := 115][10 := 95][11 := 99][12 := 111][13 := 105][14 := 110][15 := 58][16 := 58][17 := 65][18 := 112][19 := 116][20 := 111][21 := 115][22 := 67][23 := 111][24 := 105][25 := 110], 26));
    if ($abort_flag) {
        assume {:print "$at(105,49516,49537)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // $t48 := pack coin::CoinWithdraw($t47, $t24, $t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1183:21+149
    assume {:print "$at(105,49466,49615)"} true;
    $t48 := $1_coin_CoinWithdraw($t47, $t24, $t4);

    // opaque begin: event::emit<coin::CoinWithdraw>($t48) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1182:17+200
    assume {:print "$at(105,49433,49633)"} true;

    // opaque end: event::emit<coin::CoinWithdraw>($t48) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1182:17+200

    // label L17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1189:22+10
    assume {:print "$at(105,49717,49727)"} true;
L17:

    // $t49 := borrow_field<coin::CoinStore<#0>>.withdraw_events($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1189:17+31
    assume {:print "$at(105,49712,49743)"} true;
    $t49 := $ChildMutation($t41, 3, $Dereference($t41)->$withdraw_events);

    // $t50 := pack coin::WithdrawEvent($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1190:17+49
    assume {:print "$at(105,49761,49810)"} true;
    $t50 := $1_coin_WithdrawEvent($t4);

    // opaque begin: event::emit_event<coin::WithdrawEvent>($t49, $t50) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1188:13+163
    assume {:print "$at(105,49662,49825)"} true;

    // opaque end: event::emit_event<coin::WithdrawEvent>($t49, $t50) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1188:13+163

    // write_back[Reference($t41).withdraw_events (event::EventHandle<coin::WithdrawEvent>)]($t49) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1188:13+163
    $t41 := $UpdateMutation($t41, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events($Dereference($t41), $Dereference($t49)));

    // $t51 := borrow_field<coin::CoinStore<#0>>.coin($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1192:21+20
    assume {:print "$at(105,49847,49867)"} true;
    $t51 := $ChildMutation($t41, 0, $Dereference($t41)->$coin);

    // $t6 := coin::extract<#0>($t51, $t4) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1192:13+54
    call $t6,$t51 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t51, $t4);
    if ($abort_flag) {
        assume {:print "$at(105,49839,49893)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // write_back[Reference($t41).coin (coin::Coin<#0>)]($t51) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1192:13+54
    $t41 := $UpdateMutation($t41, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t41), $Dereference($t51)));

    // write_back[coin::CoinStore<#0>@]($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1192:13+54
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t41),
        $Dereference($t41));

    // goto L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1175:30+830
    assume {:print "$at(105,49109,49939)"} true;
    goto L19;

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1194:13+6
    assume {:print "$at(105,49923,49929)"} true;
L12:

    // $t6 := coin::zero<#0>() on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1194:13+6
    assume {:print "$at(105,49923,49929)"} true;
    call $t6 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,49923,49929)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // label L19 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1175:30+830
    assume {:print "$at(105,49109,49939)"} true;
L19:

    // $t17 := $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1175:13+14
    assume {:print "$at(105,49092,49106)"} true;
    $t17 := $t6;

    // trace_local[withdrawn_coin]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1175:13+14
    assume {:print "$track_local(30,60,17):", $t17} $t17 == $t17;

    // $t52 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1196:37+1
    assume {:print "$at(105,49977,49978)"} true;
    $t52 := 0;
    assume $IsValid'u64'($t52);

    // $t53 := >($t5, $t52) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1196:35+1
    call $t53 := $Gt($t5, $t52);

    // if ($t53) goto L21 else goto L20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1196:9+310
    if ($t53) { goto L21; } else { goto L20; }

    // label L21 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1198:17+7
    assume {:print "$at(105,50053,50060)"} true;
L21:

    // $t54 := coin::paired_metadata<#0>() on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:38+27
    assume {:print "$at(105,50099,50126)"} true;
    call $t54 := $1_coin_paired_metadata'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,50099,50126)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // $t55 := opaque begin: option::destroy_some<object::Object<fungible_asset::Metadata>>($t54) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49

    // assume Identical($t56, option::spec_is_none<object::Object<fungible_asset::Metadata>>($t54)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
    assume ($t56 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t54));

    // if ($t56) goto L28 else goto L27 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
    if ($t56) { goto L28; } else { goto L27; }

    // label L28 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
L28:

    // assume And(option::spec_is_none<object::Object<fungible_asset::Metadata>>($t54), Eq(262145, $t25)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
    assume {:print "$at(105,50078,50127)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t54) && $IsEqual'num'(262145, $t25));

    // trace_abort($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
    assume {:print "$at(105,50078,50127)"} true;
    assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;

    // goto L24 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
    goto L24;

    // label L27 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
L27:

    // assume WellFormed($t55) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
    assume {:print "$at(105,50078,50127)"} true;
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t55);

    // assume Eq<object::Object<fungible_asset::Metadata>>($t55, option::spec_borrow<object::Object<fungible_asset::Metadata>>($t54)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t55, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t54));

    // $t55 := opaque end: option::destroy_some<object::Object<fungible_asset::Metadata>>($t54) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1199:17+49

    // $t57 := primary_fungible_store::withdraw<fungible_asset::Metadata>($t0, $t55, $t5) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1197:22+177
    assume {:print "$at(105,50003,50180)"} true;
    call $t57 := $1_primary_fungible_store_withdraw'$1_fungible_asset_Metadata'($t0, $t55, $t5);
    if ($abort_flag) {
        assume {:print "$at(105,50003,50180)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // trace_local[fa]($t57) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1197:17+2
    assume {:print "$track_local(30,60,13):", $t57} $t57 == $t57;

    // $t58 := borrow_local($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1202:19+19
    assume {:print "$at(105,50200,50219)"} true;
    $t58 := $Mutation($Local(17), EmptyVec(), $t17);

    // $t59 := coin::fungible_asset_to_coin<#0>($t57) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1202:40+26
    call $t59 := $1_coin_fungible_asset_to_coin'$1_aptos_coin_AptosCoin'($t57);
    if ($abort_flag) {
        assume {:print "$at(105,50221,50247)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // coin::merge<#0>($t58, $t59) on_abort goto L24 with $t25 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1202:13+54
    call $t58 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t58, $t59);
    if ($abort_flag) {
        assume {:print "$at(105,50194,50248)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(30,60):", $t25} $t25 == $t25;
        goto L24;
    }

    // write_back[LocalRoot($t17)@]($t58) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1202:13+54
    $t17 := $Dereference($t58);

    // trace_local[withdrawn_coin]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1202:13+54
    assume {:print "$track_local(30,60,17):", $t17} $t17 == $t17;

    // goto L22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1202:67+1
    goto L22;

    // label L20 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1196:9+310
    assume {:print "$at(105,49949,50259)"} true;
L20:

    // label L22 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1204:9+14
    assume {:print "$at(105,50269,50283)"} true;
L22:

    // $t60 := move($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1204:9+14
    assume {:print "$at(105,50269,50283)"} true;
    $t60 := $t17;

    // trace_return[0]($t60) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1204:9+14
    assume {:print "$track_return(30,60,0):", $t60} $t60 == $t60;

    // label L23 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1205:5+1
    assume {:print "$at(105,50288,50289)"} true;
L23:

    // return $t60 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1205:5+1
    assume {:print "$at(105,50288,50289)"} true;
    $ret0 := $t60;
    return;

    // label L24 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1205:5+1
L24:

    // abort($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1205:5+1
    assume {:print "$at(105,50288,50289)"} true;
    $abort_code := $t25;
    $abort_flag := true;
    return;

}

// fun coin::zero<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1208:5+193
procedure {:inline 1} $1_coin_zero'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t0: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t1: int;
    var $t2: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t3: int;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), 0))) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1210:13+47
    assume {:print "$at(105,50427,50474)"} true;
    assume ($t0 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + 0)));

    // assume Identical($t1, 0x0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1210:13+47
    assume ($t1 == 0);

    // $t2 := borrow_global<coin::Ghost$supply<#0>>($t1) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1210:13+47
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t1));
    }

    // write_ref($t2, $t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1210:13+47
    $t2 := $UpdateMutation($t2, $t0);

    // write_back[coin::Ghost$supply<#0>@]($t2) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1210:13+47
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t2),
        $Dereference($t2));

    // $t3 := 0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1213:20+1
    assume {:print "$at(105,50530,50531)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := pack coin::Coin<#0>($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1212:9+47
    assume {:print "$at(105,50494,50541)"} true;
    $t4 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t3);

    // trace_return[0]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1212:9+47
    assume {:print "$track_return(30,61,0):", $t4} $t4 == $t4;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1215:5+1
    assume {:print "$at(105,50546,50547)"} true;
L1:

    // return $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:1215:5+1
    assume {:print "$at(105,50546,50547)"} true;
    $ret0 := $t4;
    return;

}

// fun coin::coin_to_fungible_asset<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:382:5+296
procedure {:inline 1} $1_coin_coin_to_fungible_asset'$1_aptos_coin_AptosCoin'(_$t0: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_fungible_asset_FungibleAsset;
    var $t0: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:318:9+58
    assume {:print "$at(106,14383,14441)"} true;
    assume ($t3 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // trace_local[coin]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:382:5+1
    assume {:print "$at(105,14435,14436)"} true;
    assume {:print "$track_local(30,7,0):", $t0} $t0 == $t0;

    // $t4 := coin::ensure_paired_metadata<#0>() on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:385:24+34
    assume {:print "$at(105,14592,14626)"} true;
    call $t4 := $1_coin_ensure_paired_metadata'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,14592,14626)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[metadata]($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:385:13+8
    assume {:print "$track_local(30,7,2):", $t4} $t4 == $t4;

    // assume Identical($t6, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:260:9+58
    assume {:print "$at(106,11994,12052)"} true;
    assume ($t6 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t7 := coin::burn_internal<#0>($t0) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:386:22+19
    assume {:print "$at(105,14649,14668)"} true;
    call $t7 := $1_coin_burn_internal'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(105,14649,14668)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[amount]($t7) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:386:13+6
    assume {:print "$track_local(30,7,1):", $t7} $t7 == $t7;

    // $t8 := fungible_asset::mint_internal($t4, $t7) on_abort goto L2 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:387:9+47
    assume {:print "$at(105,14678,14725)"} true;
    call $t8 := $1_fungible_asset_mint_internal($t4, $t7);
    if ($abort_flag) {
        assume {:print "$at(105,14678,14725)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:387:9+47
    assume {:print "$track_return(30,7,0):", $t8} $t8 == $t8;

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:388:5+1
    assume {:print "$at(105,14730,14731)"} true;
L1:

    // return $t8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:388:5+1
    assume {:print "$at(105,14730,14731)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:388:5+1
L2:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:388:5+1
    assume {:print "$at(105,14730,14731)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun coin::ensure_paired_metadata<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:366:5+188
procedure {:inline 1} $1_coin_ensure_paired_metadata'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t0: $1_string_String;
    var $t1: $signer;
    var $t2: $signer;
    var $t3: $1_object_ConstructorRef;
    var $t4: $signer;
    var $t5: $1_fungible_asset_BurnRef;
    var $t6: bool;
    var $t7: $Mutation ($1_coin_CoinConversionMap);
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: $1_object_ConstructorRef;
    var $t10: $signer;
    var $t11: $1_fungible_asset_MintRef;
    var $t12: $1_fungible_asset_TransferRef;
    var $t13: $1_type_info_TypeInfo;
    var $t14: $1_type_info_TypeInfo;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: $Mutation ($1_coin_CoinConversionMap);
    var $t25: $1_type_info_TypeInfo;
    var $t26: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t27: bool;
    var $t28: bool;
    var $t29: $1_string_String;
    var $t30: Vec (int);
    var $t31: $1_string_String;
    var $t32: bool;
    var $t33: bool;
    var $t34: bool;
    var $t35: bool;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: $signer;
    var $t42: $1_string_String;
    var $t43: Vec (int);
    var $t44: int;
    var $t45: int;
    var $t46: $1_option_Option'u128';
    var $t47: int;
    var $t48: $1_string_String;
    var $t49: int;
    var $t50: $1_string_String;
    var $t51: int;
    var $t52: int;
    var $t53: Vec (int);
    var $t54: $1_string_String;
    var $t55: Vec (int);
    var $t56: $1_string_String;
    var $t57: $signer;
    var $t58: $1_type_info_TypeInfo;
    var $t59: $1_coin_PairedCoinType;
    var $t60: $1_object_Object'$1_fungible_asset_Metadata';
    var $t61: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'));
    var $t62: int;
    var $t63: $1_coin_PairCreation;
    var $t64: $1_fungible_asset_MintRef;
    var $t65: $1_fungible_asset_TransferRef;
    var $t66: $1_fungible_asset_BurnRef;
    var $t67: $1_option_Option'$1_fungible_asset_MintRef';
    var $t68: $1_option_Option'$1_fungible_asset_TransferRef';
    var $t69: $1_option_Option'$1_fungible_asset_BurnRef';
    var $t70: $1_coin_PairedFungibleAssetRefs;
    var $t71: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t72: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_coin_CoinConversionMap': $1_coin_CoinConversionMap;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;

    // bytecode translation starts here
    // $t15 := features::coin_to_fungible_asset_migration_feature_enabled() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:311:13+60
    assume {:print "$at(105,11046,11106)"} true;
    call $t15 := $1_features_coin_to_fungible_asset_migration_feature_enabled();
    if ($abort_flag) {
        assume {:print "$at(105,11046,11106)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // if ($t15) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:310:9+159
    assume {:print "$at(105,11025,11184)"} true;
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:310:9+159
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:310:9+159
    assume {:print "$at(105,11025,11184)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:312:34+32
    assume {:print "$at(105,11141,11173)"} true;
L0:

    // $t17 := 26 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:312:34+32
    assume {:print "$at(105,11141,11173)"} true;
    $t17 := 26;
    assume $IsValid'u64'($t17);

    // $t18 := error::invalid_state($t17) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:312:13+54
    call $t18 := $1_error_invalid_state($t17);
    if ($abort_flag) {
        assume {:print "$at(105,11120,11174)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_abort($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:310:9+159
    assume {:print "$at(105,11025,11184)"} true;
    assume {:print "$track_abort(30,19):", $t18} $t18 == $t18;

    // $t16 := move($t18) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:310:9+159
    $t16 := $t18;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:310:9+159
    goto L15;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:43+16
    assume {:print "$at(105,11228,11244)"} true;
L2:

    // $t19 := 0x1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:43+16
    assume {:print "$at(105,11228,11244)"} true;
    $t19 := 1;
    assume $IsValid'address'($t19);

    // $t20 := exists<coin::CoinConversionMap>($t19) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:17+6
    $t20 := $ResourceExists($1_coin_CoinConversionMap_$memory, $t19);

    // if ($t20) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:9+102
    if ($t20) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:9+102
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:9+102
    assume {:print "$at(105,11194,11296)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:79+30
L3:

    // $t21 := 27 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:79+30
    assume {:print "$at(105,11264,11294)"} true;
    $t21 := 27;
    assume $IsValid'u64'($t21);

    // $t22 := error::not_found($t21) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:62+48
    call $t22 := $1_error_not_found($t21);
    if ($abort_flag) {
        assume {:print "$at(105,11247,11295)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_abort($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:9+102
    assume {:print "$at(105,11194,11296)"} true;
    assume {:print "$track_abort(30,19):", $t22} $t22 == $t22;

    // $t16 := move($t22) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:9+102
    $t16 := $t22;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:314:9+102
    goto L15;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:315:56+16
    assume {:print "$at(105,11353,11369)"} true;
L5:

    // $t23 := 0x1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:315:56+16
    assume {:print "$at(105,11353,11369)"} true;
    $t23 := 1;
    assume $IsValid'address'($t23);

    // $t24 := borrow_global<coin::CoinConversionMap>($t23) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:315:19+17
    if (!$ResourceExists($1_coin_CoinConversionMap_$memory, $t23)) {
        call $ExecFailureAbort();
    } else {
        $t24 := $Mutation($Global($t23), EmptyVec(), $ResourceValue($1_coin_CoinConversionMap_$memory, $t23));
    }
    if ($abort_flag) {
        assume {:print "$at(105,11316,11333)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[map#148]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:315:13+3
    $temp_0'$1_coin_CoinConversionMap' := $Dereference($t24);
    assume {:print "$track_local(30,19,7):", $temp_0'$1_coin_CoinConversionMap'} $temp_0'$1_coin_CoinConversionMap' == $temp_0'$1_coin_CoinConversionMap';

    // $t25 := type_info::type_of<#0>() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:316:20+30
    assume {:print "$at(105,11391,11421)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t25 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(105,11391,11421)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[type#149]($t25) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:316:13+4
    assume {:print "$track_local(30,19,13):", $t25} $t25 == $t25;

    // $t26 := get_field<coin::CoinConversionMap>.coin_to_fungible_asset_map($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:317:30+31
    assume {:print "$at(105,11452,11483)"} true;
    $t26 := $Dereference($t24)->$coin_to_fungible_asset_map;

    // $t27 := table::contains<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>($t26, $t25) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:317:14+54
    call $t27 := $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t26, $t25);
    if ($abort_flag) {
        assume {:print "$at(105,11436,11490)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t28 := !($t27) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:317:13+1
    call $t28 := $Not($t27);

    // if ($t28) goto L7 else goto L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:317:9+2163
    if ($t28) { goto L7; } else { goto L6; }

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:306:9+32
    assume {:print "$at(105,10812,10844)"} true;
L7:

    // $t29 := type_info::type_name<#0>() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:306:9+32
    assume {:print "$at(105,10812,10844)"} true;
    $t29 := $1_string_String(Vec(DefaultVecMap()[0 := 48][1 := 120][2 := 49][3 := 58][4 := 58][5 := 97][6 := 112][7 := 116][8 := 111][9 := 115][10 := 95][11 := 99][12 := 111][13 := 105][14 := 110][15 := 58][16 := 58][17 := 65][18 := 112][19 := 116][20 := 111][21 := 115][22 := 67][23 := 111][24 := 105][25 := 110], 26));
    if ($abort_flag) {
        assume {:print "$at(105,10812,10844)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t30 := [48, 120, 49, 58, 58, 97, 112, 116, 111, 115, 95, 99, 111, 105, 110, 58, 58, 65, 112, 116, 111, 115, 67, 111, 105, 110] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:306:58+29
    $t30 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(48, 120, 49, 58), MakeVec4(58, 97, 112, 116)), MakeVec4(111, 115, 95, 99)), MakeVec4(111, 105, 110, 58)), MakeVec4(58, 65, 112, 116)), MakeVec4(111, 115, 67, 111)), MakeVec2(105, 110));
    assume $IsValid'vec'u8''($t30);

    // $t31 := string::utf8($t30) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:306:45+43
    call $t31 := $1_string_utf8($t30);
    if ($abort_flag) {
        assume {:print "$at(105,10848,10891)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t32 := ==($t29, $t31) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:306:42+2
    $t32 := $IsEqual'$1_string_String'($t29, $t31);

    // trace_local[is_apt#150]($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:318:17+6
    assume {:print "$at(105,11510,11516)"} true;
    assume {:print "$track_local(30,19,6):", $t32} $t32 == $t32;

    // $t33 := !($t32) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:21+1
    assume {:print "$at(105,11559,11560)"} true;
    call $t33 := $Not($t32);

    // $t34 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:367:66+5
    assume {:print "$at(105,13936,13941)"} true;
    $t34 := false;
    assume $IsValid'bool'($t34);

    // $t35 := ||($t33, $t34) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:29+2
    assume {:print "$at(105,11567,11569)"} true;
    call $t35 := $Or($t33, $t34);

    // if ($t35) goto L9 else goto L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
    if ($t35) { goto L9; } else { goto L8; }

    // label L9 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
L9:

    // goto L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
    assume {:print "$at(105,11551,11640)"} true;
    goto L10;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
L8:

    // drop($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
    assume {:print "$at(105,11551,11640)"} true;

    // $t36 := 28 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:73+27
    $t36 := 28;
    assume $IsValid'u64'($t36);

    // $t37 := error::invalid_state($t36) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:52+49
    call $t37 := $1_error_invalid_state($t36);
    if ($abort_flag) {
        assume {:print "$at(105,11590,11639)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_abort($t37) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
    assume {:print "$at(105,11551,11640)"} true;
    assume {:print "$track_abort(30,19):", $t37} $t37 == $t37;

    // $t16 := move($t37) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
    $t16 := $t37;

    // goto L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:319:13+89
    goto L15;

    // label L10 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:321:21+6
    assume {:print "$at(105,11701,11707)"} true;
L10:

    // if ($t32) goto L12 else goto L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:321:17+380
    assume {:print "$at(105,11697,12077)"} true;
    if ($t32) { goto L12; } else { goto L11; }

    // label L12 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:322:61+16
    assume {:print "$at(105,11771,11787)"} true;
L12:

    // $t38 := 0x1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:322:61+16
    assume {:print "$at(105,11771,11787)"} true;
    $t38 := 1;
    assume $IsValid'address'($t38);

    // $t39 := 0xa at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:322:79+21
    $t39 := 10;
    assume $IsValid'address'($t39);

    // $t3 := object::create_sticky_object_at_address($t38, $t39) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:322:21+80
    call $t3 := $1_object_create_sticky_object_at_address($t38, $t39);
    if ($abort_flag) {
        assume {:print "$at(105,11731,11811)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // goto L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:321:17+380
    assume {:print "$at(105,11697,12077)"} true;
    goto L13;

    // label L11 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:325:55+21
    assume {:print "$at(105,11940,11961)"} true;
L11:

    // $t40 := 0xa at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:325:55+21
    assume {:print "$at(105,11940,11961)"} true;
    $t40 := 10;
    assume $IsValid'address'($t40);

    // $t41 := opaque begin: create_signer::create_signer($t40) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:325:26+51

    // assume WellFormed($t41) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:325:26+51
    assume $IsValid'signer'($t41) && $1_signer_is_txn_signer($t41) && $1_signer_is_txn_signer_addr($t41->$addr);

    // assume Eq<address>(signer::$address_of($t41), $t40) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:325:26+51
    assume $IsEqual'address'($1_signer_$address_of($t41), $t40);

    // $t41 := opaque end: create_signer::create_signer($t40) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:325:26+51

    // $t42 := type_info::type_name<#0>() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:326:41+32
    assume {:print "$at(105,12004,12036)"} true;
    $t42 := $1_string_String(Vec(DefaultVecMap()[0 := 48][1 := 120][2 := 49][3 := 58][4 := 58][5 := 97][6 := 112][7 := 116][8 := 111][9 := 115][10 := 95][11 := 99][12 := 111][13 := 105][14 := 110][15 := 58][16 := 58][17 := 65][18 := 112][19 := 116][20 := 111][21 := 115][22 := 67][23 := 111][24 := 105][25 := 110], 26));
    if ($abort_flag) {
        assume {:print "$at(105,12004,12036)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t43 := string::bytes($t42) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:326:26+48
    call $t43 := $1_string_bytes($t42);
    if ($abort_flag) {
        assume {:print "$at(105,11989,12037)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // assume Identical($t44, signer::$address_of($t41)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:154:9+50
    assume {:print "$at(156,6577,6627)"} true;
    assume ($t44 == $1_signer_$address_of($t41));

    // assume Identical($t45, object::spec_create_object_address($t44, $t43)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/object.spec.move:155:9+65
    assume {:print "$at(156,6636,6701)"} true;
    assume ($t45 == $1_object_spec_create_object_address($t44, $t43));

    // $t3 := object::create_named_object($t41, $t43) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:324:21+202
    assume {:print "$at(105,11857,12059)"} true;
    call $t3 := $1_object_create_named_object($t41, $t43);
    if ($abort_flag) {
        assume {:print "$at(105,11857,12059)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // label L13 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:321:17+380
    assume {:print "$at(105,11697,12077)"} true;
L13:

    // trace_local[metadata_object_cref#151]($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:320:17+20
    assume {:print "$at(105,11658,11678)"} true;
    assume {:print "$track_local(30,19,9):", $t3} $t3 == $t3;

    // $t46 := opaque begin: option::none<u128>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:331:17+14
    assume {:print "$at(105,12215,12229)"} true;

    // assume And(WellFormed($t46), Le(Len<u128>(select option::Option.vec($t46)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:331:17+14
    assume ($IsValid'$1_option_Option'u128''($t46) && (LenVec($t46->$vec) <= 1));

    // assume Eq<option::Option<u128>>($t46, option::spec_none<u128>()) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:331:17+14
    assume $IsEqual'$1_option_Option'u128''($t46, $1_option_spec_none'u128'());

    // $t46 := opaque end: option::none<u128>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:331:17+14

    // assume Identical($t47, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:205:9+58
    assume {:print "$at(106,10157,10215)"} true;
    assume ($t47 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t48 := coin::name<#0>() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:332:17+16
    assume {:print "$at(105,12247,12263)"} true;
    call $t48 := $1_coin_name'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,12247,12263)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // assume Identical($t49, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:205:9+58
    assume {:print "$at(106,10157,10215)"} true;
    assume ($t49 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t50 := coin::symbol<#0>() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:333:17+18
    assume {:print "$at(105,12281,12299)"} true;
    call $t50 := $1_coin_symbol'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,12281,12299)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // assume Identical($t51, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:205:9+58
    assume {:print "$at(106,10157,10215)"} true;
    assume ($t51 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t52 := coin::decimals<#0>() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:334:17+20
    assume {:print "$at(105,12317,12337)"} true;
    call $t52 := $1_coin_decimals'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(105,12317,12337)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t53 := [] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:335:30+3
    assume {:print "$at(105,12368,12371)"} true;
    $t53 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t53);

    // $t54 := string::utf8($t53) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:335:17+17
    call $t54 := $1_string_utf8($t53);
    if ($abort_flag) {
        assume {:print "$at(105,12355,12372)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t55 := [] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:336:30+3
    assume {:print "$at(105,12403,12406)"} true;
    $t55 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t55);

    // $t56 := string::utf8($t55) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:336:17+17
    call $t56 := $1_string_utf8($t55);
    if ($abort_flag) {
        assume {:print "$at(105,12390,12407)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // primary_fungible_store::create_primary_store_enabled_fungible_asset($t3, $t46, $t48, $t50, $t52, $t54, $t56) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:329:13+331
    assume {:print "$at(105,12091,12422)"} true;
    call $1_primary_fungible_store_create_primary_store_enabled_fungible_asset($t3, $t46, $t48, $t50, $t52, $t54, $t56);
    if ($abort_flag) {
        assume {:print "$at(105,12091,12422)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t57 := object::generate_signer($t3) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:339:43+46
    assume {:print "$at(105,12467,12513)"} true;
    call $t57 := $1_object_generate_signer($t3);
    if ($abort_flag) {
        assume {:print "$at(105,12467,12513)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[metadata_object_signer#152]($t57) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:339:17+22
    assume {:print "$track_local(30,19,10):", $t57} $t57 == $t57;

    // $t58 := type_info::type_of<#0>() on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:340:24+30
    assume {:print "$at(105,12538,12568)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t58 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(105,12538,12568)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[type#153]($t58) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:340:17+4
    assume {:print "$track_local(30,19,14):", $t58} $t58 == $t58;

    // $t59 := pack coin::PairedCoinType($t58) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:341:45+23
    assume {:print "$at(105,12614,12637)"} true;
    $t59 := $1_coin_PairedCoinType($t58);

    // move_to<coin::PairedCoinType>($t59, $t57) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:341:13+7
    if ($ResourceExists($1_coin_PairedCoinType_$memory, $t57->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedCoinType_$memory := $ResourceUpdate($1_coin_PairedCoinType_$memory, $t57->$addr, $t59);
    }
    if ($abort_flag) {
        assume {:print "$at(105,12582,12589)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t60 := object::object_from_constructor_ref<fungible_asset::Metadata>($t3) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:342:32+58
    assume {:print "$at(105,12671,12729)"} true;
    call $t60 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t3);
    if ($abort_flag) {
        assume {:print "$at(105,12671,12729)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[metadata_obj#154]($t60) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:342:17+12
    assume {:print "$track_local(30,19,8):", $t60} $t60 == $t60;

    // $t61 := borrow_field<coin::CoinConversionMap>.coin_to_fungible_asset_map($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:344:24+35
    assume {:print "$at(105,12755,12790)"} true;
    $t61 := $ChildMutation($t24, 0, $Dereference($t24)->$coin_to_fungible_asset_map);

    // table::add<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>($t61, $t58, $t60) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:344:13+67
    call $t61 := $1_table_add'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t61, $t58, $t60);
    if ($abort_flag) {
        assume {:print "$at(105,12744,12811)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // write_back[Reference($t24).coin_to_fungible_asset_map (table::Table<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>)]($t61) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:344:13+67
    $t24 := $UpdateMutation($t24, $Update'$1_coin_CoinConversionMap'_coin_to_fungible_asset_map($Dereference($t24), $Dereference($t61)));

    // $t62 := object::object_address<fungible_asset::Metadata>($t60) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:347:50+29
    assume {:print "$at(105,12934,12963)"} true;
    call $t62 := $1_object_object_address'$1_fungible_asset_Metadata'($t60);
    if ($abort_flag) {
        assume {:print "$at(105,12934,12963)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // $t63 := pack coin::PairCreation($t58, $t62) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:345:25+140
    assume {:print "$at(105,12837,12977)"} true;
    $t63 := $1_coin_PairCreation($t58, $t62);

    // opaque begin: event::emit<coin::PairCreation>($t63) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:345:13+153

    // opaque end: event::emit<coin::PairCreation>($t63) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:345:13+153

    // $t64 := fungible_asset::generate_mint_ref($t3) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:351:28+56
    assume {:print "$at(105,13048,13104)"} true;
    call $t64 := $1_fungible_asset_generate_mint_ref($t3);
    if ($abort_flag) {
        assume {:print "$at(105,13048,13104)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[mint_ref#155]($t64) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:351:17+8
    assume {:print "$track_local(30,19,11):", $t64} $t64 == $t64;

    // $t65 := fungible_asset::generate_transfer_ref($t3) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:352:32+60
    assume {:print "$at(105,13137,13197)"} true;
    call $t65 := $1_fungible_asset_generate_transfer_ref($t3);
    if ($abort_flag) {
        assume {:print "$at(105,13137,13197)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[transfer_ref#156]($t65) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:352:17+12
    assume {:print "$track_local(30,19,12):", $t65} $t65 == $t65;

    // $t66 := fungible_asset::generate_burn_ref($t3) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:353:28+56
    assume {:print "$at(105,13226,13282)"} true;
    call $t66 := $1_fungible_asset_generate_burn_ref($t3);
    if ($abort_flag) {
        assume {:print "$at(105,13226,13282)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_local[burn_ref#157]($t66) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:353:17+8
    assume {:print "$track_local(30,19,5):", $t66} $t66 == $t66;

    // $t67 := opaque begin: option::some<fungible_asset::MintRef>($t64) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:356:35+22
    assume {:print "$at(105,13404,13426)"} true;

    // assume And(WellFormed($t67), Le(Len<fungible_asset::MintRef>(select option::Option.vec($t67)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:356:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_MintRef''($t67) && (LenVec($t67->$vec) <= 1));

    // assume Eq<option::Option<fungible_asset::MintRef>>($t67, option::spec_some<fungible_asset::MintRef>($t64)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:356:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''($t67, $1_option_spec_some'$1_fungible_asset_MintRef'($t64));

    // $t67 := opaque end: option::some<fungible_asset::MintRef>($t64) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:356:35+22

    // $t68 := opaque begin: option::some<fungible_asset::TransferRef>($t65) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:357:39+26
    assume {:print "$at(105,13466,13492)"} true;

    // assume And(WellFormed($t68), Le(Len<fungible_asset::TransferRef>(select option::Option.vec($t68)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:357:39+26
    assume ($IsValid'$1_option_Option'$1_fungible_asset_TransferRef''($t68) && (LenVec($t68->$vec) <= 1));

    // assume Eq<option::Option<fungible_asset::TransferRef>>($t68, option::spec_some<fungible_asset::TransferRef>($t65)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:357:39+26
    assume $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''($t68, $1_option_spec_some'$1_fungible_asset_TransferRef'($t65));

    // $t68 := opaque end: option::some<fungible_asset::TransferRef>($t65) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:357:39+26

    // $t69 := opaque begin: option::some<fungible_asset::BurnRef>($t66) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:358:35+22
    assume {:print "$at(105,13528,13550)"} true;

    // assume And(WellFormed($t69), Le(Len<fungible_asset::BurnRef>(select option::Option.vec($t69)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:358:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_BurnRef''($t69) && (LenVec($t69->$vec) <= 1));

    // assume Eq<option::Option<fungible_asset::BurnRef>>($t69, option::spec_some<fungible_asset::BurnRef>($t66)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:358:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''($t69, $1_option_spec_some'$1_fungible_asset_BurnRef'($t66));

    // $t69 := opaque end: option::some<fungible_asset::BurnRef>($t66) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:358:35+22

    // $t70 := pack coin::PairedFungibleAssetRefs($t67, $t68, $t69) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:355:17+225
    assume {:print "$at(105,13344,13569)"} true;
    $t70 := $1_coin_PairedFungibleAssetRefs($t67, $t68, $t69);

    // move_to<coin::PairedFungibleAssetRefs>($t70, $t57) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:354:13+7
    assume {:print "$at(105,13296,13303)"} true;
    if ($ResourceExists($1_coin_PairedFungibleAssetRefs_$memory, $t57->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedFungibleAssetRefs_$memory := $ResourceUpdate($1_coin_PairedFungibleAssetRefs_$memory, $t57->$addr, $t70);
    }
    if ($abort_flag) {
        assume {:print "$at(105,13296,13303)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:362:25+3
    assume {:print "$at(105,13620,13623)"} true;
L6:

    // $t71 := get_field<coin::CoinConversionMap>.coin_to_fungible_asset_map($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:362:24+31
    assume {:print "$at(105,13619,13650)"} true;
    $t71 := $Dereference($t24)->$coin_to_fungible_asset_map;

    // write_back[coin::CoinConversionMap@]($t24) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:362:24+31
    $1_coin_CoinConversionMap_$memory := $ResourceUpdate($1_coin_CoinConversionMap_$memory, $GlobalLocationAddress($t24),
        $Dereference($t24));

    // $t72 := table::borrow<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>($t71, $t25) on_abort goto L15 with $t16 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:362:10+52
    call $t72 := $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t71, $t25);
    if ($abort_flag) {
        assume {:print "$at(105,13605,13657)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(30,19):", $t16} $t16 == $t16;
        goto L15;
    }

    // trace_return[0]($t72) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:362:9+53
    assume {:print "$track_return(30,19,0):", $t72} $t72 == $t72;

    // label L14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:368:5+1
    assume {:print "$at(105,13947,13948)"} true;
L14:

    // return $t72 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:368:5+1
    assume {:print "$at(105,13947,13948)"} true;
    $ret0 := $t72;
    return;

    // label L15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:368:5+1
L15:

    // abort($t16) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:368:5+1
    assume {:print "$at(105,13947,13948)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun coin::fungible_asset_to_coin<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:391:5+684
procedure {:inline 1} $1_coin_fungible_asset_to_coin'$1_aptos_coin_AptosCoin'(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $1_coin_PairedCoinType;
    var $t10: $1_type_info_TypeInfo;
    var $t11: $1_type_info_TypeInfo;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fungible_asset]($t0) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:391:5+1
    assume {:print "$at(105,14825,14826)"} true;
    assume {:print "$track_local(30,24,0):", $t0} $t0 == $t0;

    // $t3 := fungible_asset::metadata_from_asset($t0) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:394:53+52
    assume {:print "$at(105,15011,15063)"} true;
    call $t3 := $1_fungible_asset_metadata_from_asset($t0);
    if ($abort_flag) {
        assume {:print "$at(105,15011,15063)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // $t5 := object::object_address<fungible_asset::Metadata>($t3) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:394:29+77
    call $t5 := $1_object_object_address'$1_fungible_asset_Metadata'($t3);
    if ($abort_flag) {
        assume {:print "$at(105,14987,15064)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_local[metadata_addr]($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:394:13+13
    assume {:print "$track_local(30,24,2):", $t5} $t5 == $t5;

    // $t6 := object::object_exists<coin::PairedCoinType>($t5) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:396:13+52
    assume {:print "$at(105,15095,15147)"} true;
    call $t6 := $1_object_object_exists'$1_coin_PairedCoinType'($t5);
    if ($abort_flag) {
        assume {:print "$at(105,15095,15147)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // if ($t6) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:395:9+127
    assume {:print "$at(105,15074,15201)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:395:9+127
L1:

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:395:9+127
    assume {:print "$at(105,15074,15201)"} true;
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:397:30+12
    assume {:print "$at(105,15178,15190)"} true;
L0:

    // $t7 := 15 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:397:30+12
    assume {:print "$at(105,15178,15190)"} true;
    $t7 := 15;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:397:13+30
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(105,15161,15191)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:395:9+127
    assume {:print "$at(105,15074,15201)"} true;
    assume {:print "$track_abort(30,24):", $t8} $t8 == $t8;

    // $t4 := move($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:395:9+127
    $t4 := $t8;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:395:9+127
    goto L7;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:399:60+13
    assume {:print "$at(105,15262,15275)"} true;
L2:

    // $t9 := get_global<coin::PairedCoinType>($t5) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:399:30+13
    assume {:print "$at(105,15232,15245)"} true;
    if (!$ResourceExists($1_coin_PairedCoinType_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_coin_PairedCoinType_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(105,15232,15245)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // $t10 := get_field<coin::PairedCoinType>.type($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:399:30+49
    $t10 := $t9->$type;

    // $t11 := type_info::type_of<#0>() on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:35+30
    assume {:print "$at(105,15317,15347)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t11 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(105,15317,15347)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // $t12 := ==($t10, $t11) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:32+2
    $t12 := $IsEqual'$1_type_info_TypeInfo'($t10, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:9+103
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:9+103
L4:

    // goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:9+103
    assume {:print "$at(105,15291,15394)"} true;
    goto L5;

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:91+19
L3:

    // $t13 := 17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:91+19
    assume {:print "$at(105,15373,15392)"} true;
    $t13 := 17;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:67+44
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(105,15349,15393)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:9+103
    assume {:print "$at(105,15291,15394)"} true;
    assume {:print "$track_abort(30,24):", $t14} $t14 == $t14;

    // $t4 := move($t14) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:9+103
    $t4 := $t14;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:400:9+103
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:401:52+14
    assume {:print "$at(105,15447,15461)"} true;
L5:

    // $t15 := fungible_asset::burn_internal($t0) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:401:22+45
    assume {:print "$at(105,15417,15462)"} true;
    call $t15 := $1_fungible_asset_burn_internal($t0);
    if ($abort_flag) {
        assume {:print "$at(105,15417,15462)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // assume Identical($t16, select type_info::TypeInfo.account_address<type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:108:9+58
    assume {:print "$at(106,6085,6143)"} true;
    assume ($t16 == $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address);

    // $t17 := coin::mint_internal<#0>($t15) on_abort goto L7 with $t4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:402:9+31
    assume {:print "$at(105,15472,15503)"} true;
    call $t17 := $1_coin_mint_internal'$1_aptos_coin_AptosCoin'($t15);
    if ($abort_flag) {
        assume {:print "$at(105,15472,15503)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(30,24):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_return[0]($t17) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:402:9+31
    assume {:print "$track_return(30,24,0):", $t17} $t17 == $t17;

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:403:5+1
    assume {:print "$at(105,15508,15509)"} true;
L6:

    // return $t17 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:403:5+1
    assume {:print "$at(105,15508,15509)"} true;
    $ret0 := $t17;
    return;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:403:5+1
L7:

    // abort($t4) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:403:5+1
    assume {:print "$at(105,15508,15509)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun coin::paired_metadata<aptos_coin::AptosCoin> [baseline] at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:276:5+545
procedure {:inline 1} $1_coin_paired_metadata'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'')
{
    // declare local variables
    var $t0: bool;
    var $t1: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t2: $1_type_info_TypeInfo;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: $1_coin_CoinConversionMap;
    var $t9: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t10: $1_type_info_TypeInfo;
    var $t11: bool;
    var $t12: $1_object_Object'$1_fungible_asset_Metadata';
    var $t13: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t14: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t15: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''': Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;

    // bytecode translation starts here
    // $t3 := 0x1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:39+16
    assume {:print "$at(105,9674,9690)"} true;
    $t3 := 1;
    assume $IsValid'address'($t3);

    // $t4 := exists<coin::CoinConversionMap>($t3) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:13+6
    $t4 := $ResourceExists($1_coin_CoinConversionMap_$memory, $t3);

    // if ($t4) goto L1 else goto L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:13+116
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:60+69
L1:

    // $t0 := features::coin_to_fungible_asset_migration_feature_enabled() on_abort goto L8 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:60+69
    assume {:print "$at(105,9695,9764)"} true;
    call $t0 := $1_features_coin_to_fungible_asset_migration_feature_enabled();
    if ($abort_flag) {
        assume {:print "$at(105,9695,9764)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,47):", $t5} $t5 == $t5;
        goto L8;
    }

    // goto L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:13+116
    goto L2;

    // label L0 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:13+116
L0:

    // $t6 := false at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:13+116
    assume {:print "$at(105,9648,9764)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t0 := $t6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:13+116
    $t0 := $t6;

    // label L2 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:13+116
L2:

    // if ($t0) goto L4 else goto L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:277:9+413
    assume {:print "$at(105,9644,10057)"} true;
    if ($t0) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:279:57+16
    assume {:print "$at(105,9824,9840)"} true;
L4:

    // $t7 := 0x1 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:279:57+16
    assume {:print "$at(105,9824,9840)"} true;
    $t7 := 1;
    assume $IsValid'address'($t7);

    // $t8 := get_global<coin::CoinConversionMap>($t7) on_abort goto L8 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:279:24+13
    if (!$ResourceExists($1_coin_CoinConversionMap_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_coin_CoinConversionMap_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(105,9791,9804)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,47):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t9 := get_field<coin::CoinConversionMap>.coin_to_fungible_asset_map($t8) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:279:23+78
    $t9 := $t8->$coin_to_fungible_asset_map;

    // trace_local[map]($t9) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:279:17+3
    assume {:print "$track_local(30,47,1):", $t9} $t9 == $t9;

    // $t10 := type_info::type_of<#0>() on_abort goto L8 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:280:24+30
    assume {:print "$at(105,9893,9923)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t10 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(105,9893,9923)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,47):", $t5} $t5 == $t5;
        goto L8;
    }

    // trace_local[type]($t10) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:280:17+4
    assume {:print "$track_local(30,47,2):", $t10} $t10 == $t10;

    // $t11 := table::contains<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>($t9, $t10) on_abort goto L8 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:281:17+26
    assume {:print "$at(105,9941,9967)"} true;
    call $t11 := $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(105,9941,9967)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,47):", $t5} $t5 == $t5;
        goto L8;
    }

    // if ($t11) goto L6 else goto L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:281:13+110
    if ($t11) { goto L6; } else { goto L5; }

    // label L6 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:52+3
    assume {:print "$at(105,10022,10025)"} true;
L6:

    // $t12 := table::borrow<type_info::TypeInfo, object::Object<fungible_asset::Metadata>>($t9, $t10) on_abort goto L8 with $t5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:38+24
    assume {:print "$at(105,10008,10032)"} true;
    call $t12 := $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(105,10008,10032)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(30,47):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t13 := opaque begin: option::some<object::Object<fungible_asset::Metadata>>($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:24+39

    // assume And(WellFormed($t13), Le(Len<object::Object<fungible_asset::Metadata>>(select option::Option.vec($t13)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:24+39
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<option::Option<object::Object<fungible_asset::Metadata>>>($t13, option::spec_some<object::Object<fungible_asset::Metadata>>($t12)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:24+39
    assume $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t13, $1_option_spec_some'$1_object_Object'$1_fungible_asset_Metadata''($t12));

    // $t13 := opaque end: option::some<object::Object<fungible_asset::Metadata>>($t12) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:24+39

    // trace_return[0]($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:17+46
    assume {:print "$track_return(30,47,0):", $t13} $t13 == $t13;

    // $t14 := move($t13) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:17+46
    $t14 := $t13;

    // goto L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:282:17+46
    goto L7;

    // label L5 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:281:13+110
    assume {:print "$at(105,9937,10047)"} true;
L5:

    // label L3 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:285:9+14
    assume {:print "$at(105,10067,10081)"} true;
L3:

    // $t15 := opaque begin: option::none<object::Object<fungible_asset::Metadata>>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:285:9+14
    assume {:print "$at(105,10067,10081)"} true;

    // assume And(WellFormed($t15), Le(Len<object::Object<fungible_asset::Metadata>>(select option::Option.vec($t15)), 1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:285:9+14
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t15) && (LenVec($t15->$vec) <= 1));

    // assume Eq<option::Option<object::Object<fungible_asset::Metadata>>>($t15, option::spec_none<object::Object<fungible_asset::Metadata>>()) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:285:9+14
    assume $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t15, $1_option_spec_none'$1_object_Object'$1_fungible_asset_Metadata''());

    // $t15 := opaque end: option::none<object::Object<fungible_asset::Metadata>>() at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:285:9+14

    // trace_return[0]($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:285:9+14
    assume {:print "$track_return(30,47,0):", $t15} $t15 == $t15;

    // $t14 := move($t15) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:285:9+14
    $t14 := $t15;

    // label L7 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:286:5+1
    assume {:print "$at(105,10086,10087)"} true;
L7:

    // return $t14 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:286:5+1
    assume {:print "$at(105,10086,10087)"} true;
    $ret0 := $t14;
    return;

    // label L8 at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:286:5+1
L8:

    // abort($t5) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.move:286:5+1
    assume {:print "$at(105,10086,10087)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// struct aptos_coin::AptosCoin at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/aptos_coin.move:22:5+27
datatype $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin($dummy_field: bool)
}
function {:inline} $Update'$1_aptos_coin_AptosCoin'_dummy_field(s: $1_aptos_coin_AptosCoin, x: bool): $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin(x)
}
function $IsValid'$1_aptos_coin_AptosCoin'(s: $1_aptos_coin_AptosCoin): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_aptos_coin_AptosCoin'(s1: $1_aptos_coin_AptosCoin, s2: $1_aptos_coin_AptosCoin): bool {
    s1 == s2
}
var $1_aptos_coin_AptosCoin_$memory: $Memory $1_aptos_coin_AptosCoin;

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// struct BoxPeer::Content at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:26:5+317
datatype $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content($owner: int, $owner_name: $1_string_String, $description: $1_string_String, $title: $1_string_String, $cid: $1_string_String, $fee_paid: int, $consumer_fee: int, $file_type: $1_string_String, $purchasers: Vec (int))
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_owner(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(x, s->$owner_name, s->$description, s->$title, s->$cid, s->$fee_paid, s->$consumer_fee, s->$file_type, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_owner_name(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: $1_string_String): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, x, s->$description, s->$title, s->$cid, s->$fee_paid, s->$consumer_fee, s->$file_type, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_description(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: $1_string_String): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, s->$owner_name, x, s->$title, s->$cid, s->$fee_paid, s->$consumer_fee, s->$file_type, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_title(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: $1_string_String): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, s->$owner_name, s->$description, x, s->$cid, s->$fee_paid, s->$consumer_fee, s->$file_type, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_cid(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: $1_string_String): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, s->$owner_name, s->$description, s->$title, x, s->$fee_paid, s->$consumer_fee, s->$file_type, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_fee_paid(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, s->$owner_name, s->$description, s->$title, s->$cid, x, s->$consumer_fee, s->$file_type, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_consumer_fee(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, s->$owner_name, s->$description, s->$title, s->$cid, s->$fee_paid, x, s->$file_type, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_file_type(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: $1_string_String): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, s->$owner_name, s->$description, s->$title, s->$cid, s->$fee_paid, s->$consumer_fee, x, s->$purchasers)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_purchasers(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, x: Vec (int)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content(s->$owner, s->$owner_name, s->$description, s->$title, s->$cid, s->$fee_paid, s->$consumer_fee, s->$file_type, x)
}
function $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content): bool {
    $IsValid'address'(s->$owner)
      && $IsValid'$1_string_String'(s->$owner_name)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$title)
      && $IsValid'$1_string_String'(s->$cid)
      && $IsValid'u64'(s->$fee_paid)
      && $IsValid'u64'(s->$consumer_fee)
      && $IsValid'$1_string_String'(s->$file_type)
      && $IsValid'vec'address''(s->$purchasers)
}
function {:inline} $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'(s1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content, s2: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content): bool {
    $IsEqual'address'(s1->$owner, s2->$owner)
    && $IsEqual'$1_string_String'(s1->$owner_name, s2->$owner_name)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$title, s2->$title)
    && $IsEqual'$1_string_String'(s1->$cid, s2->$cid)
    && $IsEqual'u64'(s1->$fee_paid, s2->$fee_paid)
    && $IsEqual'u64'(s1->$consumer_fee, s2->$consumer_fee)
    && $IsEqual'$1_string_String'(s1->$file_type, s2->$file_type)
    && $IsEqual'vec'address''(s1->$purchasers, s2->$purchasers)}

// struct BoxPeer::ContentFee at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:49:5+88
datatype $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee($cid: $1_string_String, $total_fee: int)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'_cid(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee, x: $1_string_String): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee(x, s->$total_fee)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'_total_fee(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee, x: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee(s->$cid, x)
}
function $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee): bool {
    $IsValid'$1_string_String'(s->$cid)
      && $IsValid'u64'(s->$total_fee)
}
function {:inline} $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'(s1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee, s2: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee): bool {
    $IsEqual'$1_string_String'(s1->$cid, s2->$cid)
    && $IsEqual'u64'(s1->$total_fee, s2->$total_fee)}

// struct BoxPeer::ContentRegistry at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:40:5+73
datatype $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry($contents: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content))
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'_contents(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry, x: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry(x)
}
function $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry): bool {
    $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s->$contents)
}
function {:inline} $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'(s1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry, s2: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry): bool {
    $IsEqual'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s1->$contents, s2->$contents)}
var $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory: $Memory $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry;

// struct BoxPeer::ContractSigner at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:55:5+133
datatype $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner($signer_capability: $1_account_SignerCapability, $content_fees: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee))
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'_signer_capability(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner, x: $1_account_SignerCapability): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner(x, s->$content_fees)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'_content_fees(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner, x: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner(s->$signer_capability, x)
}
function $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner): bool {
    $IsValid'$1_account_SignerCapability'(s->$signer_capability)
      && $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(s->$content_fees)
}
function {:inline} $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'(s1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner, s2: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner): bool {
    $IsEqual'$1_account_SignerCapability'(s1->$signer_capability, s2->$signer_capability)
    && $IsEqual'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''(s1->$content_fees, s2->$content_fees)}
var $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory: $Memory $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner;

// struct BoxPeer::GlobalContentRegistry at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:45:5+138
datatype $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry($contents: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content), $content_event_handle: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content')
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'_contents(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry, x: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content)): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry(x, s->$content_event_handle)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'_content_event_handle(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry, x: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry(s->$contents, x)
}
function $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry): bool {
    $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s->$contents)
      && $IsValid'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s->$content_event_handle)
}
function {:inline} $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'(s1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry, s2: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry): bool {
    $IsEqual'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s1->$contents, s2->$contents)
    && $IsEqual'$1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''(s1->$content_event_handle, s2->$content_event_handle)}
var $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory: $Memory $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;

// struct BoxPeer::PurchaserAddedEvent at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:62:5+112
datatype $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent($cid: $1_string_String, $purchaser: int)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'_cid(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent, x: $1_string_String): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent(x, s->$purchaser)
}
function {:inline} $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'_purchaser(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent, x: int): $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent {
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent(s->$cid, x)
}
function $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(s: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent): bool {
    $IsValid'$1_string_String'(s->$cid)
      && $IsValid'address'(s->$purchaser)
}
function {:inline} $IsEqual'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent'(s1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent, s2: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent): bool {
    $IsEqual'$1_string_String'(s1->$cid, s2->$cid)
    && $IsEqual'address'(s1->$purchaser, s2->$purchaser)}
var $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent_$memory: $Memory $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent;

// fun BoxPeer::get_purchasers_by_cid [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:233:5+517
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_get_purchasers_by_cid$verify(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t2: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $t3: int;
    var $t4: int;
    var $t5: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $t6: int;
    var $t7: int;
    var $t8: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t9: int;
    var $t10: bool;
    var $t11: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t12: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t13: $1_string_String;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: Vec (int);
    var $t18: Vec (int);
    var $t19: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:233:5+1
    assume {:print "$at(2,7838,7839)"} true;
    assume $IsValid'$1_string_String'($t0);

    // assume forall $rsc: BoxPeer::GlobalContentRegistry: ResourceDomain<BoxPeer::GlobalContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:233:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'($rsc))));

    // trace_local[cid]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:233:5+1
    assume {:print "$track_local(84,0,0):", $t0} $t0 == $t0;

    // $t4 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:234:69+16
    assume {:print "$at(2,8010,8026)"} true;
    $t4 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t4);

    // $t5 := get_global<BoxPeer::GlobalContentRegistry>($t4) on_abort goto L8 with $t6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:234:32+13
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(2,7973,7986)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(84,0):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[content_registry]($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:234:13+16
    assume {:print "$track_local(84,0,2):", $t5} $t5 == $t5;

    // $t7 := 0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:236:17+1
    assume {:print "$at(2,8046,8047)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // trace_local[i]($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:236:13+1
    assume {:print "$track_local(84,0,3):", $t7} $t7 == $t7;

    // label L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume {:print "$at(2,8064,8065)"} true;
L5:

    // $t3 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume {:print "$at(2,8064,8065)"} true;
    havoc $t3;

    // assume WellFormed($t3) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'u64'($t3);

    // $t8 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t8;

    // assume WellFormed($t8) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($t8);

    // $t9 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t9;

    // assume WellFormed($t9) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'u64'($t9);

    // $t10 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t10;

    // assume WellFormed($t10) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'bool'($t10);

    // $t11 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t11;

    // assume WellFormed($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($t11);

    // $t12 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t12);

    // $t13 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'$1_string_String'($t13);

    // $t14 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'bool'($t14);

    // $t15 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'u64'($t15);

    // $t16 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume $IsValid'u64'($t16);

    // trace_local[i]($t3) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(84,0,3):", $t3} $t3 == $t3;

    // assume Not(AbortFlag()) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:16+1
    assume !$abort_flag;

    // $t8 := get_field<BoxPeer::GlobalContentRegistry>.contents($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:35+26
    $t8 := $t5->$contents;

    // $t9 := vector::length<BoxPeer::Content>($t8) on_abort goto L8 with $t6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:20+42
    call $t9 := $1_vector_length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t8);
    if ($abort_flag) {
        assume {:print "$at(2,8068,8110)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(84,0):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t10 := <($t3, $t9) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:18+1
    call $t10 := $Lt($t3, $t9);

    // if ($t10) goto L1 else goto L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:9+257
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:237:9+257
L1:

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:238:43+16
    assume {:print "$at(2,8156,8172)"} true;
L2:

    // $t11 := get_field<BoxPeer::GlobalContentRegistry>.contents($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:238:42+26
    assume {:print "$at(2,8155,8181)"} true;
    $t11 := $t5->$contents;

    // $t12 := vector::borrow<BoxPeer::Content>($t11, $t3) on_abort goto L8 with $t6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:238:27+45
    call $t12 := $1_vector_borrow'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t11, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,8140,8185)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(84,0):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[content]($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:238:17+7
    assume {:print "$track_local(84,0,1):", $t12} $t12 == $t12;

    // $t13 := get_field<BoxPeer::Content>.cid($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:239:17+11
    assume {:print "$at(2,8203,8214)"} true;
    $t13 := $t12->$cid;

    // $t14 := ==($t13, $t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:239:29+2
    $t14 := $IsEqual'$1_string_String'($t13, $t0);

    // if ($t14) goto L4 else goto L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:239:13+81
    if ($t14) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:240:17+25
    assume {:print "$at(2,8241,8266)"} true;
L4:

    // $t17 := get_field<BoxPeer::Content>.purchasers($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:240:24+18
    assume {:print "$at(2,8248,8266)"} true;
    $t17 := $t12->$purchasers;

    // trace_return[0]($t17) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:240:17+25
    assume {:print "$track_return(84,0,0):", $t17} $t17 == $t17;

    // $t18 := move($t17) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:240:17+25
    $t18 := $t17;

    // goto L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:240:17+25
    goto L7;

    // label L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:239:13+81
    assume {:print "$at(2,8199,8280)"} true;
L3:

    // $t15 := 1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:242:21+1
    assume {:print "$at(2,8302,8303)"} true;
    $t15 := 1;
    assume $IsValid'u64'($t15);

    // $t16 := +($t3, $t15) on_abort goto L8 with $t6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:242:19+1
    call $t16 := $AddU64($t3, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,8300,8301)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(84,0):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[i]($t16) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:242:13+1
    assume {:print "$track_local(84,0,3):", $t16} $t16 == $t16;

    // goto L6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:242:22+1
    goto L6;

    // label L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:245:9+24
    assume {:print "$at(2,8325,8349)"} true;
L0:

    // $t19 := vector::empty<address>() on_abort goto L8 with $t6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:245:9+24
    assume {:print "$at(2,8325,8349)"} true;
    call $t19 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,8325,8349)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(84,0):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_return[0]($t19) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:245:9+24
    assume {:print "$track_return(84,0,0):", $t19} $t19 == $t19;

    // $t18 := move($t19) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:245:9+24
    $t18 := $t19;

    // goto L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:245:9+24
    goto L7;

    // label L6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:245:9+24
    // Loop invariant checking block for the loop started with header: L5
L6:

    // stop() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:245:9+24
    assume {:print "$at(2,8325,8349)"} true;
    assume false;
    return;

    // label L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:246:5+1
    assume {:print "$at(2,8354,8355)"} true;
L7:

    // return $t18 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:246:5+1
    assume {:print "$at(2,8354,8355)"} true;
    $ret0 := $t18;
    return;

    // label L8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:246:5+1
L8:

    // abort($t6) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:246:5+1
    assume {:print "$at(2,8354,8355)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun BoxPeer::get_reward [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1276
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_get_reward$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var $t4: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var $t5: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner);
    var $t6: $signer;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner);
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var $t17: int;
    var $t18: bool;
    var $t19: $1_string_String;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee));
    var $t24: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: $1_account_SignerCapability;
    var $t31: int;
    var $t32: $signer;
    var $t33: int;
    var $t34: int;
    var $t35: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t36: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t37: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee));
    var $t38: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var $t39: int;
    var $t40: int;
    var $t41: $Mutation (int);
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume {:print "$at(2,9159,9160)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume $IsValid'u64'($t2);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: object::TombStone: ResourceDomain<object::TombStone>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: object::Untransferable: ResourceDomain<object::Untransferable>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::Untransferable: ResourceDomain<fungible_asset::Untransferable>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentFungibleBalance: ResourceDomain<fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentSupply: ResourceDomain<fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: fungible_asset::DispatchFunctionStore: ResourceDomain<fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: fungible_asset::FungibleStore: ResourceDomain<fungible_asset::FungibleStore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: fungible_asset::Metadata: ResourceDomain<fungible_asset::Metadata>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: fungible_asset::Supply: ResourceDomain<fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: dispatchable_fungible_asset::TransferRefStore: ResourceDomain<dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: primary_fungible_store::DeriveRefPod: ResourceDomain<primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: coin::CoinConversionMap: ResourceDomain<coin::CoinConversionMap>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: coin::MigrationFlag: ResourceDomain<coin::MigrationFlag>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_MigrationFlag_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_MigrationFlag_$memory, $a_0);
    ($IsValid'$1_coin_MigrationFlag'($rsc))));

    // assume forall $rsc: coin::PairedCoinType: ResourceDomain<coin::PairedCoinType>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: coin::PairedFungibleAssetRefs: ResourceDomain<coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: coin::CoinInfo<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: coin::CoinStore<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: coin::Ghost$supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: BoxPeer::ContractSigner: ResourceDomain<BoxPeer::ContractSigner>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'($rsc))));

    // trace_local[account]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume {:print "$track_local(84,1,0):", $t0} $t0 == $t0;

    // trace_local[cid]($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume {:print "$track_local(84,1,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:267:5+1
    assume {:print "$track_local(84,1,2):", $t2} $t2 == $t2;

    // $t10 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:268:65+16
    assume {:print "$at(2,9329,9345)"} true;
    $t10 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t10);

    // $t11 := borrow_global<BoxPeer::ContractSigner>($t10) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:268:31+17
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(2,9295,9312)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // trace_local[contract_signer]($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:268:13+15
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner' := $Dereference($t11);
    assume {:print "$track_local(84,1,5):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner';

    // $t13 := false at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:271:22+5
    assume {:print "$at(2,9413,9418)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // $t8 := $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:271:14+5
    $t8 := $t13;

    // trace_local[found]($t13) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:271:14+5
    assume {:print "$track_local(84,1,8):", $t13} $t13 == $t13;

    // $t14 := 0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:272:17+1
    assume {:print "$at(2,9436,9437)"} true;
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // trace_local[i]($t14) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:272:13+1
    assume {:print "$track_local(84,1,9):", $t14} $t14 == $t14;

    // $t15 := 0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:273:27+1
    assume {:print "$at(2,9465,9466)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t7 := $t15 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:273:13+11
    $t7 := $t15;

    // trace_local[fee_for_cid]($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:273:13+11
    assume {:print "$track_local(84,1,7):", $t15} $t15 == $t15;

    // label L6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume {:print "$at(2,9484,9485)"} true;
L6:

    // $t9 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume {:print "$at(2,9484,9485)"} true;
    havoc $t9;

    // assume WellFormed($t9) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'u64'($t9);

    // $t16 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''($t16);

    // $t17 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'u64'($t17);

    // $t18 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'$1_string_String'($t19);

    // $t20 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t20;

    // assume WellFormed($t20) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'bool'($t20);

    // $t21 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t21;

    // assume WellFormed($t21) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'u64'($t21);

    // $t22 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t22;

    // assume WellFormed($t22) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'u64'($t22);

    // $t23 := havoc[mut_all]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t23;

    // assume WellFormed($t23) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee''($Dereference($t23));

    // $t24 := havoc[mut_all]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    havoc $t24;

    // assume WellFormed($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'($Dereference($t24));

    // trace_local[i]($t9) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(84,1,9):", $t9} $t9 == $t9;

    // assume Not(AbortFlag()) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:16+1
    assume !$abort_flag;

    // $t16 := get_field<BoxPeer::ContractSigner>.content_fees($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:35+29
    $t16 := $Dereference($t11)->$content_fees;

    // $t17 := vector::length<BoxPeer::ContentFee>($t16) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:20+45
    call $t17 := $1_vector_length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'($t16);
    if ($abort_flag) {
        assume {:print "$at(2,9488,9533)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // $t18 := <($t9, $t17) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:18+1
    call $t18 := $Lt($t9, $t17);

    // if ($t18) goto L1 else goto L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:9+302
    if ($t18) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:9+302
L1:

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:276:51+15
    assume {:print "$at(2,9587,9602)"} true;
L2:

    // $t23 := borrow_field<BoxPeer::ContractSigner>.content_fees($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:276:46+33
    assume {:print "$at(2,9582,9615)"} true;
    $t23 := $ChildMutation($t11, 1, $Dereference($t11)->$content_fees);

    // $t24 := vector::borrow_mut<BoxPeer::ContentFee>($t23, $t9) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:276:27+56
    call $t24,$t23 := $1_vector_borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'($t23, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,9563,9619)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // trace_local[content_fee]($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:276:13+11
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee' := $Dereference($t24);
    assume {:print "$track_local(84,1,3):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee';

    // $t19 := get_field<BoxPeer::ContentFee>.cid($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:277:13+15
    assume {:print "$at(2,9633,9648)"} true;
    $t19 := $Dereference($t24)->$cid;

    // $t20 := ==($t19, $t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:277:29+2
    $t20 := $IsEqual'$1_string_String'($t19, $t1);

    // if ($t20) goto L4 else goto L16 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:277:9+120
    if ($t20) { goto L4; } else { goto L16; }

    // label L4 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:278:23+11
    assume {:print "$at(2,9681,9692)"} true;
L4:

    // $t25 := get_field<BoxPeer::ContentFee>.total_fee($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:278:23+21
    assume {:print "$at(2,9681,9702)"} true;
    $t25 := $Dereference($t24)->$total_fee;

    // $t7 := $t25 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:278:9+11
    $t7 := $t25;

    // trace_local[fee_for_cid]($t25) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:278:9+11
    assume {:print "$track_local(84,1,7):", $t25} $t25 == $t25;

    // $t26 := true at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:279:17+4
    assume {:print "$at(2,9720,9724)"} true;
    $t26 := true;
    assume $IsValid'bool'($t26);

    // $t8 := $t26 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:279:9+5
    $t8 := $t26;

    // trace_local[found]($t26) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:279:9+5
    assume {:print "$track_local(84,1,8):", $t26} $t26 == $t26;

    // goto L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:280:9+5
    assume {:print "$at(2,9734,9739)"} true;
    goto L5;

    // label L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:277:9+120
    assume {:print "$at(2,9629,9749)"} true;
L3:

    // drop($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:277:9+120
    assume {:print "$at(2,9629,9749)"} true;

    // $t21 := 1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:282:17+1
    assume {:print "$at(2,9767,9768)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t9, $t21) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:282:15+1
    call $t22 := $AddU64($t9, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,9765,9766)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // trace_local[i]($t22) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:282:9+1
    assume {:print "$track_local(84,1,9):", $t22} $t22 == $t22;

    // goto L13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:282:18+1
    goto L13;

    // label L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:17+5
    assume {:print "$at(2,9798,9803)"} true;
L5:

    // if ($t8) goto L8 else goto L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
    assume {:print "$at(2,9790,9824)"} true;
    if ($t8) { goto L8; } else { goto L7; }

    // label L8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
L8:

    // goto L9 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
    assume {:print "$at(2,9790,9824)"} true;
    goto L9;

    // label L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
L7:

    // drop($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
    assume {:print "$at(2,9790,9824)"} true;

    // $t27 := 1000 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:24+18
    $t27 := 1000;
    assume $IsValid'u64'($t27);

    // trace_abort($t27) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
    assume {:print "$at(2,9790,9824)"} true;
    assume {:print "$track_abort(84,1):", $t27} $t27 == $t27;

    // $t12 := move($t27) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
    $t12 := $t27;

    // goto L15 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:285:9+34
    goto L15;

    // label L9 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:17+11
    assume {:print "$at(2,9842,9853)"} true;
L9:

    // $t28 := >=($t7, $t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:29+2
    assume {:print "$at(2,9854,9856)"} true;
    call $t28 := $Ge($t7, $t2);

    // if ($t28) goto L11 else goto L10 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
    if ($t28) { goto L11; } else { goto L10; }

    // label L11 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
L11:

    // goto L12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
    assume {:print "$at(2,9834,9885)"} true;
    goto L12;

    // label L10 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
L10:

    // drop($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
    assume {:print "$at(2,9834,9885)"} true;

    // $t29 := 1001 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:40+19
    $t29 := 1001;
    assume $IsValid'u64'($t29);

    // trace_abort($t29) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
    assume {:print "$at(2,9834,9885)"} true;
    assume {:print "$track_abort(84,1):", $t29} $t29 == $t29;

    // $t12 := move($t29) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
    $t12 := $t29;

    // goto L15 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:286:9+51
    goto L15;

    // label L12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:289:80+15
    assume {:print "$at(2,10043,10058)"} true;
L12:

    // $t30 := get_field<BoxPeer::ContractSigner>.signer_capability($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:289:79+34
    assume {:print "$at(2,10042,10076)"} true;
    $t30 := $Dereference($t11)->$signer_capability;

    // assume Identical($t31, select account::SignerCapability.account<account::SignerCapability>($t30)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:653:9+30
    assume {:print "$at(82,32485,32515)"} true;
    assume ($t31 == $t30->$account);

    // $t32 := account::create_signer_with_capability($t30) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:289:40+74
    assume {:print "$at(2,10003,10077)"} true;
    call $t32 := $1_account_create_signer_with_capability($t30);
    if ($abort_flag) {
        assume {:print "$at(2,10003,10077)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // trace_local[contract_signer_instance]($t32) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:289:13+24
    assume {:print "$track_local(84,1,6):", $t32} $t32 == $t32;

    // $t33 := signer::address_of($t0) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:292:62+27
    assume {:print "$at(2,10194,10221)"} true;
    call $t33 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,10194,10221)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // assume Identical($t34, signer::$address_of($t32)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:533:9+49
    assume {:print "$at(106,23296,23345)"} true;
    assume ($t34 == $1_signer_$address_of($t32));

    // assume Identical($t35, global<coin::CoinStore<aptos_coin::AptosCoin>>($t34)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:534:9+69
    assume {:print "$at(106,23354,23423)"} true;
    assume ($t35 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t34));

    // assume Identical($t36, global<coin::CoinStore<aptos_coin::AptosCoin>>($t33)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:536:9+52
    assume {:print "$at(106,23520,23572)"} true;
    assume ($t36 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t33));

    // coin::transfer<aptos_coin::AptosCoin>($t32, $t33, $t2) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:292:9+89
    assume {:print "$at(2,10141,10230)"} true;
    call $1_coin_transfer'$1_aptos_coin_AptosCoin'($t32, $t33, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,10141,10230)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // $t37 := borrow_field<BoxPeer::ContractSigner>.content_fees($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:295:46+33
    assume {:print "$at(2,10327,10360)"} true;
    $t37 := $ChildMutation($t11, 1, $Dereference($t11)->$content_fees);

    // $t38 := vector::borrow_mut<BoxPeer::ContentFee>($t37, $t9) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:295:27+56
    call $t38,$t37 := $1_vector_borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'($t37, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,10308,10364)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // trace_local[content_fee#1]($t38) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:295:13+11
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee' := $Dereference($t38);
    assume {:print "$track_local(84,1,4):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee';

    // $t39 := get_field<BoxPeer::ContentFee>.total_fee($t38) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:33+21
    assume {:print "$at(2,10398,10419)"} true;
    $t39 := $Dereference($t38)->$total_fee;

    // $t40 := -($t39, $t2) on_abort goto L15 with $t12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:55+1
    call $t40 := $Sub($t39, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,10420,10421)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(84,1):", $t12} $t12 == $t12;
        goto L15;
    }

    // $t41 := borrow_field<BoxPeer::ContentFee>.total_fee($t38) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:9+21
    $t41 := $ChildMutation($t38, 1, $Dereference($t38)->$total_fee);

    // write_ref($t41, $t40) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:9+54
    $t41 := $UpdateMutation($t41, $t40);

    // write_back[Reference($t38).total_fee (u64)]($t41) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:9+54
    $t38 := $UpdateMutation($t38, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'_total_fee($Dereference($t38), $Dereference($t41)));

    // write_back[Reference($t37)[]]($t38) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:9+54
    $t37 := $UpdateMutation($t37, UpdateVec($Dereference($t37), ReadVec($t38->p, LenVec($t37->p)), $Dereference($t38)));

    // write_back[Reference($t11).content_fees (vector<BoxPeer::ContentFee>)]($t37) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:9+54
    $t11 := $UpdateMutation($t11, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'_content_fees($Dereference($t11), $Dereference($t37)));

    // write_back[BoxPeer::ContractSigner@]($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:9+54
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L14 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:296:63+1
    goto L14;

    // label L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:9+302
    assume {:print "$at(2,9477,9779)"} true;
L0:

    // goto L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:9+302
    assume {:print "$at(2,9477,9779)"} true;
    goto L5;

    // label L13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:9+302
    // Loop invariant checking block for the loop started with header: L6
L13:

    // stop() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:275:9+302
    assume {:print "$at(2,9477,9779)"} true;
    assume false;
    return;

    // label L14 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:297:5+1
    assume {:print "$at(2,10434,10435)"} true;
L14:

    // return () at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:297:5+1
    assume {:print "$at(2,10434,10435)"} true;
    return;

    // label L15 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:297:5+1
L15:

    // abort($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:297:5+1
    assume {:print "$at(2,10434,10435)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

    // label L16 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L16:

    // drop($t11) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L3 at <internal>:1:1+10
    goto L3;

}

// fun BoxPeer::get_total_earned_by_owner [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:249:5+780
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_get_total_earned_by_owner$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t2: int;
    var $t3: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t12: int;
    var $t13: bool;
    var $t14: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t15: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t16: int;
    var $t17: bool;
    var $t18: Vec (int);
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t0: int;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:249:5+1
    assume {:print "$at(2,8373,8374)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: BoxPeer::GlobalContentRegistry: ResourceDomain<BoxPeer::GlobalContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:249:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'($rsc))));

    // trace_local[owner]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:249:5+1
    assume {:print "$track_local(84,2,0):", $t0} $t0 == $t0;

    // $t6 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:250:68+16
    assume {:print "$at(2,8531,8547)"} true;
    $t6 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t6);

    // $t7 := get_global<BoxPeer::GlobalContentRegistry>($t6) on_abort goto L9 with $t8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:250:31+13
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(2,8494,8507)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(84,2):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[global_registry]($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:250:13+15
    assume {:print "$track_local(84,2,3):", $t7} $t7 == $t7;

    // $t9 := 0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:251:28+1
    assume {:print "$at(2,8577,8578)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // trace_local[total_earned]($t9) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:251:13+12
    assume {:print "$track_local(84,2,5):", $t9} $t9 == $t9;

    // $t10 := 0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:252:17+1
    assume {:print "$at(2,8596,8597)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // trace_local[i]($t10) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:252:13+1
    assume {:print "$track_local(84,2,4):", $t10} $t10 == $t10;

    // label L6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume {:print "$at(2,8615,8616)"} true;
L6:

    // $t4 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume {:print "$at(2,8615,8616)"} true;
    havoc $t4;

    // assume WellFormed($t4) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t5;

    // assume WellFormed($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t5);

    // $t11 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t11;

    // assume WellFormed($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($t11);

    // $t12 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t12);

    // $t13 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'bool'($t13);

    // $t14 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($t14);

    // $t15 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t15);

    // $t16 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'address'($t16);

    // $t17 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'bool'($t17);

    // $t18 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'vec'address''($t18);

    // $t19 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t19);

    // $t20 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t20;

    // assume WellFormed($t20) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t20);

    // $t21 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t21;

    // assume WellFormed($t21) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t21);

    // $t22 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t22;

    // assume WellFormed($t22) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t22);

    // $t23 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t23;

    // assume WellFormed($t23) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t23);

    // $t24 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    havoc $t24;

    // assume WellFormed($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume $IsValid'u64'($t24);

    // trace_local[i]($t4) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume {:print "$info(): enter loop, variable(s) i, total_earned havocked and reassigned"} true;
    assume {:print "$track_local(84,2,4):", $t4} $t4 == $t4;

    // trace_local[total_earned]($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume {:print "$track_local(84,2,5):", $t5} $t5 == $t5;

    // assume Not(AbortFlag()) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:16+1
    assume !$abort_flag;

    // $t11 := get_field<BoxPeer::GlobalContentRegistry>.contents($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:35+25
    $t11 := $t7->$contents;

    // $t12 := vector::length<BoxPeer::Content>($t11) on_abort goto L9 with $t8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:20+41
    call $t12 := $1_vector_length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,8619,8660)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(84,2):", $t8} $t8 == $t8;
        goto L9;
    }

    // $t13 := <($t4, $t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:18+1
    call $t13 := $Lt($t4, $t12);

    // if ($t13) goto L1 else goto L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:9+517
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:254:9+517
L1:

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:255:43+15
    assume {:print "$at(2,8706,8721)"} true;
L2:

    // $t14 := get_field<BoxPeer::GlobalContentRegistry>.contents($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:255:42+25
    assume {:print "$at(2,8705,8730)"} true;
    $t14 := $t7->$contents;

    // $t15 := vector::borrow<BoxPeer::Content>($t14, $t4) on_abort goto L9 with $t8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:255:27+44
    call $t15 := $1_vector_borrow'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t14, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,8690,8734)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(84,2):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[content]($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:255:17+7
    assume {:print "$track_local(84,2,1):", $t15} $t15 == $t15;

    // $t16 := get_field<BoxPeer::Content>.owner($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:257:17+13
    assume {:print "$at(2,8840,8853)"} true;
    $t16 := $t15->$owner;

    // $t17 := ==($t16, $t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:257:31+2
    $t17 := $IsEqual'address'($t16, $t0);

    // if ($t17) goto L4 else goto L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:257:13+255
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:258:54+7
    assume {:print "$at(2,8919,8926)"} true;
L4:

    // $t18 := get_field<BoxPeer::Content>.purchasers($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:258:53+19
    assume {:print "$at(2,8918,8937)"} true;
    $t18 := $t15->$purchasers;

    // $t19 := vector::length<address>($t18) on_abort goto L9 with $t8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:258:38+35
    call $t19 := $1_vector_length'address'($t18);
    if ($abort_flag) {
        assume {:print "$at(2,8903,8938)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(84,2):", $t8} $t8 == $t8;
        goto L9;
    }

    // $t20 := get_field<BoxPeer::Content>.consumer_fee($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:259:55+20
    assume {:print "$at(2,8994,9014)"} true;
    $t20 := $t15->$consumer_fee;

    // $t21 := *($t19, $t20) on_abort goto L9 with $t8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:259:53+1
    call $t21 := $MulU64($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,8992,8993)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(84,2):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[content_earned]($t21) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:259:21+14
    assume {:print "$track_local(84,2,2):", $t21} $t21 == $t21;

    // $t22 := +($t5, $t21) on_abort goto L9 with $t8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:260:45+1
    assume {:print "$at(2,9060,9061)"} true;
    call $t22 := $AddU64($t5, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,9060,9061)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(84,2):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[total_earned]($t22) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:260:17+12
    assume {:print "$track_local(84,2,5):", $t22} $t22 == $t22;

    // goto L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:260:61+1
    goto L5;

    // label L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:257:13+255
    assume {:print "$at(2,8836,9091)"} true;
L3:

    // label L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:262:17+1
    assume {:print "$at(2,9109,9110)"} true;
L5:

    // $t23 := 1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:262:21+1
    assume {:print "$at(2,9113,9114)"} true;
    $t23 := 1;
    assume $IsValid'u64'($t23);

    // $t24 := +($t4, $t23) on_abort goto L9 with $t8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:262:19+1
    call $t24 := $AddU64($t4, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,9111,9112)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(84,2):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[i]($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:262:13+1
    assume {:print "$track_local(84,2,4):", $t24} $t24 == $t24;

    // goto L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:262:22+1
    goto L7;

    // label L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:264:9+12
    assume {:print "$at(2,9135,9147)"} true;
L0:

    // trace_return[0]($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:264:9+12
    assume {:print "$at(2,9135,9147)"} true;
    assume {:print "$track_return(84,2,0):", $t5} $t5 == $t5;

    // $t25 := move($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:264:9+12
    $t25 := $t5;

    // goto L8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:264:9+12
    goto L8;

    // label L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:264:9+12
    // Loop invariant checking block for the loop started with header: L6
L7:

    // stop() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:264:9+12
    assume {:print "$at(2,9135,9147)"} true;
    assume false;
    return;

    // label L8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:265:5+1
    assume {:print "$at(2,9152,9153)"} true;
L8:

    // return $t25 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:265:5+1
    assume {:print "$at(2,9152,9153)"} true;
    $ret0 := $t25;
    return;

    // label L9 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:265:5+1
L9:

    // abort($t8) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:265:5+1
    assume {:print "$at(2,9152,9153)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun BoxPeer::init_registry [baseline] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:68:5+159
procedure {:inline 1} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_init_registry(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t2: int;
    var $t3: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:68:5+1
    assume {:print "$at(2,1808,1809)"} true;
    assume {:print "$track_local(84,3,0):", $t0} $t0 == $t0;

    // $t1 := vector::empty<BoxPeer::Content>() on_abort goto L2 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:70:23+24
    assume {:print "$at(2,1924,1948)"} true;
    call $t1 := $1_vector_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'();
    if ($abort_flag) {
        assume {:print "$at(2,1924,1948)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,3):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack BoxPeer::ContentRegistry($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:69:26+75
    assume {:print "$at(2,1884,1959)"} true;
    $t3 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry($t1);

    // move_to<BoxPeer::ContentRegistry>($t3, $t0) on_abort goto L2 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:69:9+7
    if ($ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t0->$addr, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,1867,1874)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,3):", $t2} $t2 == $t2;
        goto L2;
    }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
    assume {:print "$at(2,1966,1967)"} true;
L1:

    // return () at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
    assume {:print "$at(2,1966,1967)"} true;
    return;

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
L2:

    // abort($t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
    assume {:print "$at(2,1966,1967)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun BoxPeer::init_registry [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:68:5+159
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_init_registry$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t2: int;
    var $t3: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:68:5+1
    assume {:print "$at(2,1808,1809)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: BoxPeer::ContentRegistry: ResourceDomain<BoxPeer::ContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:68:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'($rsc))));

    // trace_local[account]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:68:5+1
    assume {:print "$track_local(84,3,0):", $t0} $t0 == $t0;

    // $t1 := vector::empty<BoxPeer::Content>() on_abort goto L2 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:70:23+24
    assume {:print "$at(2,1924,1948)"} true;
    call $t1 := $1_vector_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'();
    if ($abort_flag) {
        assume {:print "$at(2,1924,1948)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,3):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack BoxPeer::ContentRegistry($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:69:26+75
    assume {:print "$at(2,1884,1959)"} true;
    $t3 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry($t1);

    // move_to<BoxPeer::ContentRegistry>($t3, $t0) on_abort goto L2 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:69:9+7
    if ($ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t0->$addr, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,1867,1874)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,3):", $t2} $t2 == $t2;
        goto L2;
    }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
    assume {:print "$at(2,1966,1967)"} true;
L1:

    // return () at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
    assume {:print "$at(2,1966,1967)"} true;
    return;

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
L2:

    // abort($t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:72:5+1
    assume {:print "$at(2,1966,1967)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun BoxPeer::initialize_contract_event_handle [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:75:5+490
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_initialize_contract_event_handle$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t10: int;
    var $t11: $1_account_Account;
    var $t12: $1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';
    var $t13: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:75:5+1
    assume {:print "$at(2,2027,2028)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: account::Account: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:75:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: BoxPeer::GlobalContentRegistry: ResourceDomain<BoxPeer::GlobalContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:75:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'($rsc))));

    // trace_local[account]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:75:5+1
    assume {:print "$track_local(84,4,0):", $t0} $t0 == $t0;

    // $t1 := signer::address_of($t0) on_abort goto L7 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:76:31+27
    assume {:print "$at(2,2127,2154)"} true;
    call $t1 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,2127,2154)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,4):", $t2} $t2 == $t2;
        goto L7;
    }

    // $t3 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:36+16
    assume {:print "$at(2,2191,2207)"} true;
    $t3 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t3);

    // $t4 := ==($t1, $t3) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:33+2
    $t4 := $IsEqual'address'($t1, $t3);

    // if ($t4) goto L1 else goto L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:9+67
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:9+67
L1:

    // goto L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:9+67
    assume {:print "$at(2,2164,2231)"} true;
    goto L2;

    // label L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:9+67
L0:

    // $t5 := 1004 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:54+21
    assume {:print "$at(2,2209,2230)"} true;
    $t5 := 1004;
    assume $IsValid'u64'($t5);

    // trace_abort($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:9+67
    assume {:print "$at(2,2164,2231)"} true;
    assume {:print "$track_abort(84,4):", $t5} $t5 == $t5;

    // $t2 := move($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:9+67
    $t2 := $t5;

    // goto L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:77:9+67
    goto L7;

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:44+16
    assume {:print "$at(2,2277,2293)"} true;
L2:

    // $t6 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:44+16
    assume {:print "$at(2,2277,2293)"} true;
    $t6 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t6);

    // $t7 := exists<BoxPeer::GlobalContentRegistry>($t6) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:14+6
    $t7 := $ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t6);

    // $t8 := !($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:13+1
    call $t8 := $Not($t7);

    // if ($t8) goto L4 else goto L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:9+269
    if ($t8) { goto L4; } else { goto L3; }

    // label L4 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:80:21+7
    assume {:print "$at(2,2318,2325)"} true;
L4:

    // $t9 := vector::empty<BoxPeer::Content>() on_abort goto L7 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:81:27+24
    assume {:print "$at(2,2377,2401)"} true;
    call $t9 := $1_vector_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'();
    if ($abort_flag) {
        assume {:print "$at(2,2377,2401)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,4):", $t2} $t2 == $t2;
        goto L7;
    }

    // assume Identical($t10, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:639:9+39
    assume {:print "$at(82,31909,31948)"} true;
    assume ($t10 == $1_signer_$address_of($t0));

    // assume Identical($t11, global<account::Account>($t10)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:640:9+36
    assume {:print "$at(82,31957,31993)"} true;
    assume ($t11 == $ResourceValue($1_account_Account_$memory, $t10));

    // $t12 := account::new_event_handle<BoxPeer::Content>($t0) on_abort goto L7 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:82:39+43
    assume {:print "$at(2,2441,2484)"} true;
    call $t12 := $1_account_new_event_handle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,2441,2484)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,4):", $t2} $t2 == $t2;
        goto L7;
    }

    // $t13 := pack BoxPeer::GlobalContentRegistry($t9, $t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:80:30+172
    assume {:print "$at(2,2327,2499)"} true;
    $t13 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry($t9, $t12);

    // move_to<BoxPeer::GlobalContentRegistry>($t13, $t0) on_abort goto L7 with $t2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:80:13+7
    if ($ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t0->$addr, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(2,2310,2317)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(84,4):", $t2} $t2 == $t2;
        goto L7;
    }

    // goto L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:9+269
    assume {:print "$at(2,2242,2511)"} true;
    goto L5;

    // label L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:9+269
L3:

    // label L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:79:9+269
    assume {:print "$at(2,2242,2511)"} true;
L5:

    // label L6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:85:5+1
    assume {:print "$at(2,2516,2517)"} true;
L6:

    // return () at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:85:5+1
    assume {:print "$at(2,2516,2517)"} true;
    return;

    // label L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:85:5+1
L7:

    // abort($t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:85:5+1
    assume {:print "$at(2,2516,2517)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun BoxPeer::initialize_contract_signer [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:86:5+497
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_initialize_contract_signer$verify(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_account_SignerCapability;
    var $t5: int;
    var $t6: int;
    var $t7: $1_account_Account;
    var $t8: Vec (int);
    var $t9: $signer;
    var $t10: $1_account_SignerCapability;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee);
    var $t17: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:86:5+1
    assume {:print "$at(2,2522,2523)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:86:5+1
    assume $IsValid'vec'u8''($t1);

    // assume forall $rsc: account::Account: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:86:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: BoxPeer::ContractSigner: ResourceDomain<BoxPeer::ContractSigner>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:86:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'($rsc))));

    // trace_local[account]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:86:5+1
    assume {:print "$track_local(84,5,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:86:5+1
    assume {:print "$track_local(84,5,1):", $t1} $t1 == $t1;

    // assume Identical($t5, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:584:9+45
    assume {:print "$at(82,29592,29637)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, account::spec_create_resource_address($t5, $t1)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:585:9+68
    assume {:print "$at(82,29646,29714)"} true;
    assume ($t6 == $1_account_spec_create_resource_address($t5, $t1));

    // assume Identical($t7, global<account::Account>($t6)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:659:9+45
    assume {:print "$at(82,32663,32708)"} true;
    assume ($t7 == $ResourceValue($1_account_Account_$memory, $t6));

    // assume Identical($t8, bcs::$to_bytes<address>($t6)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t8 == $1_bcs_$to_bytes'address'($t6));

    // ($t9, $t10) := account::create_resource_account($t0, $t1) on_abort goto L4 with $t11 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:87:55+47
    assume {:print "$at(2,2658,2705)"} true;
    call $t9,$t10 := $1_account_create_resource_account($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,2658,2705)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(84,5):", $t11} $t11 == $t11;
        goto L4;
    }

    // trace_local[contract_signer_cap]($t10) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:87:32+19
    assume {:print "$track_local(84,5,4):", $t10} $t10 == $t10;

    // drop($t9) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:87:14+16

    // $t12 := signer::address_of($t0) on_abort goto L4 with $t11 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:18+27
    assume {:print "$at(2,2724,2751)"} true;
    call $t12 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,2724,2751)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(84,5):", $t11} $t11 == $t11;
        goto L4;
    }

    // $t13 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:50+16
    $t13 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t13);

    // $t14 := ==($t12, $t13) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:46+2
    $t14 := $IsEqual'address'($t12, $t13);

    // if ($t14) goto L1 else goto L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:9+81
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:9+81
L1:

    // goto L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:9+81
    assume {:print "$at(2,2715,2796)"} true;
    goto L2;

    // label L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:9+81
L0:

    // $t15 := 1004 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:68+21
    assume {:print "$at(2,2774,2795)"} true;
    $t15 := 1004;
    assume $IsValid'u64'($t15);

    // trace_abort($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:9+81
    assume {:print "$at(2,2715,2796)"} true;
    assume {:print "$track_abort(84,5):", $t15} $t15 == $t15;

    // $t11 := move($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:9+81
    $t11 := $t15;

    // goto L4 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:88:9+81
    goto L4;

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:90:17+7
    assume {:print "$at(2,2869,2876)"} true;
L2:

    // $t16 := vector::empty<BoxPeer::ContentFee>() on_abort goto L4 with $t11 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:92:27+27
    assume {:print "$at(2,2973,3000)"} true;
    call $t16 := $1_vector_empty'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'();
    if ($abort_flag) {
        assume {:print "$at(2,2973,3000)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(84,5):", $t11} $t11 == $t11;
        goto L4;
    }

    // $t17 := pack BoxPeer::ContractSigner($t10, $t16) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:90:26+133
    assume {:print "$at(2,2878,3011)"} true;
    $t17 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner($t10, $t16);

    // move_to<BoxPeer::ContractSigner>($t17, $t0) on_abort goto L4 with $t11 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:90:9+7
    if ($ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $t0->$addr, $t17);
    }
    if ($abort_flag) {
        assume {:print "$at(2,2861,2868)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(84,5):", $t11} $t11 == $t11;
        goto L4;
    }

    // label L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:94:5+1
    assume {:print "$at(2,3018,3019)"} true;
L3:

    // return () at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:94:5+1
    assume {:print "$at(2,3018,3019)"} true;
    return;

    // label L4 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:94:5+1
L4:

    // abort($t11) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:94:5+1
    assume {:print "$at(2,3018,3019)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun BoxPeer::pay_for_content [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+2306
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_pay_for_content$verify(_$t0: $signer, _$t1: $1_string_String) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: Vec (int);
    var $t4: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t5: bool;
    var $t6: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry);
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry);
    var $t10: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t11: int;
    var $t12: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry);
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t17: int;
    var $t18: bool;
    var $t19: $1_string_String;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content));
    var $t24: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t25: bool;
    var $t26: Vec (int);
    var $t27: int;
    var $t28: bool;
    var $t29: bool;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t40: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t41: $Mutation (Vec (int));
    var $t42: int;
    var $t43: $1_string_String;
    var $t44: int;
    var $t45: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent;
    var $t46: int;
    var $t47: bool;
    var $t48: int;
    var $t49: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry);
    var $t50: int;
    var $t51: Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t52: int;
    var $t53: bool;
    var $t54: $1_string_String;
    var $t55: bool;
    var $t56: int;
    var $t57: int;
    var $t58: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content));
    var $t59: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content);
    var $t60: $Mutation (Vec (int));
    var $t61: int;
    var $t62: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume {:print "$at(2,5514,5515)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: object::TombStone: ResourceDomain<object::TombStone>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: object::Untransferable: ResourceDomain<object::Untransferable>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::Untransferable: ResourceDomain<fungible_asset::Untransferable>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentFungibleBalance: ResourceDomain<fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentSupply: ResourceDomain<fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: fungible_asset::DispatchFunctionStore: ResourceDomain<fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: fungible_asset::FungibleStore: ResourceDomain<fungible_asset::FungibleStore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: fungible_asset::Metadata: ResourceDomain<fungible_asset::Metadata>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: fungible_asset::Supply: ResourceDomain<fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: dispatchable_fungible_asset::TransferRefStore: ResourceDomain<dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: primary_fungible_store::DeriveRefPod: ResourceDomain<primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: coin::CoinConversionMap: ResourceDomain<coin::CoinConversionMap>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: coin::MigrationFlag: ResourceDomain<coin::MigrationFlag>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_MigrationFlag_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_MigrationFlag_$memory, $a_0);
    ($IsValid'$1_coin_MigrationFlag'($rsc))));

    // assume forall $rsc: coin::PairedCoinType: ResourceDomain<coin::PairedCoinType>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: coin::PairedFungibleAssetRefs: ResourceDomain<coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: coin::CoinInfo<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: coin::CoinStore<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: coin::Ghost$supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: BoxPeer::ContentRegistry: ResourceDomain<BoxPeer::ContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'($rsc))));

    // assume forall $rsc: BoxPeer::GlobalContentRegistry: ResourceDomain<BoxPeer::GlobalContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'($rsc))));

    // trace_local[account]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume {:print "$track_local(84,6,0):", $t0} $t0 == $t0;

    // trace_local[cid]($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:180:5+1
    assume {:print "$track_local(84,6,1):", $t1} $t1 == $t1;

    // $t11 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:181:72+16
    assume {:print "$at(2,5707,5723)"} true;
    $t11 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t11);

    // $t12 := borrow_global<BoxPeer::GlobalContentRegistry>($t11) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:181:31+17
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(2,5666,5683)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // trace_local[global_registry]($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:181:13+15
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry' := $Dereference($t12);
    assume {:print "$track_local(84,6,6):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry';

    // $t14 := 0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:183:17+1
    assume {:print "$at(2,5743,5744)"} true;
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // trace_local[i]($t14) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:183:13+1
    assume {:print "$track_local(84,6,7):", $t14} $t14 == $t14;

    // $t15 := false at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:184:21+5
    assume {:print "$at(2,5766,5771)"} true;
    $t15 := false;
    assume $IsValid'bool'($t15);

    // $t5 := $t15 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:184:13+5
    $t5 := $t15;

    // trace_local[found]($t15) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:184:13+5
    assume {:print "$track_local(84,6,5):", $t15} $t15 == $t15;

    // label L22 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume {:print "$at(2,5789,5790)"} true;
L22:

    // $t7 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume {:print "$at(2,5789,5790)"} true;
    havoc $t7;

    // assume WellFormed($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'u64'($t7);

    // $t16 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($t16);

    // $t17 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'u64'($t17);

    // $t18 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'$1_string_String'($t19);

    // $t20 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t20;

    // assume WellFormed($t20) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'bool'($t20);

    // $t21 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t21;

    // assume WellFormed($t21) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'u64'($t21);

    // $t22 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t22;

    // assume WellFormed($t22) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'u64'($t22);

    // $t23 := havoc[mut_all]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t23;

    // assume WellFormed($t23) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($Dereference($t23));

    // $t24 := havoc[mut_all]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    havoc $t24;

    // assume WellFormed($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($Dereference($t24));

    // trace_local[i]($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(84,6,7):", $t7} $t7 == $t7;

    // assume Not(AbortFlag()) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:16+1
    assume !$abort_flag;

    // $t16 := get_field<BoxPeer::GlobalContentRegistry>.contents($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:35+25
    $t16 := $Dereference($t12)->$contents;

    // $t17 := vector::length<BoxPeer::Content>($t16) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:20+41
    call $t17 := $1_vector_length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t16);
    if ($abort_flag) {
        assume {:print "$at(2,5793,5834)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t18 := <($t7, $t17) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:18+1
    call $t18 := $Lt($t7, $t17);

    // if ($t18) goto L1 else goto L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:9+1987
    if ($t18) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:9+1987
L1:

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:187:51+15
    assume {:print "$at(2,5888,5903)"} true;
L2:

    // $t23 := borrow_field<BoxPeer::GlobalContentRegistry>.contents($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:187:46+29
    assume {:print "$at(2,5883,5912)"} true;
    $t23 := $ChildMutation($t12, 0, $Dereference($t12)->$contents);

    // $t24 := vector::borrow_mut<BoxPeer::Content>($t23, $t7) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:187:27+52
    call $t24,$t23 := $1_vector_borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t23, $t7);
    if ($abort_flag) {
        assume {:print "$at(2,5864,5916)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // trace_local[content]($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:187:17+7
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content' := $Dereference($t24);
    assume {:print "$track_local(84,6,4):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';

    // $t19 := get_field<BoxPeer::Content>.cid($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:189:17+11
    assume {:print "$at(2,5935,5946)"} true;
    $t19 := $Dereference($t24)->$cid;

    // $t20 := ==($t19, $t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:189:29+2
    $t20 := $IsEqual'$1_string_String'($t19, $t1);

    // if ($t20) goto L4 else goto L30 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:189:13+1804
    if ($t20) { goto L4; } else { goto L30; }

    // label L4 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:190:17+12
    assume {:print "$at(2,5973,5985)"} true;
L4:

    // drop($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:190:17+12
    assume {:print "$at(2,5973,5985)"} true;

    // $t25 := true at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:190:25+4
    $t25 := true;
    assume $IsValid'bool'($t25);

    // $t5 := $t25 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:190:17+5
    $t5 := $t25;

    // trace_local[found]($t25) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:190:17+5
    assume {:print "$track_local(84,6,5):", $t25} $t25 == $t25;

    // $t26 := get_field<BoxPeer::Content>.purchasers($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:192:65+19
    assume {:print "$at(2,6052,6071)"} true;
    $t26 := $Dereference($t24)->$purchasers;

    // $t27 := signer::address_of($t0) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:192:87+27
    call $t27 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6074,6101)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t28 := vector::contains<address>($t26, $t27) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:192:48+67
    call $t28 := $1_vector_contains'address'($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,6035,6102)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t29 := !($t28) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:25+1
    assume {:print "$at(2,6128,6129)"} true;
    call $t29 := $Not($t28);

    // if ($t29) goto L6 else goto L31 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
    if ($t29) { goto L6; } else { goto L31; }

    // label L6 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
L6:

    // goto L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
    assume {:print "$at(2,6120,6177)"} true;
    goto L7;

    // label L5 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
L5:

    // drop($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
    assume {:print "$at(2,6120,6177)"} true;

    // $t30 := 1003 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:52+21
    $t30 := 1003;
    assume $IsValid'u64'($t30);

    // trace_abort($t30) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
    assume {:print "$at(2,6120,6177)"} true;
    assume {:print "$track_abort(84,6):", $t30} $t30 == $t30;

    // $t13 := move($t30) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
    $t13 := $t30;

    // goto L29 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:193:17+57
    goto L29;

    // label L7 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:195:75+7
    assume {:print "$at(2,6254,6261)"} true;
L7:

    // $t31 := signer::address_of($t0) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:195:56+27
    assume {:print "$at(2,6235,6262)"} true;
    call $t31 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6235,6262)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t32 := coin::balance<aptos_coin::AptosCoin>($t31) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:195:31+53
    call $t32 := $1_coin_balance'$1_aptos_coin_AptosCoin'($t31);
    if ($abort_flag) {
        assume {:print "$at(2,6210,6263)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t33 := get_field<BoxPeer::Content>.consumer_fee($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:36+20
    assume {:print "$at(2,6300,6320)"} true;
    $t33 := $Dereference($t24)->$consumer_fee;

    // $t34 := >=($t32, $t33) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:33+2
    call $t34 := $Ge($t32, $t33);

    // if ($t34) goto L9 else goto L32 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
    if ($t34) { goto L9; } else { goto L32; }

    // label L9 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
L9:

    // goto L10 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
    assume {:print "$at(2,6281,6342)"} true;
    goto L10;

    // label L8 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
L8:

    // drop($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
    assume {:print "$at(2,6281,6342)"} true;

    // $t35 := 1001 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:58+19
    $t35 := 1001;
    assume $IsValid'u64'($t35);

    // trace_abort($t35) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
    assume {:print "$at(2,6281,6342)"} true;
    assume {:print "$track_abort(84,6):", $t35} $t35 == $t35;

    // $t13 := move($t35) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
    $t13 := $t35;

    // goto L29 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:196:17+61
    goto L29;

    // label L10 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:198:43+7
    assume {:print "$at(2,6387,6394)"} true;
L10:

    // $t36 := get_field<BoxPeer::Content>.owner($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:198:52+13
    assume {:print "$at(2,6396,6409)"} true;
    $t36 := $Dereference($t24)->$owner;

    // $t37 := get_field<BoxPeer::Content>.consumer_fee($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:198:67+20
    $t37 := $Dereference($t24)->$consumer_fee;

    // assume Identical($t38, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:533:9+49
    assume {:print "$at(106,23296,23345)"} true;
    assume ($t38 == $1_signer_$address_of($t0));

    // assume Identical($t39, global<coin::CoinStore<aptos_coin::AptosCoin>>($t38)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:534:9+69
    assume {:print "$at(106,23354,23423)"} true;
    assume ($t39 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t38));

    // assume Identical($t40, global<coin::CoinStore<aptos_coin::AptosCoin>>($t36)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:536:9+52
    assume {:print "$at(106,23520,23572)"} true;
    assume ($t40 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t36));

    // coin::transfer<aptos_coin::AptosCoin>($t0, $t36, $t37) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:198:17+71
    assume {:print "$at(2,6361,6432)"} true;
    call $1_coin_transfer'$1_aptos_coin_AptosCoin'($t0, $t36, $t37);
    if ($abort_flag) {
        assume {:print "$at(2,6361,6432)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t41 := borrow_field<BoxPeer::Content>.purchasers($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:201:35+23
    assume {:print "$at(2,6539,6562)"} true;
    $t41 := $ChildMutation($t24, 8, $Dereference($t24)->$purchasers);

    // $t42 := signer::address_of($t0) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:201:60+27
    call $t42 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6564,6591)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // vector::push_back<address>($t41, $t42) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:201:17+71
    call $t41 := $1_vector_push_back'address'($t41, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,6521,6592)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // write_back[Reference($t24).purchasers (vector<address>)]($t41) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:201:17+71
    $t24 := $UpdateMutation($t24, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_purchasers($Dereference($t24), $Dereference($t41)));

    // $t43 := get_field<BoxPeer::Content>.cid($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:204:26+11
    assume {:print "$at(2,6670,6681)"} true;
    $t43 := $Dereference($t24)->$cid;

    // write_back[Reference($t23)[]]($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:204:26+11
    $t23 := $UpdateMutation($t23, UpdateVec($Dereference($t23), ReadVec($t24->p, LenVec($t23->p)), $Dereference($t24)));

    // write_back[Reference($t12).contents (vector<BoxPeer::Content>)]($t23) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:204:26+11
    $t12 := $UpdateMutation($t12, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'_contents($Dereference($t12), $Dereference($t23)));

    // write_back[BoxPeer::GlobalContentRegistry@]($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:204:26+11
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // $t44 := signer::address_of($t0) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:205:32+27
    assume {:print "$at(2,6714,6741)"} true;
    call $t44 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6714,6741)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t45 := pack BoxPeer::PurchaserAddedEvent($t43, $t44) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:203:29+137
    assume {:print "$at(2,6623,6760)"} true;
    $t45 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_PurchaserAddedEvent($t43, $t44);

    // opaque begin: event::emit<BoxPeer::PurchaserAddedEvent>($t45) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:203:17+150

    // opaque end: event::emit<BoxPeer::PurchaserAddedEvent>($t45) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:203:17+150

    // $t46 := signer::address_of($t0) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:209:45+27
    assume {:print "$at(2,6886,6913)"} true;
    call $t46 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6886,6913)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t47 := exists<BoxPeer::ContentRegistry>($t46) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:209:21+6
    $t47 := $ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t46);

    // if ($t47) goto L12 else goto L11 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:209:17+839
    if ($t47) { goto L12; } else { goto L11; }

    // label L12 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:210:90+7
    assume {:print "$at(2,7007,7014)"} true;
L12:

    // $t48 := signer::address_of($t0) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:210:71+27
    assume {:print "$at(2,6988,7015)"} true;
    call $t48 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6988,7015)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t49 := borrow_global<BoxPeer::ContentRegistry>($t48) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:210:36+17
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t48)) {
        call $ExecFailureAbort();
    } else {
        $t49 := $Mutation($Global($t48), EmptyVec(), $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t48));
    }
    if ($abort_flag) {
        assume {:print "$at(2,6953,6970)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // trace_local[registry]($t49) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:210:25+8
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry' := $Dereference($t49);
    assume {:print "$track_local(84,6,9):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry';

    // $t50 := 0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:213:29+1
    assume {:print "$at(2,7150,7151)"} true;
    $t50 := 0;
    assume $IsValid'u64'($t50);

    // trace_local[j]($t50) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:213:25+1
    assume {:print "$track_local(84,6,8):", $t50} $t50 == $t50;

    // label L19 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume {:print "$at(2,7180,7181)"} true;
L19:

    // $t8 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume {:print "$at(2,7180,7181)"} true;
    havoc $t8;

    // assume WellFormed($t8) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'u64'($t8);

    // $t51 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t51;

    // assume WellFormed($t51) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($t51);

    // $t52 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t52;

    // assume WellFormed($t52) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'u64'($t52);

    // $t53 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t53;

    // assume WellFormed($t53) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'bool'($t53);

    // $t54 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t54;

    // assume WellFormed($t54) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'$1_string_String'($t54);

    // $t55 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t55;

    // assume WellFormed($t55) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'bool'($t55);

    // $t56 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t56;

    // assume WellFormed($t56) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'u64'($t56);

    // $t57 := havoc[val]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t57;

    // assume WellFormed($t57) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'u64'($t57);

    // $t58 := havoc[mut_all]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t58;

    // assume WellFormed($t58) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'vec'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content''($Dereference($t58));

    // $t59 := havoc[mut_all]() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    havoc $t59;

    // assume WellFormed($t59) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume $IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($Dereference($t59));

    // trace_local[j]($t8) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume {:print "$info(): enter loop, variable(s) j havocked and reassigned"} true;
    assume {:print "$track_local(84,6,8):", $t8} $t8 == $t8;

    // assume Not(AbortFlag()) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:28+1
    assume !$abort_flag;

    // $t51 := get_field<BoxPeer::ContentRegistry>.contents($t49) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:47+18
    $t51 := $Dereference($t49)->$contents;

    // $t52 := vector::length<BoxPeer::Content>($t51) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:32+34
    call $t52 := $1_vector_length'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t51);
    if ($abort_flag) {
        assume {:print "$at(2,7184,7218)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // $t53 := <($t8, $t52) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:30+1
    call $t53 := $Lt($t8, $t52);

    // if ($t53) goto L14 else goto L13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    if ($t53) { goto L14; } else { goto L13; }

    // label L14 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
L14:

    // label L15 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:215:72+8
    assume {:print "$at(2,7293,7301)"} true;
L15:

    // $t58 := borrow_field<BoxPeer::ContentRegistry>.contents($t49) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:215:67+22
    assume {:print "$at(2,7288,7310)"} true;
    $t58 := $ChildMutation($t49, 0, $Dereference($t49)->$contents);

    // $t59 := vector::borrow_mut<BoxPeer::Content>($t58, $t8) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:215:48+45
    call $t59,$t58 := $1_vector_borrow_mut'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t58, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,7269,7314)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // trace_local[registry_content]($t59) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:215:29+16
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content' := $Dereference($t59);
    assume {:print "$track_local(84,6,10):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content';

    // $t54 := get_field<BoxPeer::Content>.cid($t59) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:216:29+20
    assume {:print "$at(2,7344,7364)"} true;
    $t54 := $Dereference($t59)->$cid;

    // $t55 := ==($t54, $t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:216:50+2
    $t55 := $IsEqual'$1_string_String'($t54, $t1);

    // if ($t55) goto L17 else goto L33 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:216:25+280
    if ($t55) { goto L17; } else { goto L33; }

    // label L17 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:29+80
    assume {:print "$at(2,7479,7559)"} true;
L17:

    // drop($t49) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:29+80
    assume {:print "$at(2,7479,7559)"} true;

    // $t60 := borrow_field<BoxPeer::Content>.purchasers($t59) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:47+32
    $t60 := $ChildMutation($t59, 8, $Dereference($t59)->$purchasers);

    // $t61 := signer::address_of($t0) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:81+27
    call $t61 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,7531,7558)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // vector::push_back<address>($t60, $t61) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:29+80
    call $t60 := $1_vector_push_back'address'($t60, $t61);
    if ($abort_flag) {
        assume {:print "$at(2,7479,7559)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // write_back[Reference($t59).purchasers (vector<address>)]($t60) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:29+80
    $t59 := $UpdateMutation($t59, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'_purchasers($Dereference($t59), $Dereference($t60)));

    // write_back[Reference($t58)[]]($t59) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:29+80
    $t58 := $UpdateMutation($t58, UpdateVec($Dereference($t58), ReadVec($t59->p, LenVec($t58->p)), $Dereference($t59)));

    // write_back[Reference($t49).contents (vector<BoxPeer::Content>)]($t58) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:29+80
    $t49 := $UpdateMutation($t49, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'_contents($Dereference($t49), $Dereference($t58)));

    // write_back[BoxPeer::ContentRegistry@]($t49) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:218:29+80
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $GlobalLocationAddress($t49),
        $Dereference($t49));

    // goto L18 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:219:29+5
    assume {:print "$at(2,7589,7594)"} true;
    goto L18;

    // label L16 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:216:25+280
    assume {:print "$at(2,7340,7620)"} true;
L16:

    // drop($t59) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:216:25+280
    assume {:print "$at(2,7340,7620)"} true;

    // $t56 := 1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:221:33+1
    assume {:print "$at(2,7654,7655)"} true;
    $t56 := 1;
    assume $IsValid'u64'($t56);

    // $t57 := +($t8, $t56) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:221:31+1
    call $t57 := $AddU64($t8, $t56);
    if ($abort_flag) {
        assume {:print "$at(2,7652,7653)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // trace_local[j]($t57) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:221:25+1
    assume {:print "$track_local(84,6,8):", $t57} $t57 == $t57;

    // goto L26 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:221:34+1
    goto L26;

    // label L18 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:222:22+1
    assume {:print "$at(2,7678,7679)"} true;
L18:

    // goto L20 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:222:22+1
    assume {:print "$at(2,7678,7679)"} true;
    goto L20;

    // label L11 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:209:17+839
    assume {:print "$at(2,6858,7697)"} true;
L11:

    // label L20 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:225:17+5
    assume {:print "$at(2,7716,7721)"} true;
L20:

    // goto L21 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:225:17+5
    assume {:print "$at(2,7716,7721)"} true;
    goto L21;

    // label L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:189:13+1804
    assume {:print "$at(2,5931,7735)"} true;
L3:

    // drop($t24) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:189:13+1804
    assume {:print "$at(2,5931,7735)"} true;

    // $t21 := 1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:227:21+1
    assume {:print "$at(2,7757,7758)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t7, $t21) on_abort goto L29 with $t13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:227:19+1
    call $t22 := $AddU64($t7, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7755,7756)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(84,6):", $t13} $t13 == $t13;
        goto L29;
    }

    // trace_local[i]($t22) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:227:13+1
    assume {:print "$track_local(84,6,7):", $t22} $t22 == $t22;

    // goto L27 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:227:22+1
    goto L27;

    // label L21 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:17+5
    assume {:print "$at(2,7787,7792)"} true;
L21:

    // if ($t5) goto L24 else goto L23 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:9+34
    assume {:print "$at(2,7779,7813)"} true;
    if ($t5) { goto L24; } else { goto L23; }

    // label L24 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:9+34
L24:

    // goto L25 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:9+34
    assume {:print "$at(2,7779,7813)"} true;
    goto L25;

    // label L23 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:24+18
L23:

    // $t62 := 1000 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:24+18
    assume {:print "$at(2,7794,7812)"} true;
    $t62 := 1000;
    assume $IsValid'u64'($t62);

    // trace_abort($t62) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:9+34
    assume {:print "$at(2,7779,7813)"} true;
    assume {:print "$track_abort(84,6):", $t62} $t62 == $t62;

    // $t13 := move($t62) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:9+34
    $t13 := $t62;

    // goto L29 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:9+34
    goto L29;

    // label L25 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:43+1
L25:

    // goto L28 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:229:43+1
    assume {:print "$at(2,7813,7814)"} true;
    goto L28;

    // label L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:9+1987
    assume {:print "$at(2,5782,7769)"} true;
L0:

    // drop($t12) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:9+1987
    assume {:print "$at(2,5782,7769)"} true;

    // goto L21 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:186:9+1987
    goto L21;

    // label L13 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    assume {:print "$at(2,7173,7678)"} true;
L13:

    // drop($t49) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    assume {:print "$at(2,7173,7678)"} true;

    // goto L18 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    goto L18;

    // label L26 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    // Loop invariant checking block for the loop started with header: L19
L26:

    // stop() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    assume {:print "$at(2,7173,7678)"} true;
    assume false;
    return;

    // label L27 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    // Loop invariant checking block for the loop started with header: L22
L27:

    // stop() at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:214:21+505
    assume {:print "$at(2,7173,7678)"} true;
    assume false;
    return;

    // label L28 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:230:5+1
    assume {:print "$at(2,7819,7820)"} true;
L28:

    // return () at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:230:5+1
    assume {:print "$at(2,7819,7820)"} true;
    return;

    // label L29 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:230:5+1
L29:

    // abort($t13) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:230:5+1
    assume {:print "$at(2,7819,7820)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

    // label L30 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L30:

    // drop($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t23) at <internal>:1:1+10

    // goto L3 at <internal>:1:1+10
    goto L3;

    // label L31 at <internal>:1:1+10
L31:

    // drop($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t23) at <internal>:1:1+10

    // goto L5 at <internal>:1:1+10
    goto L5;

    // label L32 at <internal>:1:1+10
L32:

    // drop($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t23) at <internal>:1:1+10

    // goto L8 at <internal>:1:1+10
    goto L8;

    // label L33 at <internal>:1:1+10
L33:

    // drop($t49) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t58) at <internal>:1:1+10

    // goto L16 at <internal>:1:1+10
    goto L16;

}

// fun BoxPeer::upload_content [verification] at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+2460
procedure {:timeLimit 40} $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_upload_content$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: int, _$t4: $1_string_String, _$t5: $1_string_String, _$t6: $1_string_String, _$t7: $1_string_String) returns ()
{
    // declare local variables
    var $t8: int;
    var $t9: int;
    var $t10: $1_string_String;
    var $t11: int;
    var $t12: int;
    var $t13: $1_string_String;
    var $t14: $1_string_String;
    var $t15: $1_string_String;
    var $t16: $1_string_String;
    var $t17: Vec (int);
    var $t18: int;
    var $t19: $1_string_String;
    var $t20: $1_string_String;
    var $t21: int;
    var $t22: int;
    var $t23: $1_string_String;
    var $t24: $1_string_String;
    var $t25: $1_string_String;
    var $t26: $1_string_String;
    var $t27: Vec (int);
    var $t28: int;
    var $t29: $1_string_String;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: $1_string_String;
    var $t34: $1_string_String;
    var $t35: $1_string_String;
    var $t36: $1_string_String;
    var $t37: Vec (int);
    var $t38: int;
    var $t39: $1_string_String;
    var $t40: $1_string_String;
    var $t41: $1_string_String;
    var $t42: $1_string_String;
    var $t43: Vec (int);
    var $t44: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry);
    var $t45: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner);
    var $t46: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t47: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t48: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t49: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee;
    var $t50: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry);
    var $t51: int;
    var $t52: int;
    var $t53: bool;
    var $t54: bool;
    var $t55: int;
    var $t56: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry);
    var $t57: int;
    var $t58: int;
    var $t59: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t60: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t61: int;
    var $t62: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner);
    var $t63: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee;
    var $t64: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee));
    var $t65: int;
    var $t66: Vec (int);
    var $t67: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t68: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content));
    var $t69: int;
    var $t70: Vec (int);
    var $t71: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t72: int;
    var $t73: Vec (int);
    var $t74: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t75: int;
    var $t76: Vec (int);
    var $t77: $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $t78: int;
    var $t79: $Mutation ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry);
    var $t80: $Mutation (Vec ($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content));
    var $t81: $Mutation ($1_event_EventHandle'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content');
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: int;
    var $t4: $1_string_String;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $t7: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner;
    var $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry': $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;
    $t7 := _$t7;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$at(2,3048,3049)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $IsValid'u64'($t2);

    // assume WellFormed($t3) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $IsValid'u64'($t3);

    // assume WellFormed($t4) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $IsValid'$1_string_String'($t4);

    // assume WellFormed($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $IsValid'$1_string_String'($t5);

    // assume WellFormed($t6) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $IsValid'$1_string_String'($t6);

    // assume WellFormed($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $IsValid'$1_string_String'($t7);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: object::TombStone: ResourceDomain<object::TombStone>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: object::Untransferable: ResourceDomain<object::Untransferable>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::Untransferable: ResourceDomain<fungible_asset::Untransferable>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentFungibleBalance: ResourceDomain<fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentSupply: ResourceDomain<fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: fungible_asset::DispatchFunctionStore: ResourceDomain<fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: fungible_asset::FungibleStore: ResourceDomain<fungible_asset::FungibleStore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: fungible_asset::Metadata: ResourceDomain<fungible_asset::Metadata>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: fungible_asset::Supply: ResourceDomain<fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: dispatchable_fungible_asset::TransferRefStore: ResourceDomain<dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: primary_fungible_store::DeriveRefPod: ResourceDomain<primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: coin::CoinConversionMap: ResourceDomain<coin::CoinConversionMap>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: coin::MigrationFlag: ResourceDomain<coin::MigrationFlag>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_MigrationFlag_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_MigrationFlag_$memory, $a_0);
    ($IsValid'$1_coin_MigrationFlag'($rsc))));

    // assume forall $rsc: coin::PairedCoinType: ResourceDomain<coin::PairedCoinType>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: coin::PairedFungibleAssetRefs: ResourceDomain<coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: coin::CoinInfo<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<optional_aggregator::Integer>(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: coin::CoinStore<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: coin::Ghost$supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: BoxPeer::ContentRegistry: ResourceDomain<BoxPeer::ContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'($rsc))));

    // assume forall $rsc: BoxPeer::ContractSigner: ResourceDomain<BoxPeer::ContractSigner>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'($rsc))));

    // assume forall $rsc: BoxPeer::GlobalContentRegistry: ResourceDomain<BoxPeer::GlobalContentRegistry>(): WellFormed($rsc) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume (forall $a_0: int :: {$ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0)}(var $rsc := $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $a_0);
    ($IsValid'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'($rsc))));

    // trace_local[account]($t0) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,0):", $t0} $t0 == $t0;

    // trace_local[cid]($t1) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,1):", $t1} $t1 == $t1;

    // trace_local[fee_paid]($t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,2):", $t2} $t2 == $t2;

    // trace_local[consumer_fee]($t3) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,3):", $t3} $t3 == $t3;

    // trace_local[file_type]($t4) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,4):", $t4} $t4 == $t4;

    // trace_local[owner_name]($t5) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,5):", $t5} $t5 == $t5;

    // trace_local[description]($t6) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,6):", $t6} $t6 == $t6;

    // trace_local[title]($t7) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:98:5+1
    assume {:print "$track_local(84,7,7):", $t7} $t7 == $t7;

    // $t51 := signer::address_of($t0) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:109:34+27
    assume {:print "$at(2,3431,3458)"} true;
    call $t51 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3431,3458)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t53 := exists<BoxPeer::ContentRegistry>($t51) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:109:10+6
    $t53 := $ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t51);

    // $t54 := !($t53) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:109:9+1
    call $t54 := $Not($t53);

    // if ($t54) goto L1 else goto L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:109:5+98
    if ($t54) { goto L1; } else { goto L0; }

    // label L1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:110:23+7
    assume {:print "$at(2,3485,3492)"} true;
L1:

    // BoxPeer::init_registry($t0) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:110:9+22
    assume {:print "$at(2,3471,3493)"} true;
    call $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_init_registry($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3471,3493)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // label L0 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:113:78+7
    assume {:print "$at(2,3580,3587)"} true;
L0:

    // $t55 := signer::address_of($t0) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:113:59+27
    assume {:print "$at(2,3561,3588)"} true;
    call $t55 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3561,3588)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t56 := borrow_global<BoxPeer::ContentRegistry>($t55) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:113:24+17
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t55)) {
        call $ExecFailureAbort();
    } else {
        $t56 := $Mutation($Global($t55), EmptyVec(), $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $t55));
    }
    if ($abort_flag) {
        assume {:print "$at(2,3526,3543)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // trace_local[registry]($t56) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:113:13+8
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry' := $Dereference($t56);
    assume {:print "$track_local(84,7,50):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry';

    // $t57 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:116:44+16
    assume {:print "$at(2,3687,3703)"} true;
    $t57 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t57);

    // assume Identical($t58, signer::$address_of($t0)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:533:9+49
    assume {:print "$at(106,23296,23345)"} true;
    assume ($t58 == $1_signer_$address_of($t0));

    // assume Identical($t59, global<coin::CoinStore<aptos_coin::AptosCoin>>($t58)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:534:9+69
    assume {:print "$at(106,23354,23423)"} true;
    assume ($t59 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t58));

    // assume Identical($t60, global<coin::CoinStore<aptos_coin::AptosCoin>>($t57)) at /Users/prisca/.move/https___github_com_aptos-labs_aptos-core_git_testnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:536:9+52
    assume {:print "$at(106,23520,23572)"} true;
    assume ($t60 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t57));

    // coin::transfer<aptos_coin::AptosCoin>($t0, $t57, $t2) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:116:9+62
    assume {:print "$at(2,3652,3714)"} true;
    call $1_coin_transfer'$1_aptos_coin_AptosCoin'($t0, $t57, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,3652,3714)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t61 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:118:65+16
    assume {:print "$at(2,3781,3797)"} true;
    $t61 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t61);

    // $t62 := borrow_global<BoxPeer::ContractSigner>($t61) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:118:31+17
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $t61)) {
        call $ExecFailureAbort();
    } else {
        $t62 := $Mutation($Global($t61), EmptyVec(), $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $t61));
    }
    if ($abort_flag) {
        assume {:print "$at(2,3747,3764)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // trace_local[contract_signer]($t62) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:118:13+15
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner' := $Dereference($t62);
    assume {:print "$track_local(84,7,45):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner';

    // $t63 := pack BoxPeer::ContentFee($t1, $t2) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:119:31+39
    assume {:print "$at(2,3830,3869)"} true;
    $t63 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee($t1, $t2);

    // trace_local[new_content_fee]($t63) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:119:13+15
    assume {:print "$track_local(84,7,49):", $t63} $t63 == $t63;

    // $t64 := borrow_field<BoxPeer::ContractSigner>.content_fees($t62) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:120:27+33
    assume {:print "$at(2,3897,3930)"} true;
    $t64 := $ChildMutation($t62, 1, $Dereference($t62)->$content_fees);

    // vector::push_back<BoxPeer::ContentFee>($t64, $t63) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:120:9+69
    call $t64 := $1_vector_push_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentFee'($t64, $t63);
    if ($abort_flag) {
        assume {:print "$at(2,3879,3948)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // write_back[Reference($t62).content_fees (vector<BoxPeer::ContentFee>)]($t64) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:120:9+69
    $t62 := $UpdateMutation($t62, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner'_content_fees($Dereference($t62), $Dereference($t64)));

    // write_back[BoxPeer::ContractSigner@]($t62) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:120:9+69
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContractSigner_$memory, $GlobalLocationAddress($t62),
        $Dereference($t62));

    // $t65 := signer::address_of($t0) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:123:20+27
    assume {:print "$at(2,4006,4033)"} true;
    call $t65 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4006,4033)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t66 := vector::empty<address>() on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:131:25+24
    assume {:print "$at(2,4215,4239)"} true;
    call $t66 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,4215,4239)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t67 := pack BoxPeer::Content($t65, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t66) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:122:27+273
    assume {:print "$at(2,3977,4250)"} true;
    $t67 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content($t65, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t66);

    // trace_local[new_content]($t67) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:122:13+11
    assume {:print "$track_local(84,7,47):", $t67} $t67 == $t67;

    // $t68 := borrow_field<BoxPeer::ContentRegistry>.contents($t56) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:135:27+22
    assume {:print "$at(2,4280,4302)"} true;
    $t68 := $ChildMutation($t56, 0, $Dereference($t56)->$contents);

    // vector::push_back<BoxPeer::Content>($t68, $t67) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:135:9+53
    call $t68 := $1_vector_push_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t68, $t67);
    if ($abort_flag) {
        assume {:print "$at(2,4262,4315)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // write_back[Reference($t56).contents (vector<BoxPeer::Content>)]($t68) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:135:9+53
    $t56 := $UpdateMutation($t56, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry'_contents($Dereference($t56), $Dereference($t68)));

    // write_back[BoxPeer::ContentRegistry@]($t56) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:135:9+53
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_ContentRegistry_$memory, $GlobalLocationAddress($t56),
        $Dereference($t56));

    // $t69 := signer::address_of($t0) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:138:20+27
    assume {:print "$at(2,4368,4395)"} true;
    call $t69 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4368,4395)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t70 := vector::empty<address>() on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:146:25+24
    assume {:print "$at(2,4577,4601)"} true;
    call $t70 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,4577,4601)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t71 := pack BoxPeer::Content($t69, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t70) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:137:22+273
    assume {:print "$at(2,4339,4612)"} true;
    $t71 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content($t69, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t70);

    // opaque begin: event::emit<BoxPeer::Content>($t71) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:149:9+18
    assume {:print "$at(2,4623,4641)"} true;

    // opaque end: event::emit<BoxPeer::Content>($t71) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:149:9+18

    // $t72 := signer::address_of($t0) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:152:20+27
    assume {:print "$at(2,4701,4728)"} true;
    call $t72 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4701,4728)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t73 := vector::empty<address>() on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:160:25+24
    assume {:print "$at(2,4910,4934)"} true;
    call $t73 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,4910,4934)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t74 := pack BoxPeer::Content($t72, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t73) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:151:29+273
    assume {:print "$at(2,4672,4945)"} true;
    $t74 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content($t72, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t73);

    // trace_local[new_content2]($t74) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:151:13+12
    assume {:print "$track_local(84,7,48):", $t74} $t74 == $t74;

    // $t75 := signer::address_of($t0) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:164:20+27
    assume {:print "$at(2,4999,5026)"} true;
    call $t75 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4999,5026)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t76 := vector::empty<address>() on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:172:25+24
    assume {:print "$at(2,5208,5232)"} true;
    call $t76 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,5208,5232)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // $t77 := pack BoxPeer::Content($t75, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t76) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:163:23+273
    assume {:print "$at(2,4970,5243)"} true;
    $t77 := $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content($t75, $t5, $t6, $t7, $t1, $t2, $t3, $t4, $t76);

    // trace_local[event2]($t77) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:163:13+6
    assume {:print "$track_local(84,7,46):", $t77} $t77 == $t77;

    // $t78 := 0x61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:175:78+16
    assume {:print "$at(2,5323,5339)"} true;
    $t78 := 44229399102573857206418508752265751148570194636005926692547808843907490729713;
    assume $IsValid'address'($t78);

    // $t79 := borrow_global<BoxPeer::GlobalContentRegistry>($t78) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:175:37+17
    if (!$ResourceExists($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t78)) {
        call $ExecFailureAbort();
    } else {
        $t79 := $Mutation($Global($t78), EmptyVec(), $ResourceValue($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $t78));
    }
    if ($abort_flag) {
        assume {:print "$at(2,5282,5299)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // trace_local[contract_event_handle]($t79) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:175:13+21
    $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry' := $Dereference($t79);
    assume {:print "$track_local(84,7,44):", $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'} $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry' == $temp_0'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry';

    // $t80 := borrow_field<BoxPeer::GlobalContentRegistry>.contents($t79) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:176:27+35
    assume {:print "$at(2,5368,5403)"} true;
    $t80 := $ChildMutation($t79, 0, $Dereference($t79)->$contents);

    // vector::push_back<BoxPeer::Content>($t80, $t74) on_abort goto L3 with $t52 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:176:9+68
    call $t80 := $1_vector_push_back'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_Content'($t80, $t74);
    if ($abort_flag) {
        assume {:print "$at(2,5350,5418)"} true;
        $t52 := $abort_code;
        assume {:print "$track_abort(84,7):", $t52} $t52 == $t52;
        goto L3;
    }

    // write_back[Reference($t79).contents (vector<BoxPeer::Content>)]($t80) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:176:9+68
    $t79 := $UpdateMutation($t79, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'_contents($Dereference($t79), $Dereference($t80)));

    // $t81 := borrow_field<BoxPeer::GlobalContentRegistry>.content_event_handle($t79) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:177:27+47
    assume {:print "$at(2,5446,5493)"} true;
    $t81 := $ChildMutation($t79, 1, $Dereference($t79)->$content_event_handle);

    // opaque begin: event::emit_event<BoxPeer::Content>($t81, $t77) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:177:9+74

    // opaque end: event::emit_event<BoxPeer::Content>($t81, $t77) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:177:9+74

    // write_back[Reference($t79).content_event_handle (event::EventHandle<BoxPeer::Content>)]($t81) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:177:9+74
    $t79 := $UpdateMutation($t79, $Update'$61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry'_content_event_handle($Dereference($t79), $Dereference($t81)));

    // write_back[BoxPeer::GlobalContentRegistry@]($t79) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:177:9+74
    $61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory := $ResourceUpdate($61c8f3e7ecbcda5dd641c434b277a13b6076c09de32322ce197d2fe3f1e54ef1_BoxPeer_GlobalContentRegistry_$memory, $GlobalLocationAddress($t79),
        $Dereference($t79));

    // label L2 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:178:5+1
    assume {:print "$at(2,5507,5508)"} true;
L2:

    // return () at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:178:5+1
    assume {:print "$at(2,5507,5508)"} true;
    return;

    // label L3 at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:178:5+1
L3:

    // abort($t52) at /Users/prisca/Desktop/aptos/BoxPeer/move/sources/ownership.move:178:5+1
    assume {:print "$at(2,5507,5508)"} true;
    $abort_code := $t52;
    $abort_flag := true;
    return;

}
